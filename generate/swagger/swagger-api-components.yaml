components:
  securitySchemes:
    SignedCookieKeyPairId:
      description: |
        認証/認可には、[sign-url](/docs/api/v2/#operation/getSignedAccessV2) APIで取得した署名付きCookieを使います。
      type: "apiKey"
      in: "cookie"
      name: "CloudFront-Key-Pair-Id"
    SignedCookiePolicy:
      description: |
        認証/認可には、[sign-url](/docs/api/v2/#operation/getSignedAccessV2) APIで取得した署名付きCookieを使います。
      type: "apiKey"
      in: "cookie"
      name: "CloudFront-Policy"
    SignedCookieSignature:
      description: |
        認証/認可には、[sign-url](/docs/api/v2/#operation/getSignedAccessV2) APIで取得した署名付きCookieを使います。
      type: "apiKey"
      in: "cookie"
      name: "CloudFront-Signature"
    AnnofabUser:
      description: |
        Annofabのユーザーなら誰でも利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    AnnofabAdminOnly:
      description: |
        Annofabのシステム管理者のみ利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    AllProjectMember:
      description: |
        プロジェクトに所属するユーザーなら誰でも利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    ProjectAccepter:
      description: |
        プロジェクトのオーナーまたはプロジェクトのチェッカーのみ利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    ProjectDataUser:
      description: |
        プロジェクトのオーナーまたはプロジェクトのアノテーションユーザーのみ利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    ProjectAccepterOrDataUser:
      description: |
        プロジェクトのオーナー/チェッカー/アノテーションユーザーのいずれかのみ利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    ProjectOwner:
      description: |
        プロジェクトのオーナーのみ利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    AllOrganizationMember:
      description: |
        組織に所属するユーザーなら誰でも利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    OrganizationAdministrator:
      description: |
        組織のオーナーまたは組織の管理者のみ利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
    OrganizationOwner:
      description: |
        組織のオーナーのみ利用できます。

        認証/認可には、HTTPリクエストの `Authorization` ヘッダーに格納されたIDトークンを用います。
        IDトークンは [login](/docs/api/#operation/login) または [refreshToken](/docs/api/#operation/refreshToken) API で取得できます。
      type: "apiKey"
      name: "Authorization"
      in: "header"
  responses:
    FileRedirectResponse:
      description: 正常
      headers:
        Location:
          schema:
            $ref: "#/components/schemas/TemporaryUrlString"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TemporaryUrl"
    SuccessMessage:
      description: 成功時のメッセージ
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
    ErrorForbiddenResource:
      description: 権限が不足していて、操作が許可されていない
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorForbiddenResource"
    ErrorMissingResource:
      description: 存在しないリソースを指定された
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMissingResource"
    ErrorUnauthorizedApi:
      description: 認証エラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorUnauthorizedApi"
    ErrorInvalidRequest:
      description: リクエスト形式が正しくない。必要な属性が足りなかったり、属性の値が間違っている
      content:
        application/json:
          schema:
            # TODO このエラー定義には複数のschemaのエラーが該当しうる。それを記述する(KRSANNOFAC-1502)
            $ref: "#/components/schemas/Errors"
    ErrorUnderMaintenance:
      description: システムメンテナンス中
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorUnderMaintenance"
    ErrorRefreshTokenExpired:
      description: リフレッシュトークン有効期限切れのため、明示的にログインする必要があります
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorRefreshTokenExpired"
    ErrorStateMismatch:
      description: サーバー側や他のリクエストの状態により、このリクエストでは更新できない
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorStateMismatch"
  schemas:
    ArrayOfDateRanges:
      type: array
      items:
        $ref: "#/components/schemas/DateRange"
    ArrayOfProjectTaskStatisticsHistory:
      type: array
      items:
        $ref: "#/components/schemas/ProjectTaskStatisticsHistory"
    ArrayOfProjectAccountStatistics:
      type: array
      items:
        $ref: "#/components/schemas/ProjectAccountStatistics"
    ArrayOfInspectionStatistics:
      type: array
      items:
        $ref: "#/components/schemas/InspectionStatistics"
    ArrayOfTaskPhaseStatistics:
      type: array
      items:
        $ref: "#/components/schemas/TaskPhaseStatistics"
    ArrayOfLabelStatistics:
      type: array
      items:
        $ref: "#/components/schemas/LabelStatistics"
    ArrayOfWorktimeStatistics:
      type: array
      items:
        $ref: "#/components/schemas/WorktimeStatistics"
    ProjectCacheRecord:
      type: object
      properties:
        input:
          type: string
        members:
          type: string
        project:
          type: string
        instruction:
          type: string
        specs:
          type: string
        statistics:
          type: string
        organization:
          type: string
        supplementary:
          type: string
    Errors:
      type: object
      required:
        - errors
        - context
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorItem"
        context:
          type: object
          description: 内部補足情報
    ErrorItem:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
          description: エラーの概要
        ext:
          type: object
          description: 補足情報
    ErrorInvalidBody:
      $ref: '#/components/schemas/Errors'
    ErrorInvalidQueryParam:
      $ref: '#/components/schemas/Errors'
    ErrorMissingNecessaryQueryParam:
      $ref: '#/components/schemas/Errors'
    ErrorInvalidPath:
      $ref: '#/components/schemas/Errors'
    ErrorUnauthorizedApi:
      $ref: '#/components/schemas/Errors'
    ErrorLoginFailed:
      $ref: '#/components/schemas/Errors'
    ErrorPasswordResetRequired:
      $ref: '#/components/schemas/Errors'
    ErrorExpiredToken:
      $ref: '#/components/schemas/Errors'
    ErrorRefreshTokenExpired:
      $ref: '#/components/schemas/Errors'
    ErrorForbiddenResource:
      $ref: '#/components/schemas/Errors'
    ErrorMissingResource:
      $ref: '#/components/schemas/Errors'
    ErrorTimeout:
      $ref: '#/components/schemas/Errors'
    ErrorAlreadyUpdated:
      $ref: '#/components/schemas/Errors'
    ErrorStateMismatch:
      $ref: '#/components/schemas/Errors'
    ErrorInternalServerError:
      $ref: '#/components/schemas/Errors'
    ErrorUnderMaintenance:
      $ref: '#/components/schemas/Errors'
    DateRange:
      type: object
      description: 日付の期間
      required:
        - from
        - to
      properties:
        from:
          type: string
          format: date
          description: 期間の開始日（ISO 8601 拡張形式）
        to:
          type: string
          format: date
          description: 期間の終了日（ISO 8601 拡張形式）
    Message:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: メッセージ
        message_id:
          type: string
          description: システム内部用のプロパティ
    InternationalizationMessage:
      type: object
      required:
        - messages
        - default_lang
      properties:
        messages:
          type: array
          description: |
            言語コードとメッセージ（テキスト）のリスト。

            * アノテーションエディタなどでは、Annofabの表示言語（各ユーザーが個人設定で選んだ言語）のメッセージが使われます
            * 以下の名前は、[Simple Annotation](#tag/x-annotation-zip/Simple-Annotation-ZIP) では `en-US` のメッセージが使われます
                * ラベル名
                * 属性名
                * 選択肢名
            * いずれの場合でも、表示しようとした言語が `messages` に含まれない場合、 `default_lang` に指定した言語のメッセージが使われます
          items:
            type: object
            required:
              - lang
              - message
            properties:
              lang:
                type: string
                description: 言語コード。`en-US` (英語) 、`ja-JP` (日本語)、 `vi-VN`（ベトナム語）のみサポートしています。
                example: en-US
              message:
                type: string
                description: lang で指定された言語でのメッセージ
        default_lang:
          type: string
          example: ja-JP
          description: 希望された言語のメッセージが存在しない場合に、フォールバック先として使われる言語コード
    SignUpRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    ConfirmSignUpRequest:
      type: object
      required:
        - account_id
        - user_id
        - password
        - username
        - lang
        - keylayout
        - confirmation_code
      properties:
        account_id:
          $ref: "#/components/schemas/AccountId"
        user_id:
          $ref: "#/components/schemas/UserId"
        password:
          type: string
        username:
          type: string
        lang:
          $ref: "#/components/schemas/Lang"
        keylayout:
          $ref: "#/components/schemas/KeyLayout"
        confirmation_code:
          type: string
    LoginRequest:
      type: object
      required:
        - user_id
        - password
      properties:
        user_id:
          $ref: "#/components/schemas/UserId"
        password:
          type: string
          format: password
          description: パスワード
    PostExchangeCodeResponse:
      oneOf:
        - $ref: "#/components/schemas/PostExchangeCodeLoginResponse"
        - $ref: "#/components/schemas/UnconfirmedUserResponse"
      discriminator:
        propertyName: "_type"
        mapping:
          PostExchangeCodeLoginResponse: "#/components/schemas/PostExchangeCodeLoginResponse"
          UnconfirmedUserResponse: "#/components/schemas/UnconfirmedUserResponse"
    PostExchangeCodeLoginResponse:
      type: object
      required:
       - token
      properties:
        token:
          $ref: "#/components/schemas/Token"
    UnconfirmedUserResponse:
      type: object
      required:
        - temporary_token
      properties:
        temporary_token:
          $ref: "#/components/schemas/Token"
    LoginResponse:
      oneOf:
        - $ref: "#/components/schemas/LoginSucceedResponse"
        - $ref: "#/components/schemas/LoginNeedChallengeResponse"
      discriminator:
        propertyName: "_type"
        mapping:
          LoginSucceed: "#/components/schemas/LoginSucceedResponse"
          NeedChallenge: "#/components/schemas/LoginNeedChallengeResponse"
    LoginSucceedResponse:
      type: object
      required:
       - token
      properties:
        token:
          $ref: "#/components/schemas/Token"
    LoginNeedChallengeResponse:
      type: object
      required:
       - session
      properties:
        session:
          type: string
          description: セッション
    LoginRespondToAuthChallengeRequest:
      type: object
      required:
        - user_id
        - mfa_code
        - session
      properties:
        user_id:
          $ref: "#/components/schemas/UserId"
        mfa_code:
          type: string
          description: MFAコード。Time-based One-time Password (TOTP) のみ対応している
        session:
          type: string
          description: |
            [login API](#operation/login)が返したセッション
    PostMfaSettingRequest:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
          description: MFAをONにするか
        mfa_code:
          type: string
          description: |
            [initiateMfaSetup](#operation/initiateMfaSetup)が返したシークレットコードを元に生成したTOTP。enabledがtrueの場合に設定する
        access_token:
          type: string
          description: アクセストークン。enabledがtrueの場合に設定する
    GetMfaSettingResponse:
      $ref: "#/components/schemas/MfaSetting"
    PostMfaSettingResponse:
      $ref: "#/components/schemas/MfaSetting"
    MfaSetting:
      type: object
      required:
        - enabled
        - is_updatable
      properties:
        enabled:
          type: boolean
          description: MFAが有効か (trueの場合に有効)
        is_updatable:
          type: boolean
          description: |
            MFA設定を更新可能か (falseの場合、MFA設定の更新不可)。「Sign in with Google」でログインしたユーザーがAPIを実行した場合falseとなる。
    Token:
      type: object
      required:
       - id_token
       - access_token
       - refresh_token
      description: トークン情報
      properties:
        id_token:
          type: string
          description: IDトークン。HTTPリクエストの`Authorization`ヘッダーにIDトークンを指定することで、APIは認証されます。
        access_token:
          type: string
          description: アクセストークン
        refresh_token:
          type: string
          description: リフレッシュトークン
    InitiateMfaSetupRequest:
      type: object
      required:
        - access_token
      properties:
        access_token:
          description: |
            アクセストークン。[login](#operation/login) APIで取得します。
          type: string
    InitiateMfaSetupResponse:
      type: object
      required:
        - secret_code
        - qr_code_data
      properties:
        secret_code:
          description: |
            TOTPアルゴリズムでワンタイムコードを生成するために使用される、一意に生成された共有秘密コードです。
          type: string
        qr_code_data:
          description: |
            MFAを有効化する際、認証アプリで読み込むQRコードに埋め込むデータです。Google AuthenticatorとIIJ SmartKeyに対応しています。
          type: string
    RefreshTokenRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          description: |
            リフレッシュトークン。[login](#operation/login) APIで取得します。
          type: string
    PluginTokenRequest:
      oneOf:
        - $ref: "#/components/schemas/PluginTokenRequestAuthorizationCode"
        - $ref: "#/components/schemas/PluginTokenRequestRefreshToken"
      discriminator:
        propertyName: "_type"
        mapping:
          AuthorizationCode: "#/components/schemas/PluginTokenRequestAuthorizationCode"
          RefreshToken: "#/components/schemas/PluginTokenRequestRefreshToken"
    PluginTokenRequestAuthorizationCode:
      type: object
      required:
        - _type
        - authorization_code
        - code_verifier
      properties:
        _type:
          type: string
          default: AuthorizationCode
          description: "`AuthorizationCode` を指定します"
        authorization_code:
          type: string
          description: リダイレクト時にクエリパラメータ `code` として受け取った文字列
        code_verifier:
          type: string
          description: 認可リクエスト時に渡した `code_challenge` に対応するverifier文字列
    PluginTokenRequestRefreshToken:
      type: object
      required:
        - _type
        - refresh_token
      properties:
        _type:
          type: string
          default: RefreshToken
          description: "`RefreshToken` を指定します"
        refresh_token:
          type: string
          description: 前回のトークン発行で得られた `refresh_token`
    PluginTokenResponse:
      type: object
      required:
        - access_token
        - refresh_token
      properties:
        access_token:
          type: string
          description: |
            APIアクセスに用いるトークン。
            リクエストヘッダにおいて `Authorization: Bearer {access_token}` の形で指定します。
        refresh_token:
          type: string
          description: トークンの更新に用いるトークン
    IssueProjectTokenRequest:
      type: object
      required:
        - project_id
        - description
      properties:
        project_id:
          type: string
          description: プロジェクトトークンの発行対象プロジェクトID
        description:
          type: string
          description: 発行するトークンについての人間可読な説明
    ProjectToken:
      type: object
      required:
        - project_id
        - token
        - info
      properties:
        project_id:
          type: string
          description: プロジェクトトークンの発行対象プロジェクトID
        token:
          type: string
          description: プロジェクトトークン文字列。 [issueProjectGuestUserToken](#operation/issueProjectGuestUserToken)への入力となります。
        info:
          $ref: "#/components/schemas/ProjectTokenInfo"
    ProjectTokenInfo:
      type: object
      description: プロジェクトトークンについての付加情報
      required:
        - created_date_time
        - last_used_date_time
        - description
      properties:
        created_date_time:
          type: string
          format: date-time
          description: トークンの作成日時
        last_used_date_time:
          type: string
          format: date-time
          description: トークンが最後に利用された日時
        description:
          type: string
          description: トークンについての人間可読な説明
    RevokeProjectTokenRequest:
      type: object
      required:
        - project_id
        - project_token
      properties:
        project_id:
          type: string
          description: 無効化するトークンが所属しているプロジェクトのID
        project_token:
          type: string
          description: "[issueProjectToken](#operation/issueProjectToken)で発行されたトークン文字列"
    IssueProjectGuestUserTokenRequest:
      type: object
      required:
        - project_id
        - app_token
        - project_token
        - role
        - profile
      properties:
        project_id:
          type: string
          description: ゲストユーザーがアクセスするプロジェクトのID
        app_token:
          type: string
          description: ゲストユーザートークンを要求するアプリケーションに提供されているトークン
        project_token:
          type: string
          description: "[issueProjectToken](#operation/issueProjectToken)で発行されたトークン文字列"
        role:
          type: string
          enum:
            - worker
            - accepter
          description: |
            ゲストユーザーのプロジェクト上でのロール
            * `worker` - アノテーター
            * `accepter` - チェッカー
        profile:
          $ref: "#/components/schemas/ProjectGuestUserProfile"
    ProjectGuestUserProfile:
      description: ゲストユーザーのプロフィール情報
      type: object
      required:
        - user_id
        - user_name
        - lang
        - key_layout
      properties:
        user_id:
          type: string
          description: ゲストユーザーのIDです。 同じ文字列の場合、同じゲストユーザーとして認識されます。 [値の制約についてはこちら。](#section/API-Convention/APIID)
        user_name:
          $ref: "#/components/schemas/Username"
        lang:
          type: string
          enum:
            - en-US
            - ja-JP
            - vi-VN
          description: ゲストユーザーのUIの表示言語です
        key_layout:
          $ref: "#/components/schemas/KeyLayout"
    ProjectGuestUserTokenResponse:
      # 全く同じ説明になるので PluginTokenResponse を使っている。 名前を変えてしまうべきか？
      $ref: "#/components/schemas/PluginTokenResponse"
    ChangePasswordRequest:
      type: object
      required:
        - user_id
        - old_password
        - new_password
      properties:
        user_id:
          $ref: "#/components/schemas/UserId"
        old_password:
          type: string
        new_password:
          type: string
    PasswordResetRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    ConfirmResetPasswordRequest:
      type: object
      required:
        - user_id
        - confirmation_code
        - new_password
      properties:
        user_id:
          $ref: "#/components/schemas/UserId"
        confirmation_code:
          type: string
        new_password:
          type: string
        is_reset_mfa:
          type: boolean
          default: false
          description: MFA設定をリセットするか。trueの場合にリセットする。
    ResetEmailRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    ConfirmResetEmailRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    VerifyEmailRequest:
      type: object
      required:
        - token
      properties:
        token:
          $ref: "#/components/schemas/Token"
    ConfirmVerifyEmailRequest:
      type: object
      required:
        - token
        - confirmation_code
      properties:
        token:
          $ref: "#/components/schemas/Token"
        confirmation_code:
          type: string
    ConfirmAccountDeleteRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    Account:
      type: object
      required:
        - account_id
        - user_id
        - username
        - email
        - lang
        - keylayout
        - authority
        - account_type
        - updated_datetime
      properties:
        account_id:
          $ref: "#/components/schemas/AccountId"
        user_id:
          $ref: "#/components/schemas/UserId"
        username:
          $ref: "#/components/schemas/Username"
        email:
          $ref: "#/components/schemas/Email"
        lang:
          $ref: "#/components/schemas/Lang"
        biography:
          $ref: "#/components/schemas/UserBiography"
        keylayout:
          $ref: "#/components/schemas/KeyLayout"
        authority:
          type: string
          description: システム内部用のプロパティ
        account_type:
          type: string
          enum:
            - "annofab"
            - "external"
            - "project_guest"
          description: |
            アカウントの種別
            * `annofab` - 通常の手順で登録されたアカウント。後から[外部アカウントとの紐付け](/docs/faq/#yyyub0)をしたアカウントの場合もこちらになります。
            * `external` - [外部アカウントだけで作成したアカウント](/docs/faq/#v1u344)
            * `project_guest` - [issueProjectGuestUserToken](#operation/issueProjectGuestUserToken)によって作成されたされたアカウント
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    Lang:
      type: string
      enum:
        - en-US
        - ja-JP
        - vi-VN
      description: |
        表示言語
        * `ja-JP` - 日本語
        * `en-US` - 英語
        * `vi-VN` - ベトナム語
    KeyLayout:
      type: string
      enum:
        - ja-JP
        - en-US
        - other
      description: |
        キーボードレイアウト
        * `ja-JP` - 日本語(106/109)配列
        * `en-US` - 英語(101/104)配列
        * `other` - その他
    MyAccount:
      allOf:
        - $ref: "#/components/schemas/Account"
        - type: object
          required:
            - errors
          properties:
            reset_requested_email:
              description: システム内部用のプロパティ
              type: string
              format: email
            errors:
              description: システム内部用のプロパティ
              type: array
              items:
                type: string
    PutMyAccountRequest:
      type: object
      required:
        - user_id
        - username
        - lang
        - keylayout
      properties:
        user_id:
          $ref: "#/components/schemas/UserId"
        username:
          $ref: "#/components/schemas/Username"
        lang:
          $ref: "#/components/schemas/Lang"
        keylayout:
          $ref: "#/components/schemas/KeyLayout"
        biography:
          $ref: "#/components/schemas/UserBiography"
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
    LastUpdatedDatetime:
      type: string
      format: date-time
      description: |
        新規作成時は未指定、更新時は必須（更新前の日時）
    AcceptOrganizationInvitationRequest:
      type: object
      required:
       - token
      properties:
        token:
          type: string
          description: |
            [inviteOrganizationMember](#operation/inviteOrganizationMember) APIで送信された招待メールに記載されているトークンです。
            メールに記載されているURLの`invitation-token`クエリパラメータの値が、トークンになります。
    OrganizationActivity:
      type: object
      required:
        - organization_id
        - created_datetime
        - storage_usage_bytes
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        storage_usage_bytes:
          type: integer
          description: Annofabストレージの使用量[バイト]
    Organization:
      type: object
      required:
        - organization_id
        - organization_name
        - email
        - price_plan
        - summary
        - created_datetime
        - updated_datetime
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        organization_name:
          $ref: "#/components/schemas/OrganizationName"
        email:
          $ref: "#/components/schemas/Email"
        price_plan:
          $ref: "#/components/schemas/PricePlan"
        summary:
          $ref: "#/components/schemas/OrganizationSummary"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    OrganizationCacheRecord:
      type: object
      properties:
        members:
          type: string
        organization:
          type: string
    OrganizationSummary:
      description: |
        廃止予定のプロパティです。常に中身は空です。
      deprecated: true
      type: object
      properties: {}
    PricePlan:
      type: string
      enum:
        - free
        - business
      description: |
        料金プラン
        * `free` - フリープラン
        * `business` - ビジネスプラン
    OrganizationMember:
      type: object
      required:
        - organization_id
        - account_id
        - user_id
        - username
        - role
        - status
        - created_datetime
        - updated_datetime
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        account_id:
          $ref: "#/components/schemas/AccountId"
        user_id:
          $ref: "#/components/schemas/UserId"
        username:
          $ref: "#/components/schemas/Username"
        role:
          $ref: "#/components/schemas/OrganizationMemberRole"
        status:
          $ref: "#/components/schemas/OrganizationMemberStatus"
        biography:
          $ref: "#/components/schemas/UserBiography"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    OrganizationMemberRole:
      type: string
      enum:
        - owner
        - administrator
        - contributor
      description: |
        組織メンバーのロール。
        * `owner` - 組織オーナー
        * `administrator` - 組織管理者
        * `contributor` - 組織貢献者
    OrganizationMemberStatus:
      type: string
      enum:
        - active
        - waiting_response
        - inactive
      description: |
        組織メンバーのステータス。
        * `active` - 組織メンバーとして有効で、組織を閲覧したり、権限があれば編集できます。
        * `waiting_response` - 組織に招待され、まだ加入/脱退を返答していません。組織の一部を閲覧のみできます。
        * `inactive` - 脱退したメンバーを表します。組織を閲覧できません。
    OrganizationPlugin:
      type: object
      required:
        - organization_id
        - plugin_id
        - detail
        - is_builtin
        - project_extra_data_kinds
        - created_datetime
        - updated_datetime
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        plugin_id:
          $ref: "#/components/schemas/PluginId"
        plugin_name:
          $ref: "#/components/schemas/PluginName"
        description:
          $ref: "#/components/schemas/PluginDescription"
        detail:
          $ref: "#/components/schemas/PluginDetail"
        is_builtin:
          type: boolean
          description: trueの場合、プラグインはAnnofab組み込みのプラグインであり、更新や削除を行うことはできません。
        project_extra_data_kinds:
          type: array
          description: |
            このプラグインが適用されたプロジェクトで使用可能となるProjectExtraDataKindのId列。
          items:
            $ref: "#/components/schemas/ProjectExtraDataKindId"
        created_datetime:
          type: string
          format: date-time
        updated_datetime:
          type: string
          format: date-time
    PutOrganizationPluginRequest:
      type: object
      required:
        - detail
      properties:
        plugin_name:
          $ref: "#/components/schemas/PluginName"
        description:
          $ref: "#/components/schemas/PluginDescription"
        project_extra_data_kinds:
          type: array
          description: |
            プラグインが適用されたプロジェクトで使用可能となるProjectExtraDataKindのId列。
          items:
            $ref: "#/components/schemas/ProjectExtraDataKindId"
        detail:
          $ref: "#/components/schemas/PluginDetail"
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
    PluginId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        プラグインID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    PluginName:
      type: string
      example: "foo-bar"
      description: |
        プラグインの名前です。
        プラグイン一覧や、プロジェクトで使うプラグインを選ぶときなどに表示されます。
    PluginDescription:
      type: string
      example: "desc"
      description: |
        プラグインの説明です。
        プラグイン一覧や、プロジェクトで使うプラグインを選ぶときなどに表示されます。
    PluginDetail:
      description: |
        * `PluginDetailAnnotationEditor` - カスタムアノテーションエディタ用のプラグインを表します。
        * `PluginDetailTaskAssignment` - カスタムタスク割当用のプラグインを表します。
        * `PluginDetailAnnotationSpecs` - カスタムアノテーション仕様用のプラグインを表します。
        * `PluginDetailExtendedAnnotationSpecs` - カスタムのアノテーション種別を作成するプラグインを表します。
      oneOf:
        - $ref: "#/components/schemas/PluginDetailAnnotationEditor"
        - $ref: "#/components/schemas/PluginDetailTaskAssignment"
        - $ref: "#/components/schemas/PluginDetailAnnotationSpecs"
        - $ref: "#/components/schemas/PluginDetailExtendedAnnotationSpecs"
      discriminator:
        propertyName: "_type"
        mapping:
          AnnotationEditor: "#/components/schemas/PluginDetailAnnotationEditor"
          TaskAssignment: "#/components/schemas/PluginDetailTaskAssignment"
          AnnotationSpecs: "#/components/schemas/PluginDetailAnnotationSpecs"
          ExtendedAnnotationSpecs: "#/components/schemas/PluginDetailExtendedAnnotationSpecs"
    PluginDetailAnnotationEditor:
      type: object
      description: |
        カスタムアノテーションエディタ用のプラグインを表します。
      required:
        - compatible_input_data_types
      properties:
        plugin_compatibility:
          $ref: "#/components/schemas/OrganizationPluginCompatibility"
        url:
          $ref: "#/components/schemas/AnnotationEditorUrl"
        auth_redirect_url:
          type: string
          description: |
            認証後のリダイレクト先。このURLに `?code=xxx` をつけてリダイレクトされます。
            url プロパティとは異なり、 `{projectId}` や `{taskId}` といったパラメータの置換は行われません。

            詳しくは [requestPluginToken API](#operation/requestPluginToken) を参照してください。
          example: "https://example.com/my/editors"
        compatible_input_data_types:
          $ref: "#/components/schemas/PluginCompatibleInputDataTypes"
        _type:
          type: string
          description: |
            `AnnotationEditor`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "AnnotationEditor"
    PluginDetailTaskAssignment:
      type: object
      description: |
        カスタムタスク割当用のプラグインを表します。
      properties:
        plugin_compatibility:
          $ref: "#/components/schemas/OrganizationPluginCompatibility"
        url:
          $ref: "#/components/schemas/TaskAssignmentUrl"
        _type:
          type: string
          description: |
            `TaskAssignment`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "TaskAssignment"
    PluginDetailAnnotationSpecs:
      type: object
      description: |
        カスタムアノテーション仕様用のプラグインを表します。
      required:
        - compatible_input_data_types
      properties:
        plugin_compatibility:
          $ref: "#/components/schemas/OrganizationPluginCompatibility"
        url:
          $ref: "#/components/schemas/AnnotationSpecsUrl"
        auth_redirect_url:
          type: string
          description: |
            認証後のリダイレクト先
        compatible_input_data_types:
          $ref: "#/components/schemas/PluginCompatibleInputDataTypes"
        _type:
          type: string
          description: |
            `AnnotationSpecs`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "AnnotationSpecs"
    PluginDetailExtendedAnnotationSpecs:
      type: object
      description: |
        カスタムのアノテーション種別を作成するプラグインを表します。
        なお、このプラグインが設定されているプロジェクトでは、ここで指定したアノテーション種別以外は使用できなくなります。
      required:
        - annotation_types
        - compatible_input_data_types
      properties:
        plugin_compatibility:
          $ref: "#/components/schemas/OrganizationPluginCompatibility"
        annotation_types:
          type: array
          description: |
            プラグインを使用したプロジェクトで選択可能なアノテーション種別のリストです。
            同じ種別を重複して設定することはできません。
          items:
            $ref: "#/components/schemas/AnnotationType"
        user_defined_annotation_type_definitions:
          type: object
          description: |
            Keyが[アノテーションの種類(AnnotationType)](#tag/x-data-types/AnnotationType)であるDictionaryです。
          additionalProperties:
            $ref: "#/components/schemas/UserDefinedAnnotationTypeDefinition"
        compatible_input_data_types:
          $ref: "#/components/schemas/PluginCompatibleInputDataTypes"
        _type:
          type: string
          description: |
            `ExtendedAnnotationSpecs`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "ExtendedAnnotationSpecs"
    PluginCompatibleInputDataTypes:
      type: array
      items:
        $ref: "#/components/schemas/InputDataType"
      example: ["custom"]
      description: |
        プラグインが対応している入力データです。
        プラグイン種別がカスタムアノテーションエディタ、またはカスタムアノテーション仕様の場合のみ有効です。
    OrganizationPluginCompatibility:
      type: object
      required:
        - input
        - output
      properties:
        input:
          $ref: "#/components/schemas/OrganizationPluginCompatibilityType"
        output:
          $ref: "#/components/schemas/OrganizationPluginCompatibilityType"
      description:
        プラグイン間の互換性を表します。未指定の場合はinput、outputともに`Top`の`OrganizationPluginCompatibilityType`が設定されます。
    OrganizationPluginCompatibilityType:
      oneOf:
        - $ref: "#/components/schemas/OrganizationPluginCompatibilityTypeTop"
        - $ref: "#/components/schemas/OrganizationPluginCompatibilityTypeBottom"
        - $ref: "#/components/schemas/OrganizationPluginCompatibilityTypeConstant"
      description: |
        プラグインの入力/出力を表す型です。
    OrganizationPluginCompatibilityTypeTop:
      type: object
      properties:
        _type:
          type: string
          enum:
            - Top
          description: |
            inputに指定した場合、あらゆるプラグインの後段になれることを示します。
            outputに指定した場合、入力がTopであるプラグインだけが後段になれることを示します。
    OrganizationPluginCompatibilityTypeBottom:
      type: object
      properties:
        _type:
          type: string
          enum:
            - Bottom
          description: |
            inputに指定した場合、いずれのプラグインも前段になれないことを示します。
            outputに指定した場合、いずれのプラグインも後段になれないことを示します。
    OrganizationPluginCompatibilityTypeConstant:
      type: object
      properties:
        _type:
          type: string
          enum:
            - Constant
          description: |
            Constant型で、かつidの値が一致している場合に互換性があることを示します。
        id:
          type: string
    AnnotationEditorUrl:
      type: string
      example: "https://example.com/my/editors?p={projectId}&t={taskId}"
      description: |
        カスタムアノテーションエディタでタスクを開くための URL です。
        プラグインを使用するプロジェクトのタスク一覧などで使用されます。
        プラグイン種別がカスタムアノテーションエディタの場合のみ有効です。

        この URL には、タスクを特定するための以下のパラメータを必ず埋め込んでください。

        * `{projectId}`
        * `{taskId}`

        以下のパラメーターは任意で指定します。

        * `{inputDataId}`: アノテーション一覧などから、特定の入力データにフォーカスした状態でタスクを開くときなどに指定します。
        * `{annotationId}`: アノテーション一覧などから、特定のアノテーションにフォーカスした状態でタスクを開くときなどに指定します。
    TaskAssignmentUrl:
      type: string
      example: "https://example.com/my/editors?p={projectId}&t={taskId}"
      description: |
        「カスタムタスク割当API」のURLです。
        プラグイン種別がカスタムタスク割当の場合のみ有効です。

        #### カスタムタスク割当APIについて。

        * 独自のアルゴリズムで作業者にタスクを割当するAPIです。
        * Annofabから提供されるものではなく、第三者 (ユーザー様) が用意します。
        * 作業者がタスク一覧やアノテーションエディタのタスク取得ボタンを押すと、指定したURLに複数の情報 (※1) と共にHTTPリクエスト (POST) が送られます。
        * カスタムタスク割当APIでは、Annofabで提供しているAPI (※2) を使用して作業者にタスクを割当してください。
        * タスクの割当に成功した場合は以下のHTTPレスポンスを返却してください。
          * レスポンスヘッダ: `Access-Control-Allow-Origin: https://annofab.com`
          * レスポンスボディ: 割当した単一の[タスク](https://annofab.com/docs/api/#tag/x-data-types/Task)
          * ステータスコード: 200
        * 作業者に割当できるタスクがない場合は以下のHTTPレスポンスを返却してください。
          * レスポンスヘッダ: `Access-Control-Allow-Origin: https://annofab.com`
          * レスポンスボディ: `{"errors": [{"error_code": "MISSING_RESOURCE"}]}`
          * ステータスコード: 404
        * 作業者の認証トークンの期限が切れている場合があります。その場合は以下のHTTPレスポンスを返却してください。
          * レスポンスヘッダ: `Access-Control-Allow-Origin: https://annofab.com`
          * レスポンスボディ: `{"errors": [{"error_code": "EXPIRED_TOKEN"}]}`
          * ステータスコード: 401

        #### Preflightリクエストについて。

        * Annofabからカスタムタスク割当APIへCross-OriginなHTTPリクエストを送信するより前に、ブラウザの仕様により「Preflightリクエスト」と呼ばれるHTTPリクエストが送られます。
        * カスタムタスク割当を利用するためには、カスタムタスク割当APIとは別に「Preflightリクエスト対応API」を用意する必要があります。
        * 以下の要件を満たす「Preflightリクエスト対応API」を用意してください。
          * URL: カスタムタスク割当APIと同じURL
          * HTTPメソッド: OPTIONS
          * レスポンスヘッダ:
            * `Access-Control-Allow-Origin: https://annofab.com`
            * `Access-Control-Allow-Headers: Content-Type`
          * レスポンスボディ: 空(から)
          * ステータスコード: 200

        ※1 以下の情報が送られます。

        * HTTPボディ (JSON形式)
          * `authorization_token` : タスク割当専用の認証トークン。AnnofabのAPIを利用する際に使用します。
          * `project_id` : タスクの割当リクエストが行われたプロジェクトのID。
          * `phase` : 作業者が割当を要求したタスクフェーズ。このフェーズのタスクを割当してください。

        ※2 例えば以下のAPIがあります。(詳しい情報はAPIドキュメントを参照してください)

        * `getMyAccount` : 作業者のアカウント情報を取得できます。
        * `getTasks` : プロジェクトのタスクを取得できます。
        * `assignTasks` : 作業者にタスクを割当することができます。
    AnnotationSpecsUrl:
      type: string
      example: "https://example.com/my/specs?p={projectId}"
      description: |
        カスタムアノテーション仕様画面の URL です。
        プラグイン種別がカスタムアノテーション仕様の場合のみ有効です。

        この URL には、プロジェクトを特定するための以下のパラメータを必ず埋め込んでください。

        * `{projectId}`
    MyOrganization:
      type: object
      required:
        - organization_id
        - name
        - email
        - price_plan
        - summary
        - created_datetime
        - updated_datetime
        - my_role
        - my_status
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        name:
          type: string
        email:
          type: string
          format: email
        price_plan:
          $ref: "#/components/schemas/PricePlan"
        summary:
          $ref: "#/components/schemas/OrganizationSummary"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
        my_role:
          $ref: "#/components/schemas/OrganizationMemberRole"
        my_status:
          $ref: "#/components/schemas/OrganizationMemberStatus"
    OrganizationRegistrationRequest:
      type: object
      required:
        - organization_name
        - organization_email
      properties:
        organization_name:
          $ref: "#/components/schemas/OrganizationName"
        organization_email:
          $ref: "#/components/schemas/Email"
    PutOrganizationRequest:
      type: object
      required:
        - organization_name
        - last_updated_datetime
      properties:
        organization_name:
          $ref: "#/components/schemas/OrganizationName"
          description: |
            組織名。
            現在の組織名と異なる値を指定してください。同じ名前の組織が既に存在する場合は、400エラーが発生します。
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
    PutOrganizationMemberRoleRequest:
      type: object
      required:
        - role
      properties:
        role:
          $ref: "#/components/schemas/OrganizationMemberRole"
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
    InviteOrganizationMemberRequest:
      type: object
      required:
        - role
      properties:
        role:
          $ref: "#/components/schemas/OrganizationMemberRole"
    Email:
      type: string
      format: email
      description: メールアドレス
    AccountId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        アカウントID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    UserId:
      type: string
      example: "john_doe"
      description: |
        ユーザーID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    Username:
      type: string
      example: "John Doe"
      description: ユーザー名
    UserCacheRecord:
      type: object
      properties:
        account:
          type: string
        members:
          type: string
        organizations:
          type: string
    OrganizationId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        組織ID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    OrganizationName:
      type: string
      example: "sample-organization"
      description: |
        組織名。[値の制約についてはこちら。](#section/API-Convention/APIID)
    ProjectId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        プロジェクトID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    LabelId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        ラベルID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    AdditionalDataDefinitionId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        属性ID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    ChoiceId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        選択肢ID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    PhraseId:
      type: string
      example: "my_phrase_id"
    TaskId:
      type: string
      example: "task_001"
      description: |
        タスクID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    InputDataId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        入力データID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    InputDataSetId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        入力データセットID(システム内部用のプロパティ)。[値の制約についてはこちら。](#section/API-Convention/APIID)
    SupplementaryDataId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        補助情報ID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    TaskHistoryId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        タスク履歴ID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    AnnotationId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        アノテーションID。[値の制約についてはこちら。](#section/API-Convention/APIID)

        `annotation_type`が`classification`の場合は label_id と同じ値が格納されます。
    InspectionId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        検査ID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    InstructionImageId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        作業ガイド画像ID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    CommentId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        コメントのID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    MarkerId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        マーカーID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    JobId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        ジョブID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    WebhookId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        WebhookID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    NotificationMessageId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        通知メッセージID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    PersonalAccessTokenId:
      type: string
      example: "my-personal-access-token"
      description: |
        パーソナルアクセストークンのID。ユーザごとに一意な文字列。 [値の制約についてはこちら。](#section/API-Convention/APIID)
    Duration:
      type: string
      example: "PT34H17M36.789S"
    UserBiography:
      type: string
      description: |
        人物紹介、略歴。

        この属性は、Annofab外の所属先や肩書などを表すために用います。
        Annofab上の「複数の組織」で活動する場合、本籍を示すのに便利です。
      minLength: 0
      maxLength: 100
      example: "Annotation Manager, ABC Company"
    AnnotationFormatVersion:
      type: string
      example: "1.0.0"
      description: |
        アノテーションフォーマットのバージョンです。
        アノテーションフォーマットとは、プロジェクト個別のアノテーション仕様ではなく、Annofabのアノテーション構造のことです。
        したがって、アノテーション仕様を更新しても、このバージョンは変化しません。

        バージョンの読み方と更新ルールは、業界慣習の[Semantic Versioning](https://semver.org/)にもとづきます。

        JSONに出力されるアノテーションフォーマットのバージョンは、アノテーションZIPが作成される時点のものが使われます。
        すなわち、`1.0.0`の時点のタスクで作成したアノテーションであっても、フォーマットが `1.0.1` に上がった次のZIP作成時では `1.0.1` となります。
        バージョンを固定してZIPを残しておきたい場合は、プロジェクトが完了した時点でZIPをダウンロードして保管しておくか、またはプロジェクトを「停止中」にします。
    Project:
      type: object
      required:
        - project_id
        - organization_id
        - title
        - project_status
        - input_data_type
        - created_datetime
        - updated_datetime
        - configuration
        - summary
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        title:
          type: string
          description: プロジェクトのタイトル
        overview:
          type: string
          description: プロジェクトの概要
        project_status:
          $ref: "#/components/schemas/ProjectStatus"
        input_data_type:
          $ref: "#/components/schemas/InputDataType"
        configuration:
          $ref: "#/components/schemas/ProjectConfigurationGet"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
        summary:
          $ref: "#/components/schemas/ProjectSummary"
    ProjectStatus:
      type: string
      enum:
        - active
        - suspended
        - initializing
      description: |
        プロジェクトの状態
        * `active` - プロジェクトが進行中
        * `suspended` - プロジェクトが停止中
        * `initializing` - プロジェクトが初期化中
    AssigneeRuleOfResubmittedTask:
      type: string
      enum:
        - no_assignee
        - fixed
      description: |
        再提出されたタスクの検査/受入担当者の割当方法
        * `no_assignee` - 以前の担当者で固定せず、未割当てにします。
        * `fixed` - 以前の担当者が再度担当します。以前の担当者がいない(1回目の検査/受入)場合は未割当てになります。
      default: no_assignee
    InputDataType:
      type: string
      description: |
        アノテーションする入力データの種類。
        * `image` - 画像
        * `movie` - 動画
        * `custom` - カスタム
      enum:
        - image
        - movie
        - custom
    MaxTasksPerMember:
      type: integer
      description: |
        保留中のタスクを除き、1人（オーナー以外）に割り当てられるタスク数の上限。
      default: 10
      minimum: 1
      maximum: 100
    NumberOfInspections:
      type: integer
      description: |
        検査回数。
        * 0回：教師付け -> 受入
        * 1回：教師付け -> 検査 -> 受入
        * n回(n >= 2)：教師付け -> 検査1 -> ... -> 検査n -> 受入
      default: 0
      minimum: 0
    MaxTasksPerMemberIncludingHold:
      type: integer
      description: |
        保留中のタスクを含めて、1人（オーナー以外）に割り当てられるタスク数上限の保留分。
        割り当て時の上限チェックは、max_tasks_per_memberとこの数字の合計で行われます。

        例えばmax_tasks_per_memberが10、max_tasks_per_member_including_holdが20の場合、保留中を含むタスク数の割り当て上限は30になります。
      default: 20
      minimum: 1
      maximum: 100
    InputDataSetIdList:
      description: |
        システム内部用のプロパティ。
        [putProject](#operation/putProject) APIでプロジェクトを更新する際は、[getProject](#operation/getProject) APIで取得した値を指定してください。
      type: array
      items:
        $ref: "#/components/schemas/InputDataSetId"
      example: []
    InputDataMaxLongSideLength:
      type: integer
      description: |
        入力データ画像の長辺の最大値（未指定時は4096px）。

        画像をアップロードすると、長辺がこの値になるように画像が自動で圧縮されます。
        アノテーションの座標は、もとの解像度の画像でつけたものに復元されます。

        大きな数値を設定すると入力データ画像のサイズが大きくなり、生産性低下やブラウザで画像を表示できない懸念があります。注意して設定してください。
      minimum: 0
    SamplingInspectionRate:
      type: integer
      description: 抜取検査率[%]。未指定の場合は100%として扱う。
      minimum: 0
      maximum: 100
    SamplingAcceptanceRate:
      type: integer
      description: 抜取受入率[%]。未指定の場合は100%として扱う。
      minimum: 0
      maximum: 100
    PrivateStorageAwsIamRoleArn:
      type: string
      description: |
        AWS IAMロール。S3プライベートストレージの認可で使います。
        [S3プライベートストレージの認可の設定についてはこちら](/docs/faq/#m0b240)をご覧ください。
      example: "arn:aws:iam::123456789012:role/AnnofabPrivateStorageAccessor"
    UseS3TransferAcceleration:
      type: boolean
      description: |
        S3プライベートストレージにアクセスする際に、AWS S3 Transfer Accelerationを使用するかどうか。trueの場合に使用します。
        private_storage_aws_iam_role_arnの設定がなされていない場合、この値は無視されます。
      default: false
    ProjectConfigurationPluginId:
      $ref: "#/components/schemas/PluginId"
      description: |
        カスタムアノテーションエディタのプラグインID。カスタムプロジェクトの場合は必須です。
    ProjectConfigurationCustomTaskAssignmentPluginId:
      $ref: "#/components/schemas/PluginId"
      description: |
        `task_assignment_type`に`custom`を設定している場合のみ、カスタムタスク割当のプラグインIDを設定してください。
        `custom`以外の場合は空文字とするか、値を設定しないでください。
    ProjectConfigurationCustomSpecsPluginId:
      $ref: "#/components/schemas/PluginId"
      description: カスタムアノテーション仕様のプラグインID。
    ProjectConfigurationExtendedSpecsPluginId:
      $ref: "#/components/schemas/PluginId"
      description: アノテーション種類を新しく定義できるようにするためのプラグインID。
    EditorVersion:
      type: string
      description: |
        標準アノテーションエディタのバージョン。

        * `stable`
            * 安定版。通常はこちらを利用してください。
        * `preview`
            * 最新版。新機能やUI変更の先行リリース版。

        プロジェクト更新時に未指定の場合は `stable` が指定されたものとみなします。
    UseBeginnerNavigation:
      type: boolean
      description: |
        true の場合、プロジェクトの画面でナビゲーションUIを表示します（ログインユーザーがプロジェクトオーナーの場合のみ）。
      default: false
    ProjectConfigurationPut:
      description: プロジェクトの設定情報
      type: object
      properties:
        number_of_inspections:
          $ref: "#/components/schemas/NumberOfInspections"
        assignee_rule_of_resubmitted_task:
          $ref: "#/components/schemas/AssigneeRuleOfResubmittedTask"
        task_assignment_type:
          $ref: "#/components/schemas/TaskAssignmentType"
        task_assignment_property:
          $ref: "#/components/schemas/TaskAssignmentProperty"
        max_tasks_per_member:
          $ref: "#/components/schemas/MaxTasksPerMember"
        max_tasks_per_member_including_hold:
          $ref: "#/components/schemas/MaxTasksPerMemberIncludingHold"
        input_data_set_id_list:
          $ref: "#/components/schemas/InputDataSetIdList"
        input_data_max_long_side_length:
          $ref: "#/components/schemas/InputDataMaxLongSideLength"
        sampling_inspection_rate:
          $ref: "#/components/schemas/SamplingInspectionRate"
        sampling_acceptance_rate:
          $ref: "#/components/schemas/SamplingAcceptanceRate"
        private_storage_aws_iam_role_arn:
          $ref: "#/components/schemas/PrivateStorageAwsIamRoleArn"
        use_s3_transfer_acceleration:
          $ref: "#/components/schemas/UseS3TransferAcceleration"
        plugin_id:
          $ref: "#/components/schemas/ProjectConfigurationPluginId"
        custom_task_assignment_plugin_id:
          $ref: "#/components/schemas/ProjectConfigurationCustomTaskAssignmentPluginId"
        custom_specs_plugin_id:
          $ref: "#/components/schemas/ProjectConfigurationCustomSpecsPluginId"
        extended_specs_plugin_id:
          $ref: "#/components/schemas/ProjectConfigurationExtendedSpecsPluginId"
        editor_version:
          $ref: "#/components/schemas/EditorVersion"
        use_beginner_navigation:
          $ref: "#/components/schemas/UseBeginnerNavigation"
    ProjectConfigurationGet:
      allOf:
        - $ref: "#/components/schemas/ProjectConfigurationPut"
        - type: object
          required:
            - number_of_inspections
            - assignee_rule_of_resubmitted_task
            - task_assignment_type
            - input_data_set_id_list
            - use_beginner_navigation
    ProjectSummary:
      type: object
      description: プロジェクトのサマリー情報
      properties:
        last_tasks_updated_datetime:
          type: string
          format: date-time
          description: タスクの最終更新日時
    TaskAssignmentType:
      type: string
      default: random
      enum:
        - random
        - selection
        - random_and_selection
        - task_property
        - custom
      description: |
        プロジェクトで使用するタスクの割当方式。

        * `random` -  タスクフェーズのみを指定してランダムにタスクを自身に割当する方式です。
        * `selection` - 担当者とタスクを明示的に指定してタスクを割当する方式です。プロジェクトオーナーもしくはチェッカーのみ、自身以外のプロジェクトメンバーを担当者に指定できます。
        * `random_and_selection` - ランダム割当と選択割当の両機能を使用する方式です。
        * `task_property` - タスクのプロパティ(タスクID/更新日時/メタデータ)と並び順(昇順/降順)を設定して、その順番通りにタスクを割当する方式です。順番が同じタスクが複数ある場合は、その中からランダムに1つのタスクを割当します。プロパティと並び順は`TaskAssignmentProperty` から設定します。
        * `custom` - タスク割当アルゴリズム (API) を独自に定義してタスクを割当する方式です。
    TaskAssignmentProperty:
      type: object
      description: |
        プロジェクト設定でタスクプロパティ割当を有効にしている場合のみ指定してください。
      required:
        - name
        - order
      properties:
        name:
          type: string
          description: |
            タスクの割当優先度を決定するためのタスクプロパティ。

            指定できるプロパティは次のいずれかです。

            * `task_id`
            * `updated_datetime`
            * `metadata` (`metadata.{メタデータ名}` の形式で指定してください)
        order:
          $ref: "#/components/schemas/TaskAssignmentOrder"
    TaskAssignmentOrder:
      type: string
      enum:
        - asc
        - desc
      description: |
        タスクの割当優先度を決定するための並び順。

        * `asc` -  昇順
        * `desc` - 降順
    ProjectJobInfo:
      type: object
      required:
        - project_id
        - job_type
        - job_id
        - job_status
        - errors
        - created_datetime
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        job_type:
          $ref: "#/components/schemas/ProjectJobType"
        job_id:
          $ref: "#/components/schemas/JobId"
        job_status:
          $ref: "#/components/schemas/JobStatus"
        job_execution:
          type: object
          description: ジョブの内部情報
        job_detail:
          $ref: "#/components/schemas/JobDetail"
        errors:
          $ref: "#/components/schemas/Errors"
          description: |
            `job_status`が`failed`のときに、ジョブの失敗した原因が格納されます。
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    OrganizationJobInfo:
      type: object
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        job_type:
          $ref: "#/components/schemas/OrganizationJobType"
        job_id:
          $ref: "#/components/schemas/JobId"
        job_status:
          $ref: "#/components/schemas/JobStatus"
        job_execution:
          type: object
          description: ジョブの内部情報
        job_detail:
          $ref: "#/components/schemas/JobDetail"
        errors:
          $ref: "#/components/schemas/Errors"
        created_datetime:
          type: string
          format: date-time
        updated_datetime:
          type: string
          format: date-time
    ProjectJobType:
      type: string
      enum:
        - copy-project
        - gen-inputs
        - gen-tasks
        - gen-annotation
        - gen-tasks-list
        - gen-inputs-list
        - delete-project
        - invoke-hook
        - move-project
      description: |
        プロジェクトのジョブの種別
        * `copy-project` - プロジェクトのコピー。[initiateProjectCopy](#operation/initiateProjectCopy) APIを実行したときに登録されるジョブ。
        * `gen-inputs` - zipファイルから入力データの作成。[putInputData](#operation/putInputData) APIを実行して、zipファイルから入力データを作成したときに登録されるジョブ。
        * `gen-tasks` - タスクの一括作成。[initiateTasksGeneration](#operation/initiateTasksGeneration) APIを実行したときに登録されるジョブ。
        * `gen-annotation` - アノテーションZIPの更新。[postAnnotationArchiveUpdate](#operation/postAnnotationArchiveUpdate) APIを実行したときに登録されるジョブ。
        * `gen-tasks-list` - タスク全件ファイルの更新。[postProjectTasksUpdate](#operation/postProjectTasksUpdate) APIを実行したときに登録されるジョブ。
        * `gen-inputs-list` - 入力データ情報全件ファイルの更新。[postProjectInputsUpdate](#operation/postProjectInputsUpdate) APIを実行したときに登録されるジョブ。
        * `delete-project` - プロジェクトの削除。[deleteProject](#operation/deleteProject) APIを実行したときに登録されるジョブ。
        * `invoke-hook` - Webhookの起動。
        * `move-project` - プロジェクトの組織移動。[putProject](#operation/putProject) API で組織を変更したときに登録されるジョブ。

        ## ジョブの同時実行制限

        Annofab上に登録されているデータの整合性を保つため、プロジェクト内で特定のジョブが実行中の間は他のジョブが実行できないよう制限をかけています。

        ジョブの同時実行可否はジョブの種別によって異なります。

        なお、ジョブを実行するプロジェクトが初期化中 (`project_status = "initializing"`) の場合は、どのジョブも実行できません。

        ### copy-project
        次のジョブが実行されている場合、このジョブを実行することはできません。

        * `gen-inputs`
        * `gen-tasks`
        * `delete-project`
        * `move-project`

        ### gen-inputs
        次のジョブが実行されている場合、このジョブを実行することはできません。

        * `copy-project`
        * `gen-inputs`
        * `gen-tasks`
        * `gen-inputs-list`
        * `delete-project`
        * `move-project`

        ### gen-tasks
        次のジョブが実行されている場合、このジョブを実行することはできません。

        * `copy-project`
        * `gen-inputs`
        * `gen-tasks`
        * `gen-annotation`
        * `gen-tasks-list`
        * `delete-project`
        * `move-project`

        ### gen-annotation
        次のジョブが実行されている場合、このジョブを実行することはできません。

        * `gen-tasks`
        * `gen-annotation`
        * `delete-project`
        * `move-project`

        ### gen-tasks-list
        次のジョブが実行されている場合、このジョブを実行することはできません。

        * `gen-tasks`
        * `gen-tasks-list`
        * `delete-project`
        * `move-project`

        ### gen-inputs-list
        次のジョブが実行されている場合、このジョブを実行することはできません。

        * `gen-inputs`
        * `gen-inputs-list`
        * `delete-project`
        * `move-project`

        ### delete-project
        他のジョブが実行されていない場合**のみ**実行できます。

        ### invoke-hook
        次のジョブが実行されている場合、このジョブを実行することはできません。

        * `delete-project`
        * `move-project`

        ### move-project
        他のジョブが実行されていない場合**のみ**実行できます。
    OrganizationJobType:
      type: string
      description: |
        ジョブの同時実行制御のために用いる、ジョブの種別。
        (現在はまだ、この種別に該当するものはありません)
    JobDetail:
      type: object
      description: ジョブ結果の内部情報
      discriminator:
        propertyName: "_type"
        mapping:
          GenInputs: '#/components/schemas/JobDetailGenInputs'
          GenTasks: '#/components/schemas/JobDetailGenTasks'
          CopyProject: '#/components/schemas/JobDetailCopyProject'
          MoveProject: '#/components/schemas/JobDetailMoveProject'
          InvokeHook: '#/components/schemas/JobDetailInvokeHook'
      oneOf:
        - $ref: '#/components/schemas/JobDetailGenInputs'
        - $ref: '#/components/schemas/JobDetailGenTasks'
        - $ref: '#/components/schemas/JobDetailCopyProject'
        - $ref: '#/components/schemas/JobDetailMoveProject'
        - $ref: '#/components/schemas/JobDetailInvokeHook'
    JobDetailGenInputs:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/InputDataRequest'
      required:
        - request
    JobDetailGenTasks:
      type: object
      required:
        - request
      properties:
        request:
          $ref: '#/components/schemas/TaskGenerateRequest'
        generated_task_count:
          type: integer
    JobDetailCopyProject:
      type: object
      required:
        - request
      properties:
        request:
          $ref: '#/components/schemas/ProjectCopyRequest'
    JobDetailMoveProject:
      type: object
      required:
        - src_organization_id
        - dest_organization_id
        - src_input_data_set_id
        - dest_input_data_set_id
      properties:
        src_organization_id:
          type: string
        dest_organization_id:
          type: string
        src_input_data_set_id:
          type: string
        dest_input_data_set_id:
          type: string
    JobDetailInvokeHook:
      type: object
      required:
        - webhook
      properties:
        webhook:
          $ref: '#/components/schemas/Webhook'
        message:
          type: string
        replaced_body:
          type: string
    JobStatus:
      type: string
      enum:
        - progress
        - succeeded
        - failed
      description: |
        ジョブのステータス
    PostAnnotationArchiveUpdateResponse:
      type: object
      required:
        - job
      properties:
        job:
          $ref: "#/components/schemas/ProjectJobInfo"
          description: 登録されたバックグラウンドジョブ
    PostProjectTasksUpdateResponse:
      required:
        - job
      type: object
      properties:
        job:
          $ref: "#/components/schemas/ProjectJobInfo"
          description: 登録されたバックグラウンドジョブ
    ProjectCopyResponse:
      type: object
      required:
        - job
        - dest_project
      properties:
        job:
          $ref: "#/components/schemas/ProjectJobInfo"
          description: 登録されたバックグラウンドジョブ
        dest_project:
          $ref: "#/components/schemas/Project"
          description: コピー先のプロジェクトの情報
    DeleteProjectResponse:
      type: object
      required:
        - job
        - project
      properties:
        job:
          $ref: "#/components/schemas/ProjectJobInfo"
          description: 登録されたバックグラウンドジョブ
        project:
          $ref: "#/components/schemas/Project"
          description: プロジェクト情報
    PutProjectResponse:
      type: object
      required:
        - job
        - project
      properties:
        job:
          $ref: "#/components/schemas/ProjectJobInfo"
          description: 所属組織を変更したときに登録されたバックグランドジョブ
        project:
          $ref: "#/components/schemas/Project"
          description: プロジェクト情報
    TaskGenerateResponse:
      type: object
      required:
        - job
        - project
      properties:
        job:
          $ref: "#/components/schemas/ProjectJobInfo"
          description: 登録されたバックグラウンドジョブ
        project:
          $ref: "#/components/schemas/Project"
          description: プロジェクト情報
    ProjectInputsUpdateResponse:
      type: object
      required:
        - job
      properties:
        job:
          $ref: "#/components/schemas/ProjectJobInfo"
          description: 登録されたバックグラウンドジョブ
    Webhook:
      type: object
      required:
        - project_id
        - event_type
        - webhook_id
        - webhook_status
        - method
        - headers
        - created_datetime
        - updated_datetime
        - url
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        event_type:
          $ref: "#/components/schemas/WebhookEventType"
        webhook_id:
          $ref: "#/components/schemas/WebhookId"
        webhook_status:
          $ref: "#/components/schemas/WebhookStatus"
        method:
          $ref: "#/components/schemas/WebhookHttpMethod"
        headers:
          description: Webhookが送信するHTTPリクエストのヘッダー
          type: array
          items:
            $ref: "#/components/schemas/WebhookHeader"
        body:
          description: Webhookが送信するHTTPリクエストのボディ
          type: string
          example: '{"message": "{{PROJECT_ID}} is updated at {{COMPLETE_DATETIME}}"}'
        url:
          type: string
          format: uri
          description: Webhookの送信先URL
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時

    PutWebhookRequest:
      type: object
      required:
        - project_id
        - event_type
        - webhook_id
        - webhook_status
        - method
        - headers
        - url
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        event_type:
          $ref: "#/components/schemas/WebhookEventType"
        webhook_id:
          $ref: "#/components/schemas/WebhookId"
        webhook_status:
          $ref: "#/components/schemas/WebhookStatus"
        method:
          $ref: "#/components/schemas/WebhookHttpMethod"
        headers:
          description: Webhookが送信するHTTPリクエストのヘッダー
          type: array
          items:
            $ref: "#/components/schemas/WebhookHeader"
        body:
          description: Webhookが送信するHTTPリクエストのボディ。methodがGETの場合は指定不可。
          type: string
          example: '{"message": "{{PROJECT_ID}} is updated at {{COMPLETE_DATETIME}}"}'
        url:
          type: string
          format: uri
          description: Webhookの送信先URL
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    WebhookHeader:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: HTTPヘッダーのフィールド名
          example: Content-Type
        value:
          type: string
          description: HTTPヘッダーの値
          example: application/json
    WebhookStatus:
      type: string
      description: Webhookの状態
      enum:
        - active
        - inactive
    WebhookHttpMethod:
      type: string
      enum:
        - POST
        - PUT
        - DELETE
        - GET
      description: |
        Webhook通知するHTTPリクエストのメソッド
    WebhookEventType:
      type: string
      enum:
        - task-completed
        - annotation-archive-updated
        - input-data-zip-registered
        - project-copy-completed
      description: |
        Webhookイベントの種類
        * `task-completed` - タスク受入完了
        * `annotation-archive-updated` - アノテーションZIP作成完了
        * `input-data-zip-registered` - 入力データZIP登録完了
        * `project-copy-completed` - プロジェクトコピー完了
    PutProjectRequest:
      type: object
      required:
        - title
        - status
        - organization_name
        - configuration
      properties:
        title:
          type: string
          description: プロジェクトのタイトル
        overview:
          type: string
          description: プロジェクトの概要
        status:
          $ref: "#/components/schemas/ProjectStatus"
        input_data_type:
          $ref: "#/components/schemas/InputDataType"
          default: image
          description: |
            アノテーション対象の入力データの種類。[詳細はこちら](#tag/x-data-types/InputDataType)を参照してください。

            プロジェクトの作成時のみ指定可能です。更新時は無視されます。
        organization_name:
          type: string
          description: |
            プロジェクトの所属組織を変更する場合は、ここに変更先の組織名を指定します。

            * 所属組織を変更する前にプロジェクトを停止する必要があります。
            * APIを呼び出すアカウントは、変更先組織の管理者またはオーナーである必要があります。
            * 変更後の組織に所属していないプロジェクトメンバーも残りますが、作業はできません。あらためて組織に招待してください。
        configuration:
          $ref: "#/components/schemas/ProjectConfigurationPut"
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
        force_suspend:
          type: boolean
          description: 作業中タスクがあるプロジェクトを停止する時trueにして下さい
          default: false
    ProjectCopyRequest:
      type: object
      required:
        - dest_project_id
        - dest_title
      properties:
        dest_project_id:
          $ref: "#/components/schemas/ProjectId"
        dest_title:
          type: string
          description: コピー先プロジェクトのタイトル
        dest_overview:
          type: string
          description: コピー先プロジェクトの概要
        copy_inputs:
          type: boolean
          description: |
            「入力データ」をコピーするかどうかを指定します。
          default: false
        copy_tasks:
          type: boolean
          description: |
            「タスク」をコピーするかどうかを指定します。

            この属性の値を`true`にする場合、他の属性の値を必ず次のように指定してください。

            * `copy_inputs`の値を`true`とする
          default: false
        copy_annotations:
          type: boolean
          description: |
            「アノテーション」をコピーするかどうかを指定します。

            この属性の値を`true`にする場合、他の属性の値を必ず次のように指定してください。

            * `copy_inputs`の値を`true`とする
            * `copy_tasks`の値を`true`とする
          default: false
        copy_webhooks:
          type: boolean
          description: |
            「Webhook」をコピーするかどうかを指定します。
          default: false
        copy_supplementary_data:
          type: boolean
          description: |
            「補助情報」をコピーするかどうかを指定します。

            この属性の値を`true`にする場合、他の属性の値を必ず次のように指定してください。

            * `copy_inputs`の値を`true`とする
          default: false
        copy_instructions:
          type: boolean
          description: |
            「作業ガイド」をコピーするかどうかを指定します。
          default: false
    ProjectMember:
      type: object
      required:
        - project_id
        - account_id
        - user_id
        - username
        - member_status
        - member_role
        - created_datetime
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        account_id:
          $ref: "#/components/schemas/AccountId"
        user_id:
          $ref: "#/components/schemas/UserId"
        username:
          type: string
          $ref: "#/components/schemas/Username"
        member_status:
          $ref: "#/components/schemas/ProjectMemberStatus"
        member_role:
          $ref: "#/components/schemas/ProjectMemberRole"
        biography:
          $ref: "#/components/schemas/UserBiography"
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        sampling_inspection_rate:
          description: 抜取検査率（パーセント）
          type: integer
          minimum: 0
          maximum: 100
        sampling_acceptance_rate:
          description: 抜取受入率（パーセント）
          type: integer
          minimum: 0
          maximum: 100
    ProjectMemberStatus:
      type: string
      enum:
        - active
        - inactive
      description: |
        プロジェクトメンバーの状態
        * `active` - プロジェクトメンバーとして有効で、プロジェクトを閲覧したり、権限があれば編集できます。
        * `inactive` - 脱退したプロジェクトメンバーを表します。プロジェクトを閲覧できません。
    ProjectMemberRole:
      type: string
      enum:
        - owner
        - worker
        - accepter
        - training_data_user
      description: |
        プロジェクトメンバーのロール
        * `owner` - オーナー
        * `worker` - アノテーター
        * `accepter` - チェッカー
        * `training_data_user` - アノテーションユーザー
    ProjectMemberRequest:
      type: object
      required:
        - member_status
        - member_role
      properties:
        member_status:
          $ref: "#/components/schemas/ProjectMemberStatus"
        member_role:
          $ref: "#/components/schemas/ProjectMemberRole"
        sampling_inspection_rate:
          description: 抜取検査率（パーセント）
          type: integer
          minimum: 0
          maximum: 100
        sampling_acceptance_rate:
          description: 抜取受入率（パーセント）
          type: integer
          minimum: 0
          maximum: 100
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
    ProjectTaskStatisticsHistory:
      type: object
      required:
        - date
        - tasks
      properties:
        date:
          type: string
          format: date
          description: 日付
        tasks:
          description: タスクのフェーズごと、ステータスごとの情報
          type: array
          items:
            $ref: "#/components/schemas/ProjectTaskStatistics"
    ProjectTaskStatistics:
      type: object
      required:
        - phase
        - status
        - count
        - work_timespan
      properties:
        phase:
          $ref: "#/components/schemas/TaskPhase"
        status:
          $ref: "#/components/schemas/TaskStatus"
        count:
          type: integer
          minimum: 0
          description: タスク数
        work_timespan:
          type: integer
          description: 累計実作業時間(ミリ秒)
    ProjectAccountStatistics:
      type: object
      required:
        - account_id
        - histories
      properties:
        account_id:
          $ref: "#/components/schemas/AccountId"
        histories:
          type: array
          items:
            $ref: "#/components/schemas/ProjectAccountStatisticsHistory"
    ProjectAccountStatisticsHistory:
      type: object
      required:
        - date
        - tasks_completed
        - tasks_rejected
        - worktime
      properties:
        date:
          type: string
          format: date
        tasks_completed:
          type: integer
          description: |
            教師付フェーズのタスクを提出した回数、または検査/受入フェーズのタスクを合格/差戻にした回数。

            たとえば、あるタスクのタスク履歴が下表の状態だった場合、2020-04-01の`tasks_completed`は以下の通りになります。

            * Alice: 1
            * Bob: 1
            * Chris: 2


            <table>
              <tr>
                <th>担当者</th>
                <th>フェーズ</th>
                <th>作業内容</th>
                <th>完了日時</th>
              </tr>
              <tr>
                <td>Alice</td>
                <td>教師付</td>
                <td>提出する</td>
                <td>2020-04-01 09:00</td>
              </tr>
              <tr>
                <td>Chris</td>
                <td>受入</td>
                <td>差し戻す</td>
                <td>2020-04-01 10:00</td>
              </tr>
              <tr>
                <td>Bob</td>
                <td>教師付</td>
                <td>提出する</td>
                <td>2020-04-01 11:00</td>
              </tr>
              <tr>
                <td>Chris</td>
                <td>受入</td>
                <td>合格にする</td>
                <td>2020-04-01 12:00</td>
              </tr>
            </table>
        tasks_rejected:
          type: integer
          description: |
            教師付フェーズを担当したタスクが差し戻された回数、または受入フェーズを担当したタスクが受入完了を取り消された回数。

            たとえば、あるタスクのタスク履歴が下表の状態だった場合、2020-04-01の`tasks_rejected`は以下の通りになります。

            * Alice: 1
            * Bob: 1
            * Chris: 1


            <table>
              <tr>
                <th>担当者</th>
                <th>フェーズ</th>
                <th>作業内容</th>
                <th>完了日時</th>
              </tr>
              <tr>
                <td>Alice</td>
                <td>教師付</td>
                <td>提出する</td>
                <td>2020-04-01 09:00</td>
              </tr>
              <tr>
                <td>Chris</td>
                <td>受入</td>
                <td>差し戻す</td>
                <td>2020-04-01 10:00</td>
              </tr>
              <tr>
                <td>Bob</td>
                <td>教師付</td>
                <td>提出する</td>
                <td>2020-04-01 11:00</td>
              </tr>
              <tr>
                <td>Chris</td>
                <td>受入</td>
                <td>差し戻す</td>
                <td>2020-04-01 12:00</td>
              </tr>
              <tr>
                <td>Bob</td>
                <td>教師付</td>
                <td>提出する</td>
                <td>2020-04-01 13:00</td>
              </tr>
              <tr>
                <td>Chris</td>
                <td>受入</td>
                <td>合格にする</td>
                <td>2020-04-01 14:00</td>
              </tr>
              <tr>
                <td>Dave</td>
                <td>受入</td>
                <td>受入完了状態を取り消して、再度合格にする</td>
                <td>2020-04-01 15:00</td>
              </tr>
            </table>
        worktime:
          type: string
          example: "PT34H17M36.789S"
          description: 作業時間（ISO 8601 duration）
    InspectionStatistics:
      type: object
      required:
        - project_id
        - date
        - breakdown
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        date:
          description: 集計日
          type: string
          format: date
        breakdown:
          $ref: "#/components/schemas/InspectionStatisticsBreakdown"
    InspectionStatisticsBreakdown:
      type: object
      description: 検査コメント数の集計結果
      required:
        - labels
        - no_label
      properties:
        labels:
          description: ラベルに紐付いている検査コメントの集計結果。キーは`label_id`です。
          type: object
          additionalProperties: {
            $ref: "#/components/schemas/InspectionStatisticsPhrases"
          }
        no_label:
          $ref: "#/components/schemas/InspectionStatisticsPhrases"
          description: ラベルに紐付いていない検査コメントの集計結果
    PatchTasksMetadataRequest:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/TaskMetadata"
      description: |
        タスクIDとメタデータのkey-valueペア(Dictionary)を指定してください。

        メタデータは、メタデータ名と値のkey-valueペア(Dictionary)です。

        keyに指定できる文字種は次の通りです。

        * 半角英数字
        * `_` (アンダースコア)
        * `-` (ハイフン)

        valueに指定できる値は次の通りです。

        * 文字列
        * 数値
        * 真偽値

        ```
        (例)

        {
          "task_1": { "metadata_1": "str", "metadata_2": 100 },
          "task_2": { "metadata_3": true }
        }
        ```
    InspectionStatisticsPhrases:
      type: object
      required:
        - phrases
        - no_phrase
      properties:
        phrases:
          description: 定型指摘ごとの検査コメントの個数。キーは定型指摘ID、値は検査コメント数です。
          type: object
          additionalProperties: {
            type: integer
          }
        no_phrase:
          description: 定型指摘を使っていない検査コメントの個数
          type: integer
    TaskPhaseStatistics:
      type: object
      required:
        - project_id
        - date
        - phases
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        date:
          type: string
          format: date
          description: 日付
        phases:
          description: タスクのフェーズごとの集計結果
          type: array
          items:
            $ref: "#/components/schemas/PhaseStatistics"
    PhaseStatistics:
      type: object
      required:
        - phase
        - worktime
      properties:
        phase:
          $ref: "#/components/schemas/TaskPhase"
        worktime:
          description: 累積作業時間（ISO 8601 duration）
          type: string
          example: "PT34H17M36.789S"
    LabelStatistics:
      type: object
      required:
        - label_id
        - completed
        - wip
      properties:
        label_id:
          $ref: "#/components/schemas/LabelId"
        completed:
          type: integer
          minimum: 0
          description: ラベルごとの受入が完了したアノテーション数
        wip:
          type: integer
          minimum: 0
          description: ラベルごとの受入が完了していないアノテーション数
    WorktimeStatistics:
      type: object
      required:
        - project_id
        - date
        - by_tasks
        - by_inputs
        - by_minutes
        - accounts
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        date:
          type: string
          format: date
        by_tasks:
          type: array
          description: タスクごとに計算した「画像1枚あたりの作業時間平均」の統計（動画プロジェクトの場合は空リスト）
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
        by_inputs:
          type: array
          description: 画像1個当たりの作業時間情報（動画プロジェクトの場合は空リスト）
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
        by_minutes:
          type: array
          description: 動画1分当たりの作業時間情報（画像プロジェクトの場合は空リスト）
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
        accounts:
          type: array
          description: ユーザーごとの作業時間情報
          items:
            $ref: "#/components/schemas/AccountWorktimeStatistics"
    WorktimeStatisticsByAccount:
      type: object
      required:
        - project_id
        - account_id
        - data_series
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        account_id:
          $ref: "#/components/schemas/AccountId"
        data_series:
          type: array
          description: プロジェクトメンバーの日毎の作業時間統計データ
          items:
            $ref: "#/components/schemas/WorktimeStatisticsData"
    WorktimeStatisticsByProject:
      type: object
      required:
        - project_id
        - data_series
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        data_series:
          type: array
          description: プロジェクトの日毎の作業時間統計データ
          items:
            $ref: "#/components/schemas/WorktimeStatisticsData"
    WorktimeStatisticsData:
      type: object
      required:
        - date
        - grouped_by_input
        - grouped_by_task
        - grouped_by_minute
      properties:
        date:
          type: string
          format: date
          description: 日付
        grouped_by_input:
          description: ユーザーごとの画像1個当たりの作業時間情報（動画プロジェクトの場合は空リスト）
          type: array
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
        grouped_by_task:
          description: ユーザーごとのタスク1個当たりの作業時間情報（動画プロジェクトの場合は空リスト）
          type: array
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
        grouped_by_minute:
          description: ユーザーごとの動画1分当たりの作業時間情報（画像プロジェクトの場合は空リスト）
          type: array
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
    WorktimeStatisticsItem:
      type: object
      required:
        - phase
        - histogram
        - average
        - standard_deviation
      properties:
        phase:
          $ref: "#/components/schemas/TaskPhase"
        histogram:
          description: ヒストグラム情報
          type: array
          items:
            $ref: "#/components/schemas/HistogramItem"
        average:
          description: 作業時間の平均（ISO 8601 duration）
          type: string
          example: "PT34H17M36.789S"
        standard_deviation:
          description: 作業時間の標準偏差（ISO 8601 duration）
          type: string
          example: "PT34H17M36.789S"
    HistogramItem:
      type: object
      required:
        - begin
        - end
        - count
      properties:
        begin:
          type: number
        end:
          type: number
        count:
          type: integer
    AccountWorktimeStatistics:
      type: object
      required:
        - account_id
        - by_tasks
        - by_inputs
        - by_minutes
      properties:
        account_id:
          $ref: "#/components/schemas/AccountId"
        by_tasks:
          description: タスクごとに計算した「画像1枚あたりの作業時間平均」の統計（動画プロジェクトの場合は空リスト）
          type: array
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
        by_inputs:
          description: 画像1枚あたりの作業時間情報（動画プロジェクトの場合は空リスト）
          type: array
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
        by_minutes:
          description: 動画1分あたりの作業時間情報（画像プロジェクトの場合は空リスト）
          type: array
          items:
            $ref: "#/components/schemas/WorktimeStatisticsItem"
    Marker:
      type: object
      required:
        - marker_id
        - title
        - graph_type
        - marked_at
      properties:
        marker_id:
          $ref: "#/components/schemas/MarkerId"
        title:
          type: string
          description: マーカーのタイトル
        graph_type:
          description: |
            マーカーを配置するグラフ。[詳細はこちら](#tag/x-data-types/GraphType)
          $ref: "#/components/schemas/GraphType"
        marked_at:
          description: グラフ上のマーカー位置(x軸)
          type: string
          format: date-time
    Markers:
      type: object
      required:
        - project_id
        - markers
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        markers:
          description: マーカー一覧
          type: array
          items:
            $ref: "#/components/schemas/Marker"
        updated_datetime:
          type: string
          format: date
          description: 更新日時
    GraphType:
      type: string
      enum:
        - task_progress
        - cumulative_labor_time_By_task_phase
        - number_of_inspections_per_inspection_phrase
        - number_of_task_rejections_by_member
        - labor_time_per_member
        - mean_labor_time_per_image
        - mean_labor_time_per_minute_of_movie
        - mean_labor_time_per_image_by_member
        - mean_labor_time_per_minute_of_movie_by_member
      description: |
        グラフの種類
        * `task_progress` - タスク進捗状況
        * `cumulative_labor_time_by_task_phase` - タスクフェーズ別累積作業時間
        * `number_of_inspections_per_inspection_phrase` - 検査コメント内容別指摘回数
        * `number_of_task_rejections_by_member` - メンバー別タスクが差戻された回数
        * `labor_time_per_member` - メンバー別作業時間
        * `mean_labor_time_per_image` - 画像一枚当たりの作業時間平均
        * `mean_labor_time_per_minute_of_movie` - 動画一分当たりの作業時間平均
        * `mean_labor_time_per_image_by_member` - メンバー別画像一枚当たりの作業時間平均
        * `mean_labor_time_per_minute_of_movie_by_member` - メンバー別動画一分当たりの作業時間平均
    PutMarkersRequest:
      type: object
      properties:
        markers:
          description: マーカー一覧
          type: array
          items:
            $ref: "#/components/schemas/Marker"
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
    AnnotationSpecsV1:
      type: object
      required:
        - project_id
        - labels
        - inspection_phrases
        - metadata
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        labels:
          description: ラベル
          type: array
          items:
            $ref: "#/components/schemas/LabelV1"
        inspection_phrases:
          description: 定型指摘
          type: array
          items:
            $ref: "#/components/schemas/InspectionPhrase"
        updated_datetime:
          type: string
          format: date-time
          description: |
            更新日時
        option:
          $ref: "#/components/schemas/AnnotationSpecsOption"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AnnotationSpecsV2:
      type: object
      required:
        - project_id
        - labels
        - additionals
        - restrictions
        - inspection_phrases
        - format_version
        - metadata
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelV2"
          description: ラベル
        additionals:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataDefinitionV2"
          description: 属性
        restrictions:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataRestriction"
          description: 属性の制約
        inspection_phrases:
          type: array
          items:
            $ref: "#/components/schemas/InspectionPhrase"
          description: 定型指摘
        format_version:
          type: string
          default: "2.1.0"
          description: アノテーション仕様のフォーマットのバージョン
        updated_datetime:
          type: string
          format: date-time
          description: |
            更新日時
        option:
          $ref: "#/components/schemas/AnnotationSpecsOption"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AnnotationSpecsV3:
      type: object
      required:
        - project_id
        - labels
        - additionals
        - restrictions
        - inspection_phrases
        - format_version
        - metadata
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelV3"
          description: ラベル
        additionals:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataDefinitionV2"
          description: 属性
        restrictions:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataRestriction"
          description: 属性の制約
        inspection_phrases:
          type: array
          items:
            $ref: "#/components/schemas/InspectionPhrase"
          description: 定型指摘
        annotation_type_version:
          type: string
          description: |
            アノテーション種別のバージョン。

            拡張仕様プラグインで定義した値が転写されます。プロジェクトに拡張仕様プラグインが設定されていない場合は未指定です。
        format_version:
          type: string
          default: "3.0.0"
          description: アノテーション仕様のフォーマットのバージョン
        updated_datetime:
          type: string
          format: date-time
          description: |
            更新日時
        option:
          $ref: "#/components/schemas/AnnotationSpecsOption"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AnnotationSpecsRequestV1:
      type: object
      required:
        - labels
        - inspection_phrases
      properties:
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelV1"
          description: ラベル
        inspection_phrases:
          type: array
          items:
            $ref: "#/components/schemas/InspectionPhrase"
          description: 定型指摘
        comment:
          type: string
          description: 変更内容のコメント
        auto_marking:
          type: boolean
          default: false
          description: |
            trueが指定された場合、各統計グラフにマーカーを自動追加します。
            マーカーのタイトルには `comment` に指定された文字列が設定されます。
            `comment` が指定されていなかった場合は "アノテーション仕様の変更" という文字列が設定されます。
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
          description: |
            更新前アノテーション仕様の時刻( `updated_datetime` )を指定する。
            新規作成時は未指定。
        option:
          $ref: "#/components/schemas/AnnotationSpecsOption"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AnnotationSpecsRequestV2:
      type: object
      required:
        - labels
        - additionals
        - restrictions
        - inspection_phrases
        - format_version
      properties:
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelV2"
          description: ラベル
        additionals:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataDefinitionV2"
          description: 属性
        restrictions:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataRestriction"
          description: 属性の制約
        inspection_phrases:
          type: array
          items:
            $ref: "#/components/schemas/InspectionPhrase"
          description: 定型指摘
        comment:
          type: string
          description: 変更内容のコメント
        auto_marking:
          type: boolean
          default: false
          description: |
            trueが指定された場合、各統計グラフにマーカーを自動追加します。
            マーカーのタイトルには `comment` に指定された文字列が設定されます。
            `comment` が指定されていなかった場合は "アノテーション仕様の変更" という文字列が設定されます。
        format_version:
          type: string
          default: "2.1.0"
          description: アノテーション仕様のフォーマットのバージョン
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
        option:
          $ref: "#/components/schemas/AnnotationSpecsOption"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AnnotationSpecsRequestV3:
      type: object
      required:
        - labels
        - additionals
        - restrictions
        - inspection_phrases
        - format_version
      properties:
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelV3"
          description: ラベル
        additionals:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataDefinitionV2"
          description: 属性
        restrictions:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataRestriction"
          description: 属性の制約
        inspection_phrases:
          type: array
          items:
            $ref: "#/components/schemas/InspectionPhrase"
          description: 定型指摘
        comment:
          type: string
          description: 変更内容のコメント
        auto_marking:
          type: boolean
          default: false
          description: |
            trueが指定された場合、各統計グラフにマーカーを自動追加します。
            マーカーのタイトルには `comment` に指定された文字列が設定されます。
            `comment` が指定されていなかった場合は "アノテーション仕様の変更" という文字列が設定されます。
        annotation_type_version:
          type: string
          description: アノテーション種別のバージョン。拡張仕様プラグインを利用している場合に、プラグインに設定されている値が転写されます。 プロジェクトに拡張仕様プラグインが設定されていない場合は未指定です。
        format_version:
          type: string
          default: "3.0.0"
          description: アノテーション仕様のフォーマットのバージョン
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
        option:
          $ref: "#/components/schemas/AnnotationSpecsOption"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AnnotationSpecsOption:
      oneOf:
        - $ref: "#/components/schemas/AnnotationSpecsMovieOption"
      description: |
        アノテーション仕様のオプション設定。

        現時点では動画プロジェクトでのみ利用・指定可能。動画以外のプロジェクトでは値なし。

        動画プロジェクトで値が未指定の場合、AnnotationSpecsOption内の値はすべてデフォルト値が指定されたものとして扱われる。
    AnnotationSpecsMovieOption:
      type: object
      required:
        - can_overwrap
      properties:
        can_overwrap:
          type: boolean
          default: true
          description: |
            動画プロジェクトのアノテーションに重複配置を許すか否か。
    AnnotationSpecsHistory:
      type: object
      required:
        - history_id
        - project_id
        - updated_datetime
        - url
      properties:
        history_id:
          type: string
          description: アノテーション仕様の履歴ID
          example: "1234567890"
        project_id:
          $ref: "#/components/schemas/ProjectId"
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
        url:
          type: string
          format: uri
          description: アノテーション仕様が格納されたJSONのURL。URLにアクセスするには認証認可が必要です。
          example: https://annofab.com/projects/PROJECT_ID/annotation_specs_histories/HISTORY_ID.json?cache=CACHE
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: 更新したユーザーのアカウントID
        comment:
          type: string
          description: 変更内容のコメント
    InspectionPhrase:
      type: object
      required:
        - id
        - text
      properties:
        id:
          type: string
          description: 定型指摘ID
        text:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: 定型指摘のメッセージ
    AnnotationType:
      oneOf:
        - $ref: "#/components/schemas/DefaultAnnotationType"
        - $ref: "#/components/schemas/UserDefinedAnnotationType"
    DefaultAnnotationType:
      type: string
      enum:
        - bounding_box
        - segmentation
        - segmentation_v2
        - polygon
        - polyline
        - point
        - classification
        - range
        - custom
      description: |
        アノテーションの種類
        * `bounding_box` - 矩形
        * `segmentation` - 塗りつぶし（インスタンスセグメンテーション用）
        * `segmentation_v2` - 塗りつぶしv2（セマンティックセグメンテーション用）
        * `polygon` - ポリゴン（閉じた頂点集合）
        * `polyline` - ポリライン（開いた頂点集合）
        * `point` - 点
        * `classification` - 全体
        * `range` - 動画の区間
        * `custom` - カスタム

        プロジェクトの種類によって、使用できるアノテーションの種類は決まっています。アノテーションの種類が使用できるかどうかを、以下の表に記載しました。
         * `○`：使用できる
         * `×`：使用できない


        |アノテーションの種類                 | 画像プロジェクト        | 動画プロジェクト | カスタムプロジェクト |
        |-----------------|:----------:|:----:|:------:|
        | bounding_box    | 〇         | ×  | ×    |
        | segmentation    | 〇         | ×  | ×    |
        | segmentation_v2 | 〇         | ×  | ×    |
        | polygon         | 〇         | ×  | ×    |
        | polyline        | 〇         | ×  | ×    |
        | point           | 〇         | ×  | ×    |
        | classification  | 〇         | 〇  | ×    |
        | range           | ×         | 〇  | ×    |
        | custom          | ×         | ×  | 〇    |

    UserDefinedAnnotationType:
      type: string
      description: |
        ユーザー定義のアノテーション種別名です。先頭が `user_` から始まる任意の文字列を指定します。
      example: user_bounding_box
    UserDefinedAnnotationTypeDefinition:
      type: object
      required:
        - annotation_type_name
        - field_definitions
        - metadata
        - annotation_data_type
      properties:
        annotation_type_name:
          $ref: "#/components/schemas/InternationalizationMessage"
        field_definitions:
          type: array
          description: |
            ユーザーが定義するアノテーション種別のフィールド定義です。
            フィールドIDをキー、フィールド定義を値とするオブジェクトを設定します。
          items:
            type: object
            required:
              - field_id
              - definition
            properties:
              field_id:
                type: string
                description: フィールドID。任意の文字列を設定できます。
              definition:
                $ref: "#/components/schemas/UserDefinedAnnotationTypeFieldDefinition"
        metadata:
          type: object
          description: |
            アノテーション種別を設定した際に、ラベルのメタデータとしてデフォルトで設定される値です。
          additionalProperties:
            type: string
        annotation_data_type:
          $ref: "#/components/schemas/UserDefinedAnnotationDataType"
    UserDefinedAnnotationTypeFieldDefinition:
      description: |
        ユーザー定義のアノテーション種別に設定可能なフィールドについての定義です。
      oneOf:
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionMinimumSize2d"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionMinimumSize2dWithDefaultInsertPosition"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionMarginOfErrorTolerance"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionVertexCountMinMax"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionMinimumArea2d"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionDisplayLineDirection"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionAnnotationEditorFeature"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionOneIntegerField"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionOneStringField"
        - $ref: "#/components/schemas/AnnotationTypeFieldDefinitionOneBooleanField"
      discriminator:
        propertyName: "_type"
        mapping:
          MinimumSize2d: "#/components/schemas/AnnotationTypeFieldDefinitionMinimumSize2d"
          MinimumSize2dWithDefaultInsertPosition: "#/components/schemas/AnnotationTypeFieldDefinitionMinimumSize2dWithDefaultInsertPosition"
          MarginOfErrorTolerance: "#/components/schemas/AnnotationTypeFieldDefinitionMarginOfErrorTolerance"
          VertexCountMinMax: "#/components/schemas/AnnotationTypeFieldDefinitionVertexCountMinMax"
          MinimumArea2d: "#/components/schemas/AnnotationTypeFieldDefinitionMinimumArea2d"
          DisplayLineDirection: "#/components/schemas/AnnotationTypeFieldDefinitionDisplayLineDirection"
          AnnotationEditorFeature: "#/components/schemas/AnnotationTypeFieldDefinitionAnnotationEditorFeature"
          OneIntegerField: "#/components/schemas/AnnotationTypeFieldDefinitionOneIntegerField"
          OneStringField: "#/components/schemas/AnnotationTypeFieldDefinitionOneStringField"
          OneBooleanField: "#/components/schemas/AnnotationTypeFieldDefinitionOneBooleanField"
    AnnotationTypeFieldDefinitionMinimumSize2d:
      description: |
        アノテーションの最小サイズに関する設定のフィールド定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["MinimumSize2d"]
    AnnotationTypeFieldDefinitionMinimumSize2dWithDefaultInsertPosition:
      description: |
        アノテーションの最小サイズに関する設定、および最小矩形の挿入位置のフィールド定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["MinimumSize2dWithDefaultInsertPosition"]
    AnnotationTypeFieldDefinitionMarginOfErrorTolerance:
      description: |
        誤差許容範囲のフィールド定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["MarginOfErrorTolerance"]
    AnnotationTypeFieldDefinitionVertexCountMinMax:
      description: |
        頂点数の最大・最小のフィールド定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["VertexCountMinMax"]
    AnnotationTypeFieldDefinitionMinimumArea2d:
      description: |
        最小の面積のフィールド定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["MinimumArea2d"]
    AnnotationTypeFieldDefinitionDisplayLineDirection:
      description: |
        線の向き表示/非表示の設定のフィールド定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["DisplayLineDirection"]
    AnnotationTypeFieldDefinitionAnnotationEditorFeature:
      description: |
        作図ツール・作図モードのフィールドの定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["AnnotationEditorFeature"]
    AnnotationTypeFieldDefinitionOneIntegerField:
      description: |
        数値の値をひとつだけ持つフィールドの定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["OneIntegerField"]
        title:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: |
            フィールドのタイトル
        prefix:
          type: string
          description: |
            フィールドの前に付与する文字列。
        postfix:
          type: string
          description: |
            フィールドの後に付与する文字列
        description:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: |
            フィールドについての説明
        initial_value:
          type: integer
          description: |
            フィールドの初期値
    AnnotationTypeFieldDefinitionOneStringField:
      description: |
        文字列の値をひとつだけ持つフィールドの定義
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["OneStringField"]
        title:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: |
            フィールドのタイトル
        prefix:
          type: string
          description: |
            フィールドの前に付与する文字列。
        postfix:
          type: string
          description: |
            フィールドの後に付与する文字列
        description:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: |
            フィールドについての説明
        initial_value:
          type: string
          description: |
            フィールドの初期値
    AnnotationTypeFieldDefinitionOneBooleanField:
      description: |
        真偽値の値をひとつだけ持つフィールドの定義
      type: object
      required:
        - _type
        - label
      properties:
        _type:
          type: string
          enum: ["OneBooleanField"]
        title:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: |
            フィールドのタイトル
        description:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: |
            フィールドについての説明
        initial_value:
          type: boolean
          description: |
            フィールドの初期値
        label:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: |
            チェックボックスのラベルとして表示する文言
    UserDefinedAnnotationDataType:
      type: object
      properties:
        _type:
          type: string
          description: |
            ユーザー定義アノテーション種別の型を指定します。
            指定可能な値と、その意味は下記の通りです。

            * `BoundingBox2d` - 2次元の矩形
            * `Polygon2d` - 2次元のポリゴン
            * `Polyline2d` - 2次元のポリライン
            * `SinglePoint2d` - 2次元の点
            * `SemanticSegmentation2d` - 2次元のセマンティックセグメンテーション
            * `InstanceSegmentation2d` - 2次元のインスタンスセグメンテーション
            * `Range1d` - 1次元の範囲
            * `Classification` - 全体アノテーション
            * `Unknown` - その他のアノテーション種別

            下記のフィールド定義は、すべてのアノテーション種別の型に対して使用可能です。
            * `OneIntegerField`
            * `OneStringField`
            * `OneBooleanField`

            その他のフィールド定義は、使用可能なアノテーション種別の型に制限があります。
            ユーザー定義アノテーション種別の型ごとの、使用可能なフィールド定義を下記の表で示します。

            |ユーザー定義アノテーション種別の型 | 使用可能なフィールド定義 |
            |-----------------|:----------:|
            | BoundingBox2d          | MinimumSize2dWithDefaultInsertPosition, VertexCountMinMax, MinimumArea2d, MarginOfErrorTolerance |
            | Polygon2d              | MinimumSize2d, VertexCountMinMax, MinimumArea2d, MarginOfErrorTolerance |
            | Polyline2d             | VertexCountMinMax, DisplayLineDirection, MarginOfErrorTolerance |
            | SinglePoint2d          | MarginOfErrorTolerance |
            | SemanticSegmentation2d | AnnotationEditorFeature, MarginOfErrorTolerance |
            | InstanceSegmentation2d | AnnotationEditorFeature, MarginOfErrorTolerance |
            | Range1d                | MarginOfErrorTolerance |
            | Classification         | MarginOfErrorTolerance |
            | Unknown | - |
          enum:
            - BoundingBox2d
            - Polygon2d
            - Polyline2d
            - SinglePoint2d
            - SemanticSegmentation2d
            - InstanceSegmentation2d
            - Range1d
            - Classification
            - Unknown
    AdditionalDataDefinitionType:
      type: string
      enum:
        - flag
        - integer
        - text
        - comment
        - choice
        - select
        - tracking
        - link
      description: |
        属性の種類
        * `flag` - 真偽値
        * `integer` - 整数値
        * `text` - 自由記述（1行）
        * `comment` - 自由記述（複数行）
        * `choice` - 選択肢（ラジオボタン式）
        * `select` - 選択肢（ドロップダウン式）
        * `tracking` - トラッキングID
        * `link` - アノテーションリンク
    PositionForMinimumBoundingBoxInsertion:
      type: object
      description: |
        `annotation_type` が `bounding_box` かつ `min_warn_rule` が `and` または `or` の場合のみ、挿入する最小矩形アノテーションの原点を指定できます。
        画像左上の座標が「x=0, y=0」です。
        未指定、もしくは「画像外に飛び出たアノテーション」を許可していないにも関わらず飛び出してしまう場合は、表示範囲の中央に挿入されます。
        「スキャンした帳票の記入欄」や「定点カメラで撮影した製品ラベル」など、アノテーションしたい位置やサイズが多くの画像で共通している場合に便利です。

        `annotation_type` が `bounding_box` 以外の場合は必ず未指定となります。
      required:
        - x
        - y
      properties:
        x:
          type: integer
        y:
          type: integer
    BoundingBoxMetadata:
      description: ベクター形式のアノテーション（矩形、ポリゴン、ポリライン、点）のメタデータ
      type: object
      required:
        - min_width
        - min_height
        - min_warn_rule
      properties:
        min_width:
          type: integer
          description: 幅の最小値[ピクセル]
        min_height:
          type: integer
          description: 高さの最小値[ピクセル]
        min_warn_rule:
          type: string
          enum:
            - none
            - or
            - and
          description: |
            サイズの制約に関する情報
            * `none` - 制約なし
            * `or` - 幅と高さの両方が最小値以上
            * `and` - 幅と高さのどちらか一方が最小値以上
        min_area:
          type: integer
          minimum: 1
          description: 面積の最小値[平方ピクセル]
        max_vertices:
          type: integer
          description: 頂点数の最大値
        min_vertices:
          type: integer
          description: 頂点数の最小値
        position_for_minimum_bounding_box_insertion:
          $ref: "#/components/schemas/PositionForMinimumBoundingBoxInsertion"
        tolerance:
          type: integer
          description: 許容誤差[ピクセル]
        has_direction:
          type: boolean
          default: false
          description: |
            `annotation_type` が `polyline` の場合、アノテーションに向きを持たせるかどうかを指定できます。
            この値が `true` の場合、Annofabの標準画像エディタ上ではポリラインの向きを示す矢印が描画されるようになります。

            `annotationType` が `polyline` 以外の場合は必ず `false` となります。

    SegmentationMetadata:
      type: object
      description: 塗りつぶしアノテーションのメタデータ
      required:
        - min_width
        - min_height
        - min_warn_rule
      properties:
        min_width:
          type: integer
          description: 幅の最小値[ピクセル]
        min_height:
          type: integer
          description: 高さの最小値[ピクセル]
        min_warn_rule:
          type: string
          enum:
            - none
            - or
            - and
          description: |
            サイズの制約に関する情報
            * `none` - 制約なし
            * `or` - 幅と高さの両方が最小値以上
            * `and` - 幅と高さのどちらか一方が最小値以上
        tolerance:
          type: integer
          description: 許容誤差[ピクセル]


    LabelV1:
      type: object
      required:
        - label_id
        - label_name
        - keybind
        - annotation_type
        - additional_data_definitions
        - color
        - annotation_editor_feature
      properties:
        label_id:
          $ref: "#/components/schemas/LabelId"
        label_name:
          $ref: "#/components/schemas/InternationalizationMessage"
        keybind:
          type: array
          description: ショートカットキー
          items:
            $ref: "#/components/schemas/Keybind"
        annotation_type:
          $ref: "#/components/schemas/AnnotationType"
        bounding_box_metadata:
          $ref: "#/components/schemas/BoundingBoxMetadata"
        segmentation_metadata:
          $ref: "#/components/schemas/SegmentationMetadata"
        additional_data_definitions:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataDefinitionV1"
          description: 属性
        color:
          $ref: "#/components/schemas/Color"
        annotation_editor_feature:
          $ref: "#/components/schemas/AnnotationEditorFeature"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    LabelV2:
      type: object
      required:
        - label_id
        - label_name
        - keybind
        - annotation_type
        - additional_data_definitions
        - color
        - annotation_editor_feature
      properties:
        label_id:
          $ref: "#/components/schemas/LabelId"
        label_name:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: ラベル名
        keybind:
          description: ショートカットキー
          type: array
          items:
            $ref: "#/components/schemas/Keybind"
        annotation_type:
          $ref: "#/components/schemas/AnnotationType"
        bounding_box_metadata:
          $ref: "#/components/schemas/BoundingBoxMetadata"
        segmentation_metadata:
          $ref: "#/components/schemas/SegmentationMetadata"
        additional_data_definitions:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataDefinitionId"
          description: ラベルに所属する属性のID
        color:
          $ref: "#/components/schemas/Color"
        annotation_editor_feature:
          $ref: "#/components/schemas/AnnotationEditorFeature"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    LabelV3:
      type: object
      required:
        - label_id
        - label_name
        - keybind
        - annotation_type
        - field_values
        - additional_data_definitions
        - color
        - annotation_editor_feature
      properties:
        label_id:
          $ref: "#/components/schemas/LabelId"
        label_name:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: ラベル名
        keybind:
          description: ショートカットキー
          type: array
          items:
            $ref: "#/components/schemas/Keybind"
        annotation_type:
          $ref: "#/components/schemas/AnnotationType"
        field_values:
          type: object
          description: |
            KeyがフィールドIdであるDictionaryです。

            カスタムの[組織プラグイン](#operation/putOrganizationPlugin)で利用される[UserDefinedAnnotationTypeDefinition](#tag/x-data-types/UserDefinedAnnotationTypeDefinition).`field_definitions`で定義されます。
          additionalProperties:
            $ref: "#/components/schemas/AnnotationTypeFieldValue"
        additional_data_definitions:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalDataDefinitionId"
          description: ラベルに所属する属性のID
        color:
          $ref: "#/components/schemas/Color"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AnnotationTypeFieldValue:
      description: |
        ユーザー定義アノテーション種別のフィールドに設定される値です。
        アノテーション種別のフィールド定義と対応するフィールド値のみ登録を許可されます。
      oneOf:
        - $ref: "#/components/schemas/AnnotationTypeFieldValueMinimumSize"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueMinimumSize2dWithDefaultInsertPosition"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueMarginOfErrorTolerance"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueVertexCountMinMax"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueMinimumArea2d"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueDisplayLineDirection"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueAnnotationEditorFeature"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueOneIntegerFieldValue"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueOneStringFieldValue"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueOneBooleanFieldValue"
        - $ref: "#/components/schemas/AnnotationTypeFieldValueEmptyFieldValue"
      discriminator:
        propertyName: "_type"
        mapping:
          MinimumSize2d: "#/components/schemas/AnnotationTypeFieldValueMinimumSize"
          MinimumSize2dWithDefaultInsertPosition: "#/components/schemas/AnnotationTypeFieldValueMinimumSize2dWithDefaultInsertPosition"
          MarginOfErrorTolerance: "#/components/schemas/AnnotationTypeFieldValueMarginOfErrorTolerance"
          VertexCountMinMax: "#/components/schemas/AnnotationTypeFieldValueVertexCountMinMax"
          MinimumArea2d: "#/components/schemas/AnnotationTypeFieldValueMinimumArea2d"
          DisplayLineDirection: "#/components/schemas/AnnotationTypeFieldValueDisplayLineDirection"
          AnnotationEditorFeature: "#/components/schemas/AnnotationTypeFieldValueAnnotationEditorFeature"
          OneIntegerFieldValue: "#/components/schemas/AnnotationTypeFieldValueOneIntegerFieldValue"
          OneStringFieldValue: "#/components/schemas/AnnotationTypeFieldValueOneStringFieldValue"
          OneBooleanFieldValue: "#/components/schemas/AnnotationTypeFieldValueOneBooleanFieldValue"
          EmptyFieldValue: "#/components/schemas/AnnotationTypeFieldValueEmptyFieldValue"
    AnnotationTypeFieldValueMinimumSize:
      type: object
      description: アノテーションの最小サイズに関する設定
      required:
        - _type
        - min_warn_rule
        - min_width
        - min_height
      properties:
        _type:
          type: string
          enum: ["MinimumSize2d"]
        min_warn_rule:
          $ref: "#/components/schemas/AnnotationTypeFieldMinWarnRule"
        min_width:
          type: integer
          minimum: 1
        min_height:
          type: integer
          minimum: 1
    AnnotationTypeFieldValueMinimumSize2dWithDefaultInsertPosition:
      required:
        - _type
        - min_warn_rule
        - min_width
        - min_height
      properties:
        _type:
          type: string
          enum: ["MinimumSize2dWithDefaultInsertPosition"]
        min_warn_rule:
          $ref: "#/components/schemas/AnnotationTypeFieldMinWarnRule"
        min_width:
          type: integer
          minimum: 1
        min_height:
          type: integer
          minimum: 1
        position_for_minimum_bounding_box_insertion:
          type: array
          description: |
            最小矩形の挿入位置を、要素が2の配列で指定します。
          example: [0, 0]
          items:
            type: integer
    AnnotationTypeFieldMinWarnRule:
      type: string
      enum:
        - and
        - or
      description: |
        最小の幅(min_width)と最小の高さ(min_height)がどのような状態になったときにエラーとするかを指定します。

        * `and` - min_width、min_heightの両方が最小値未満の場合にエラーとなります。
        * `or` - min_width、min_heightのいずれかが最小値未満の場合にエラーとなります。
    AnnotationTypeFieldValueMarginOfErrorTolerance:
      type: object
      description: 誤差許容範囲
      required:
        - _type
        - max_pixel
      properties:
        _type:
          type: string
          enum: ["MarginOfErrorTolerance"]
        max_pixel:
            type: integer
            minimum: 1
    AnnotationTypeFieldValueVertexCountMinMax:
      type: object
      description: |
        頂点数の最大・最小
      required:
        - _type
        - min
        - max
      properties:
        _type:
          type: string
          enum: ["VertexCountMinMax"]
        min:
            type: integer
            minimum: 1
        max:
            type: integer
            minimum: 1
    AnnotationTypeFieldValueMinimumArea2d:
      type: object
      description: |
        最小の面積
      required:
        - _type
        - min_area
      properties:
        _type:
          type: string
          enum: ["MinimumArea2d"]
        min_area:
            type: integer
            minimum: 1
    AnnotationTypeFieldValueDisplayLineDirection:
      type: object
      description: |
        線の向き表示/非表示の設定
      required:
        - _type
        - has_direction
      properties:
        _type:
          type: string
          enum: ["DisplayLineDirection"]
        has_direction:
            type: boolean
    AnnotationTypeFieldValueAnnotationEditorFeature:
      type: object
      description: |
        作図ツール・作図モード
      required:
        - _type
        - append
        - erase
        - freehand
        - rectangle_fill
        - polygon_fill
        - fill_near
      properties:
        _type:
          type: string
          enum: ["AnnotationEditorFeature"]
        append:
            type: boolean
        erase:
            type: boolean
        freehand:
            type: boolean
        rectangle_fill:
            type: boolean
        polygon_fill:
            type: boolean
        fill_near:
            type: boolean
    AnnotationTypeFieldValueOneIntegerFieldValue:
      description: 数値をひとつだけ持つフィールド
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["OneIntegerFieldValue"]
        value:
          type: integer
    AnnotationTypeFieldValueOneStringFieldValue:
      description: 文字列を一つだけ持つフィールド
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["OneStringFieldValue"]
        value:
          type: string
    AnnotationTypeFieldValueOneBooleanFieldValue:
      description: 真偽値をひとつだけ持つフィールド
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["OneBooleanFieldValue"]
        value:
          type: boolean
    AnnotationTypeFieldValueEmptyFieldValue:
      description: 値を持たないフィールド。　アノテーション仕様上に定義が存在すること自体に意味がある場合のフィールド値に利用します。
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["EmptyFieldValue"]
    Color:
      description: RGBで表現される色情報
      type: object
      required:
        - red
        - green
        - blue
      properties:
        red:
          type: integer
          minimum: 0
          maximum: 255
        green:
          type: integer
          minimum: 0
          maximum: 255
        blue:
          type: integer
          minimum: 0
          maximum: 255
    AnnotationEditorFeature:
      description: |
        塗りつぶしの作図機能に関する情報
      type: object
      required:
        - append
        - erase
        - freehand
        - rectangle_fill
        - polygon_fill
        - fill_near
      properties:
        append:
          type: boolean
          description: 塗りつぶしの「追記」機能が使えるか否か
        erase:
          type: boolean
          description: 塗りつぶしの「消しゴム」機能が使えるか否か
        freehand:
          type: boolean
          description: 塗りつぶしの「フリーハンド」機能が使えるか否か
        rectangle_fill:
          type: boolean
          description: 塗りつぶしの「矩形」機能が使えるか否か
        polygon_fill:
          type: boolean
          description: 塗りつぶしの「自由形状」機能が使えるか否か
        fill_near:
          type: boolean
          description: 「近似色塗りつぶし」機能を有効にするかどうか
    AdditionalDataDefinitionV1:
      type: object
      required:
        - additional_data_definition_id
        # 正確にはnameもrequiredだが、annofab-api-js-clientでAnnotationSpecsV2を読む際に支障があるので消している #8590
        # - name
        - type
      properties:
        additional_data_definition_id:
          $ref: "#/components/schemas/AdditionalDataDefinitionId"
        read_only:
          type: boolean
          description: 読み込み専用
          default: false
        name:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: 属性名
        default:
          $ref: "#/components/schemas/AdditionalDataDefaultType"
        keybind:
          description: ショートカットキー
          type: array
          items:
            $ref: "#/components/schemas/Keybind"
        type:
          $ref: "#/components/schemas/AdditionalDataDefinitionType"
        choices:
          description: ドロップダウンまたはラジオボタンの選択肢
          type: array
          items:
            type: object
            required:
              - choice_id
              - name
            properties:
              choice_id:
                $ref: "#/components/schemas/ChoiceId"
              name:
                $ref: "#/components/schemas/InternationalizationMessage"
                description: 選択肢の名前
              keybind:
                description: ショートカットキー
                type: array
                items:
                  $ref: "#/components/schemas/Keybind"
        regex:
          type: string
          description: 属性の値が、指定した正規表現に一致している必要があります。
        label_ids:
          type: array
          description: リンク属性において、リンク先として指定可能なラベルID（空の場合制限なし）
          items:
            type: string
        required:
          type: boolean
          description: リンク属性において、入力を必須とするかどうか
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AdditionalDataDefinitionV2:
      type: object
      required:
        - additional_data_definition_id
        - name
        - type
      properties:
        additional_data_definition_id:
          $ref: "#/components/schemas/AdditionalDataDefinitionId"
        read_only:
          type: boolean
          description: 読み込み専用
          default: false
        name:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: 属性名
        default:
          $ref: "#/components/schemas/AdditionalDataDefaultType"
        keybind:
          description: ショートカットキー
          type: array
          items:
            $ref: "#/components/schemas/Keybind"
        type:
          $ref: "#/components/schemas/AdditionalDataDefinitionType"
        choices:
          description: ドロップダウンまたはラジオボタンの選択肢
          type: array
          items:
            type: object
            required:
              - choice_id
              - name
            properties:
              choice_id:
                $ref: "#/components/schemas/ChoiceId"
              name:
                $ref: "#/components/schemas/InternationalizationMessage"
                description: 選択肢の名前
              keybind:
                type: array
                description: ショートカットキー
                items:
                  $ref: "#/components/schemas/Keybind"
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    AdditionalDataRestriction:
      type: object
      required:
        - additional_data_definition_id
        - condition
      properties:
        additional_data_definition_id:
          $ref: "#/components/schemas/AdditionalDataDefinitionId"
        condition:
          $ref: "#/components/schemas/AdditionalDataRestrictionCondition"
    AdditionalDataRestrictionCondition:
      description: |
        属性の制約

          * `AdditionalDataRestrictionConditionCanInput`: 属性値の入力を許可するかどうか
          * `AdditionalDataRestrictionConditionEquals`: 指定した値に等しい
          * `AdditionalDataRestrictionConditionNotEquals`: 指定した値に等しくない
          * `AdditionalDataRestrictionConditionMatches`: 指定した正規表現に一致する
              * `AdditionalDataDefinitionType`が`text`か`comment`のときのみ利用可能
          * `AdditionalDataRestrictionConditionNotMatches`: 指定した正規表現に一致しない
              * `AdditionalDataDefinitionType`が`text`か`comment`のときのみ利用可能
          * `AdditionalDataRestrictionConditionHasLabel`: 指定したラベルIDに一致する（アノテーションリンク属性限定）
              * `AdditionalDataDefinitionType`が`link`のときのみ利用可能
          * `AdditionalDataRestrictionConditionImply`: 指定した前提条件を満たすときのみ、制約を満たすかどうか

        以下のJSONは、「属性IDが`attr2`の属性値が`true`ならば、属性IDが`attr1`の属性値は`choice1`である」という制約を表しています。

        ```
        {
            "additional_data_definition_id": "attr1",
            "condition": {
                "_type": "Imply",
                "premise": {
                    "additional_data_definition_id": "attr2",
                    "condition": {
                        "_type": "Equals",
                        "value": "true"
                    }
                },
                "condition": {
                    "_type": "Equals",
                    "value": "choice1"
                }
            }
        }
        ```

      oneOf:
        - $ref: "#/components/schemas/AdditionalDataRestrictionConditionCanInput"
        - $ref: "#/components/schemas/AdditionalDataRestrictionConditionEquals"
        - $ref: "#/components/schemas/AdditionalDataRestrictionConditionNotEquals"
        - $ref: "#/components/schemas/AdditionalDataRestrictionConditionMatches"
        - $ref: "#/components/schemas/AdditionalDataRestrictionConditionNotMatches"
        - $ref: "#/components/schemas/AdditionalDataRestrictionConditionHasLabel"
        - $ref: "#/components/schemas/AdditionalDataRestrictionConditionImply"
      discriminator:
        propertyName: "_type"
        mapping:
          CanInput: "#/components/schemas/AdditionalDataRestrictionConditionCanInput"
          Equals: "#/components/schemas/AdditionalDataRestrictionConditionEquals"
          NotEquals: "#/components/schemas/AdditionalDataRestrictionConditionNotEquals"
          Matches: "#/components/schemas/AdditionalDataRestrictionConditionMatches"
          NotMatches: "#/components/schemas/AdditionalDataRestrictionConditionNotMatches"
          HasLabel: "#/components/schemas/AdditionalDataRestrictionConditionHasLabel"
          Imply: "#/components/schemas/AdditionalDataRestrictionConditionImply"
    AdditionalDataRestrictionConditionCanInput:
      type: object
      required:
        - _type
        - enable
      properties:
        _type:
          type: string
          description: |
            `CanInput`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "CanInput"
        enable:
          type: boolean
          description: |
            `false`を指定することで、属性値の入力を許可しないようにできます。
            `AdditionalDataRestrictionConditionImply`との組み合わせで、特定条件下のみ入力を許すといった制限ができます。
    AdditionalDataRestrictionConditionEquals:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          description: |
            `Equals`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Equals"
        value:
          type: string
          description: 指定された値と等しいことを要求します。
    AdditionalDataRestrictionConditionNotEquals:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          description: |
            `NotEquals`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "NotEquals"
        value:
          type: string
          description: |
            指定された値と異なることを要求します。
            `value`に`""`を指定することで、入力を必須とすることができます。
    AdditionalDataRestrictionConditionMatches:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          description: |
            `Matches`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Matches"
        value:
          type: string
          description: 指定された正規表現に一致することを要求します。
    AdditionalDataRestrictionConditionNotMatches:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          description: |
            `NotMatches`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "NotMatches"
        value:
          type: string
          description: 指定された正規表現に一致しないことを要求します。
    AdditionalDataRestrictionConditionHasLabel:
      type: object
      required:
        - _type
        - labels
      properties:
        _type:
          type: string
          description: |
            `HasLabel`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "HasLabel"
        labels:
          type: array
          description: アノテーションリンク属性において、アノテーションリンク先として指定可能なラベルIDを制限します。
          items:
            type: string
    AdditionalDataRestrictionConditionImply:
      type: object
      required:
        - _type
        - premise
        - condition
      properties:
        _type:
          type: string
          description: |
            `Imply`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Imply"
        premise:
          $ref: "#/components/schemas/AdditionalDataRestriction"
          description: |
            `premise`で指定された条件を満たすとき、`condition`で指定された条件を満たすことを要求します。
        condition:
          $ref: "#/components/schemas/AdditionalDataRestrictionCondition"
    Keybind:
      type: object
      required:
        - code
        - shift
        - ctrl
        - alt
      properties:
        code:
          type: string
          description: |
            [KeyboardEvent.code](https://developer.mozilla.org/ja/docs/Web/API/KeyboardEvent/code)に相当する値です。
          example: "KeyA"
        shift:
          type: boolean
          description: Shiftキーを押しているかどうか
        ctrl:
          type: boolean
          description: Ctrlキーを押しているかどうか
        alt:
          type: boolean
          description: Altキーを押しているかどうか
    Task:
      type: object
      required:
        - project_id
        - task_id
        - phase
        - phase_stage
        - status
        - input_data_id_list
        - histories_by_phase
        - number_of_rejections
        - work_time_span
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        phase:
          $ref: "#/components/schemas/TaskPhase"
        phase_stage:
          $ref: "#/components/schemas/TaskPhaseStage"
        status:
          $ref: "#/components/schemas/TaskStatus"
        input_data_id_list:
          type: array
          description: タスクに含まれる入力データのID
          items:
            $ref: "#/components/schemas/InputDataId"
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: 担当者のアカウントID
        histories_by_phase:
          type: array
          description: 簡易的なタスク履歴（あるフェーズを誰が担当したか）
          items:
            $ref: "#/components/schemas/TaskHistoryShort"
        work_time_span:
          type: integer
          description: 累計実作業時間(ミリ秒)
        number_of_rejections:
          type: integer
          deprecated: true
          description: |
            このタスクが差戻しされた回数（すべてのフェーズでの差戻し回数の合計

            このフィールドは、どのフェーズで何回差戻されたかを区別できないため、廃止予定です。
            `histories_by_phase` で各フェーズの回数を計算することで、差戻し回数が分かります。

            例）`acceptance`フェーズが3回ある場合、`acceptance`フェーズで2回差し戻しされたことになります。
        started_datetime:
          type: string
          format: date-time
          description: 現在のフェーズが開始された日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
        operation_updated_datetime:
          type: string
          format: date-time
          description: タスクのステータスやフェーズ、担当者などが更新されたときの日時
        sampling:
          type: string
          enum:
            - inspection_skipped
            - inspection_stages_skipped
            - acceptance_skipped
            - inspection_and_acceptance_skipped
          description: |
            検査抜取検査/抜取受入によって、どのフェーズがスキップされたか

            * `inspection_skipped` - 抜取検査の対象外となり、検査フェーズがスキップされた
            * `inspection_stages_skipped` - 抜取検査の対象外となり、検査フェーズのステージの一部がスキップされた
            * `acceptance_skipped` - 抜取受入の対象外となり、受入フェーズがスキップされた
            * `inspection_and_acceptance_skipped` - 抜取検査・抜取受入の対象外となり、検査・受入フェーズがスキップされた

            未指定ならば、どのフェーズもスキップされていません。
        metadata:
          $ref: "#/components/schemas/TaskMetadata"
    TaskPhase:
      type: string
      enum:
        - annotation
        - inspection
        - acceptance
      description: |
        タスクのフェーズ
        * `annotation` - 教師付け
        * `inspection` - 検査
        * `acceptance` - 受入
    TaskPhaseStage:
      description: タスクのフェーズのステージ番号
      type: integer
      minimum: 1
    TaskStatus:
      type: string
      enum:
        - not_started
        - working
        - on_hold
        - break
        - complete
        - rejected
        - cancelled
      description: |
        タスクのステータス
        * `not_started` - 未着手
        * `working` - 作業中
        * `on_hold` - 保留中
        * `break` - 休憩中
        * `complete` - 完了
        * `rejected` - 差し戻し。[operateTask](#operation/operateTask) APIのリクエストボディに渡すときのみ利用する。その他のAPIのリクエストやレスポンスには使われない。
        * `cancelled` - 提出の取り消し。[operateTask](#operation/operateTask) APIのリクエストボディに渡すときのみ利用する。その他のAPIのリクエストやレスポンスには使われない。
    TaskMetadata:
      type: object
      additionalProperties: true
      description: |
        ユーザーが自由に登録できるkey-value型のメタデータです。
        keyにはメタデータ名、valueには値を指定してください。

        keyに指定できる文字種は次の通りです。

        * 半角英数字
        * `_` (アンダースコア)
        * `-` (ハイフン)

        valueに指定できる値は次の通りです。

        * 文字列
        * 数値
        * 真偽値
    TaskRequest:
      type: object
      required:
        - input_data_id_list
      properties:
        input_data_id_list:
          type: array
          description: タスクに割り当てる入力データのID。タスクに割り当てることができる入力データの個数は最大200です。
          items:
            $ref: "#/components/schemas/InputDataId"
        metadata:
          $ref: "#/components/schemas/TaskMetadata"
    TaskGenerateRequest:
      type: object
      required:
        - task_generate_rule
        - project_last_updated_datetime
      properties:
        task_generate_rule:
          $ref: "#/components/schemas/TaskGenerateRule"
        project_last_updated_datetime:
          type: string
          format: date-time
          description: プロジェクトの最終更新日時（[getProject](#operation/getProject) APIのレスポンス `updated_datetime`）。タスク生成の排他制御に使用。
    TaskGenerateRule:
      description: |
        タスク生成のルール
        * `TaskGenerateRuleByCount`: 1つのタスクに割り当てる入力データの個数を指定してタスクを生成します。
        * `TaskGenerateRuleByDirectory`: 入力データ名をファイルパスに見立てて、ディレクトリ単位でタスクを生成します。
        * `TaskGenerateRuleByInputDataCsv`: 各タスクへの入力データへの割り当てを記入したCSVをアップロードした、一時データ保存先パスを指定してタスクを生成します。
      oneOf:
        - $ref: "#/components/schemas/TaskGenerateRuleByCount"
        - $ref: "#/components/schemas/TaskGenerateRuleByDirectory"
        - $ref: "#/components/schemas/TaskGenerateRuleByInputDataCsv"
      discriminator:
        propertyName: "_type"
        mapping:
          ByCount: "#/components/schemas/TaskGenerateRuleByCount"
          ByDirectory: "#/components/schemas/TaskGenerateRuleByDirectory"
          ByInputDataCsv: "#/components/schemas/TaskGenerateRuleByInputDataCsv"
    TaskGenerateRuleByCount:
      description: 1つのタスクに割り当てる入力データの個数を指定してタスクを生成します。
      type: object
      required:
        - task_id_prefix
        - allow_duplicate_input_data
        - input_data_count
        - input_data_order
      properties:
        task_id_prefix:
          type: string
          description: |
            タスクIDのプレフィックス。[値の制約についてはこちら。](#section/API-Convention/APIID)
        allow_duplicate_input_data:
          type: boolean
          description: |
            `true`のときは、既にタスクに使われている入力データも、新しいタスクに割り当てます。`false`のときは、既にタスクに使われている入力データを除外します。まだタスクに使われていない入力データだけを、新しいタスクに割り当てます。
        input_data_count:
          type: integer
          description: |
            1つのタスクに割り当てる入力データの個数。
            動画プロジェクトでは必ず`1`を指定してください。
          example: 10
          minimum: 1
          maximum: 200
        input_data_order:
          $ref: "#/components/schemas/InputDataOrder"
        _type:
          type: string
          description: |
            `ByCount`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "ByCount"
    TaskGenerateRuleByDirectory:
      description: 入力データ名をファイルパスに見立て、ディレクトリ単位でタスクを生成します。
      type: object
      required:
        - task_id_prefix
      properties:
        task_id_prefix:
          type: string
          description: |
            タスクIDのプレフィックス。[値の制約についてはこちら。](#section/API-Convention/APIID)
        input_data_name_prefix:
          type: string
          description: タスク生成対象の入力データ名のプレフィックス
        _type:
          type: string
          description: |
            `ByDirectory`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "ByDirectory"
    TaskGenerateRuleByInputDataCsv:
      description: |
        各タスクへの入力データへの割当を記入したCSVへのS3上のパスを指定してタスクを生成します。
        1つのタスクに対する入力データの個数は最大200です。200を超えるタスクが1つでもある場合にはタスク生成に失敗します。
      type: object
      required:
        - csv_data_path
      properties:
        csv_data_path:
          type: string
          description: |
            各タスクへの入力データへの割り当てを記入したCSVへのS3上のパス。
          example: "s3://ANNOFAB-BUCKET/PATH/TO/CSV"
        _type:
          type: string
          description: |
            `ByInputDataCsv`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "ByInputDataCsv"
    InputDataOrder:
      type: string
      enum:
        - name_asc
        - name_desc
        - random
      description: |
        タスクに割り当てる入力データの順序

        * `name_asc` - 入力データ名の昇順
        * `name_desc` - 入力データ名の降順
        * `random` - ランダム
    TaskOperation:
      type: object
      required:
        - status
        - last_updated_datetime
      properties:
        status:
          $ref: "#/components/schemas/TaskStatus"
          description: |
            次に遷移させるタスクの状態。[詳細はこちら](#tag/x-data-types/TaskStatus)。
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
          description: |
            タスクの最終更新日時
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: 変更後の担当者のアカウントID。担当者を未割り当てにする場合は未指定。
        force:
          type: boolean
          default: false
          description: |
            タスクの強制操作を行うかどうか。
            `status`が`rejected`のときのみ、`true`を指定できます。

    TaskAssignRequest:
      type: object
      required:
        - request_type
      properties:
        request_type:
          $ref: "#/components/schemas/TaskAssignRequestType"
    TaskAssignRequestType:
      description: |
        * `TaskAssignRequestTypeRandom`: 自分自身にランダムにタスクを割り当てます。プロジェクト設定でタスクのランダム割当を有効にした場合のみ利用できます。
        * `TaskAssignRequestTypeSelection`: メンバーに指定したタスクを割り当てます。ただし、メンバーはプロジェクトオーナーもしくはチェッカーロールを持つ必要があります。プロジェクト設定でタスクの選択割当を有効にした場合のみ利用できます。
        * `TaskAssignRequestTypeTaskProperty`: タスクプロパティ割当の設定に基づいて、タスクを自分自身に割り当てます。プロジェクト設定でタスクプロパティ割当を有効にした場合のみ利用できます。
      oneOf:
        - $ref: "#/components/schemas/TaskAssignRequestTypeRandom"
        - $ref: "#/components/schemas/TaskAssignRequestTypeSelection"
        - $ref: "#/components/schemas/TaskAssignRequestTypeTaskProperty"
      discriminator:
        propertyName: "_type"
        mapping:
          Random: "#/components/schemas/TaskAssignRequestTypeRandom"
          Selection: "#/components/schemas/TaskAssignRequestTypeSelection"
          TaskProperty: "#/components/schemas/TaskAssignRequestTypeTaskProperty"
    TaskAssignRequestTypeRandom:
      type: object
      required:
        - phase
      properties:
        phase:
          $ref: "#/components/schemas/TaskPhase"
          description: 割り当てるタスクのフェーズ。[詳細はこちら](#tag/x-data-types/TaskPhase)
        _type:
          type: string
          description: |
            `Random`
          example: "Random"
    TaskAssignRequestTypeSelection:
      type: object
      required:
        - user_id
        - task_ids
      properties:
        user_id:
          $ref: "#/components/schemas/UserId"
          description: タスクを割り当てられる担当者のユーザーID
        task_ids:
          description: 割り当てるタスクのID
          type: array
          items:
            $ref: "#/components/schemas/TaskId"
        _type:
          type: string
          description: |
            `Selection`
          example: "Selection"
    TaskAssignRequestTypeTaskProperty:
      type: object
      required:
        - phase
      properties:
        phase:
          $ref: "#/components/schemas/TaskPhase"
          description: 割り当てるタスクのフェーズ。[詳細はこちら](#tag/x-data-types/TaskPhase)
        _type:
          type: string
          description: |
            `TaskProperty`
          example: "TaskProperty"
    TaskHistoryShort:
      description: タスクのあるフェーズを誰が担当したかを表します。
      type: object
      required:
        - phase
        - phase_stage
        - account_id
      properties:
        phase:
          $ref: "#/components/schemas/TaskPhase"
        phase_stage:
          type: integer
          default: 1
          minimum: 1
        account_id:
          $ref: "#/components/schemas/AccountId"
        worked:
          type: boolean
          description: そのフェーズでタスクの作業を行ったかどうか（行った場合はtrue）
          default: false
    TaskHistory:
      description: タスクのあるフェーズで、誰がいつどれくらいの作業時間を費やしたかを表すタスク履歴です。
      type: object
      required:
        - project_id
        - task_id
        - task_history_id
        - accumulated_labor_time_milliseconds
        - phase
        - phase_stage
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        task_history_id:
          $ref: "#/components/schemas/TaskHistoryId"
        started_datetime:
          type: string
          format: date-time
          description: 開始日時
        ended_datetime:
          type: string
          format: date-time
          description: 終了日時
        accumulated_labor_time_milliseconds:
          type: string
          description: 累計実作業時間（ISO 8601 duration）
          example: "PT34H17M36.789S"
        phase:
          $ref: "#/components/schemas/TaskPhase"
        phase_stage:
          $ref: "#/components/schemas/TaskPhaseStage"
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: 担当者のアカウントID
    TaskHistoryEvent:
      description: タスク履歴イベントは、タスクの状態が変化した１時点を表します。作業時間は、複数のこれらイベントを集約して計算するものなので、このオブジェクトには含まれません。
      type: object
      required:
        - project_id
        - task_id
        - task_history_id
        - created_datetime
        - phase
        - phase_stage
        - status
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        task_history_id:
          $ref: "#/components/schemas/TaskHistoryId"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        phase:
          $ref: "#/components/schemas/TaskPhase"
        phase_stage:
          $ref: "#/components/schemas/TaskPhaseStage"
        status:
          $ref: "#/components/schemas/TaskStatus"
        account_id:
          $ref: "#/components/schemas/AccountId"
        request:
          description: |
            [operateTask](#operation/operateTask) APIによってタスク履歴イベントが生成されたときのリクエストボディ
          $ref: "#/components/schemas/TaskOperation"
    TaskInputValidation:
      description: タスクの提出操作に対する入力データID別のバリデーション結果です。
      type: object
      required:
        - input_data_id
        - annotation_errors
        - inspection_errors
        - comment_errors
      properties:
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        annotation_errors:
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"
        inspection_errors:
          type: array
          items:
            $ref: "#/components/schemas/InspectionValidationError"
        comment_errors:
          type: array
          items:
            $ref: "#/components/schemas/CommentValidationError"
    TaskValidation:
      description: タスクの全入力データに対するバリデーション結果です。
      type: object
      required:
        - project_id
        - task_id
        - inputs
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/InputDataSummary"
    InputDataSummary:
      description: ある入力データのバリデーション結果です。入力データIDをキーに引けるようにMap[入力データID, バリデーション結果]となっています
      type: object
      required:
        - input_data_id
        - inspection_summary
        - annotation_summaries
      properties:
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        inspection_summary:
          $ref: "#/components/schemas/InspectionSummary"
        annotation_summaries:
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"
    InspectionSummary:
      type: string
      enum:
        - no_inspection
        - no_comment_inspection
        - new_reply_to_unprocessed
        - new_unprocessed_inspection
        - unprocessed
        - complete
      description: |
        - `no_inspection` - 入力データに検査コメントが付けられていない。
        - `no_comment_inspection` - 入力データに空の検査コメントが付けられている。
        - `new_reply_to_unprocessed` - 現在進行中の検査・受入フェーズで未処理の検査コメントに対して新たに返信が付けられている。
        - `new_unprocessed_inspection` - 現在進行中の検査・受入フェーズでつけられた検査コメントのうち、未処理のものが1つ以上ある。
        - `unprocessed` - 過去の検査・受入フェーズでつけられた検査コメントのうち、未処理のものが1つ以上ある。
        - `complete` - 入力データにつけられた検査コメントで未処理のものがない。
    InputData:
      description: 入力データの情報を表すデータ構造です。
      type: object
      required:
        - input_data_id
        - project_id
        - organization_id
        - input_data_set_id
        - input_data_name
        - input_data_path
        - updated_datetime
        - sign_required
        - metadata
        - system_metadata
      properties:
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        project_id:
          $ref: "#/components/schemas/ProjectId"
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        input_data_set_id:
          $ref: "#/components/schemas/InputDataSetId"
        input_data_name:
          type: string
          description: 入力データ名
        input_data_path:
          type: string
          example: "s3://ANNOFAB-BUCKET/PATH/TO/INPUT_DATA"
          description: |
            入力データの実体が保存されたURLです。
            URLスキームが s3 もしくは https であるもののみをサポートしています。
        url:
          type: string
          description: システム内部用のプロパティ
        etag:
          description: |
            [HTTPレスポンスヘッダー ETag](https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/ETag)に相当する値です。
          type: string
          example: "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
        original_input_data_path:
          type: string
          example: "s3://YOUR-BUCKET/PATH/TO/INPUT_DATA"
          description: |
            システム内部用のプロパティ
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
        sign_required:
          type: boolean
          description: |
            CloudFrontのSignedCookieを使ったプライベートストレージを利用するかどうか
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
        system_metadata:
          $ref: "#/components/schemas/SystemMetadata"
    SystemMetadata:
      oneOf:
        - $ref: "#/components/schemas/SystemMetadataImage"
        - $ref: "#/components/schemas/SystemMetadataMovie"
        - $ref: "#/components/schemas/SystemMetadataCustom"
      discriminator:
        propertyName: "_type"
        mapping:
          Image: "#/components/schemas/SystemMetadataImage"
          Movie: "#/components/schemas/SystemMetadataMovie"
          Custom: "#/components/schemas/SystemMetadataCustom"
      description: |
        Annofabが設定したメタデータです。
        `metadata`プロパティとは違い、ユーザー側では値を編集できません。

        * `SystemMetadataImage`: 画像プロジェクト用のメタデータ
        * `SystemMetadataMovie`: 動画プロジェクト用のメタデータ
        * `SystemMetadataCustom`: カスタムプロジェクト用のメタデータ

    SystemMetadataImage:
      type: object
      required:
        - _type
      description: |
        画像データ用システムメタデータ。
      properties:
        original_resolution:
          $ref: "#/components/schemas/Resolution"
          description: |
            画像サイズ。
            Annofabにアップロードされる入力データとS3プライベートストレージの場合のみ設定されます。
            ただし、プライベートストレージにアクセスできなかった場合は、設定されません。
        resized_resolution:
          $ref: "#/components/schemas/Resolution"
          description: |
            リサイズ後の画像サイズ。
            入力データ登録時に画像がリサイズされた場合のみ設定されます。
        _type:
          type: string
          description: "`Image`"
          example: Image
    SystemMetadataMovie:
      type: object
      required:
        - _type
      description: |
        動画データ用システムメタデータ。
      properties:
        input_duration:
          type: number
          description: |
            動画の長さ[秒]。
            動画の長さが取得できなかった場合は、設定されません。
        _type:
          type: string
          description: "`Movie`"
          example: Movie
    SystemMetadataCustom:
      type: object
      required:
        - _type
      description: |
        カスタムデータ用システムメタデータ。
        現行はプロパティがない形式的なオブジェクトです。
      properties:
        _type:
          type: string
          description: "`Custom`"
          example: Custom
    InputDataRequest:
      type: object
      required:
        - input_data_name
        - input_data_path
      properties:
        input_data_name:
          type: string
          description: 入力データ名。ZIPファイルをアップロードする際は、入力データ名のプレフィックスを指定してください。
        input_data_path:
          type: string
          example: "s3://YOUR-BUCKET/PATH/TO/OBJECT"
          description: |
            入力データの実体が存在するURLです。
            Annofabにファイルをアップロードして入力データを作成する場合は、[createTempPath](#operation/createTempPath) APIで取得した`path`を指定してください。

            入力データの実体が[プライベートストレージ](/docs/faq/#prst9c)に存在する場合は、スキームが s3 または https であるURLを指定してください。
            S3プライベートストレージに存在するファイルを入力データとして登録する場合は、事前に[認可の設定](/docs/faq/#m0b240)が必要です。
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
        sign_required:
          type: boolean
          description: |
            CloudFrontのSignedCookieを使ったプライベートストレージを利用するかどうか。

            `true`を指定する場合は，`input_data_path`にAnnofabのAWS IDをTrusted Signerとして登録したCloudFrontのURLを指定してください。
        metadata:
          type: object
          description: |
            ユーザーが自由に登録できるkey-value型のメタデータです。
          additionalProperties:
            type: string
    SupplementaryData:
      type: object
      required:
        - organization_id
        - input_data_set_id
        - project_id
        - input_data_id
        - supplementary_data_id
        - supplementary_data_name
        - supplementary_data_path
        - supplementary_data_type
        - supplementary_data_number
        - url
        - updated_datetime
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        input_data_set_id:
          $ref: "#/components/schemas/InputDataSetId"
        project_id:
          $ref: "#/components/schemas/ProjectId"
          deprecated: true
          description: |
            プロジェクトID。将来的に廃止する予定です。
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        supplementary_data_id:
          $ref: "#/components/schemas/SupplementaryDataId"
        supplementary_data_name:
          type: string
          description: 補助情報の名前
        supplementary_data_path:
          type: string
          example: "s3://ANNOFAB-BUCKET/PATH/TO/INPUT_DATA"
          description: |
            補助情報の実体が存在するURLです。
            URLスキームが s3 もしくは https であるもののみをサポートしています。
        url:
          type: string
          format: uri
          description: システム内部用のプロパティ
        etag:
          description: |
            [HTTPレスポンスヘッダー ETag](https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/ETag)に相当する値です。
          type: string
          example: "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
        supplementary_data_type:
          $ref: "#/components/schemas/SupplementaryDataType"
        supplementary_data_number:
          type: integer
          description: 補助情報の表示順を表す数値。
          minimum: 0
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    SupplementaryDataType:
      type: string
      description: |
        補助情報の種類
        * `image` - 画像
        * `text` - テキスト
        * `custom` - カスタム（カスタムプロジェクトでしか利用できません）
      enum:
        - image
        - text
        - custom
    SupplementaryDataRequest:
      type: object
      required:
        - supplementary_data_name
        - supplementary_data_path
        - supplementary_data_type
        - supplementary_data_number
      properties:
        supplementary_data_name:
          type: string
          description: 補助情報の名前
        supplementary_data_path:
          type: string
          example: "s3://YOUR-BUCKET/PATH/TO/OBJECT"
          description: |
            補助情報の実体が存在するURLです。
            補助情報の実体をAnnofabにアップロードする場合は、[createTempPath](#operation/createTempPath) APIで取得した`path`を指定してください。

            補助情報の実体が[プライベートストレージ](/docs/faq/#prst9c)に存在する場合は、スキームが s3 または https であるURLを指定してください。
            補助情報の実体が、S3プライベートストレージに存在するファイルを補助情報として登録する場合は、[事前に認可の設定](/docs/faq/#m0b240)が必要です。

        supplementary_data_type:
          $ref: "#/components/schemas/SupplementaryDataType"
        supplementary_data_number:
          type: integer
          minimum: 0
          description: 補助情報の表示順を表す数値。同じ入力データに対して複数の補助情報で表示順が重複する場合、順序不定になります。
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"

    WebhookTestRequest:
      type: object
      required:
        - placeholders
      properties:
        placeholders:
          description: keyがプレースホルダーの名前、valueが置換後の値であるkey-valueペア
          type: object
          additionalProperties:
            type: string
          example:
            PROJECT_ID: 12345678-abcd-1234-abcd-1234abcd5678
            PROJECT_TITLE: Test Project

    WebhookTestResponse:
      type: object
      required:
       - result
      properties:
        result:
          description: |
            * success: 通知先から正常なレスポンス（2xx系）を受け取った
            * failure: 通知先からエラーレスポンス（2xx系以外）を受け取った
            * error: リクエスト送信に失敗した、もしくはレスポンスを受信できなかった
          type: string
          enum: [success, failure, error]
          example: success
        request_body:
          description: 実際に送信されたリクエストボディ
          type: string
        response_status:
          description: 通知先から返されたHTTPステータスコード
          type: integer
          example: 200
        response_body:
          description: 通知先から返されたレスポンスボディ
          type: string
        message:
          description: result="error" 時のエラー内容等
          type: string
    BatchInputDataRequestItemDelete:
      type: object
      description: 入力データ削除
      required:
        - project_id
        - input_data_id
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
          description: |
            `project_id`は利用されません。<br />
            常にpathパラメータで指定された`project_id`を利用します。
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        _type:
          type: string
          description: |
            `Delete`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Delete"
    BatchTaskRequestItemDelete:
      type: object
      description: タスク削除
      required:
        - project_id
        - task_id
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        _type:
          type: string
          description: |
            `Delete`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Delete"
    DataPath:
      type: object
      required:
        - url
        - path
      properties:
        url:
          type: string
          format: uri
          example: "https://s3.REGION.amazonaws.com/ANNOFAB-TEMP-BUCKET/UUID/UUID?param1=...&param2=..."
          description: ファイルアップロード用の一時URLです。このURLにファイルをアップロードします。
        path:
          type: string
          example: s3://<ANNOFAB-TEMPORARY-BUCKET-NAME>/<UUID>/<UUID>
          description: |
            [putInputData](#operation/putInputData) APIや[putSupplementaryData](#operation/putSupplementaryData) APIのリクエストボディに指定するパスです。
    InstructionImagePath:
      type: object
      required:
        - url
        - path
      properties:
        url:
          type: string
          format: uri
          example: "https://s3.REGION.amazonaws.com/ANNOFAB-TEMP-BUCKET/UUID/UUID?param1=...&param2=..."
          description: ファイルアップロード用の一時URLです。このURLにファイルをアップロードします。
        path:
          type: string
          format: url
          example: https://annofab.com/projects/{project_id}/instruction-images/{image_id}
          description: 作業ガイド画像のURL
    AnnotationQuery:
      description: |
        アノテーションの絞り込み条件
      type: object
      properties:
        task_id:
          description: |
            タスクIDで絞り込みます。
          type: string
          maxLength: 300
        exact_match_task_id:
          description: |
            タスクIDの検索方法を指定します。
            `true`の場合は完全一致検索、`false`の場合は部分一致検索です。
          type: boolean
          default: true
        input_data_id:
          description: |
            入力データID絞り込みます。
          type: string
          maxLength: 300
        exact_match_input_data_id:
          description: |
            入力データIDの検索方法を指定します。
            `true`の場合は完全一致検索、`false`の場合は部分一致検索です。
          type: boolean
          default: true
        label_id:
          $ref: "#/components/schemas/LabelId"
        attributes:
          $ref: "#/components/schemas/AdditionalDataListV1"
        updated_from:
          description: |
            開始日・終了日を含む区間[updated_from, updated_to]でアノテーションの更新日を絞り込むときに使用する、開始日（ISO 8601 拡張形式または基本形式）。

            `updated_to` より後の日付が指定された場合、期間指定は開始日・終了日を含む区間[updated_to, updated_from]となる。未指定の場合、API実行日(JST)の日付が指定されたものとして扱われる。
          type: string
          format: date
        updated_to:
          description: |
            開始日・終了日を含む区間[updated_from, updated_to]でアノテーションの更新日を絞り込むときに使用する、終了日（ISO 8601 拡張形式または基本形式）。

            未指定の場合、API実行日(JST)の日付が指定されたものとして扱われる。
          type: string
          format: date
    AnnotationInput:
      oneOf:
        - $ref: "#/components/schemas/AnnotationV1"
        - $ref: "#/components/schemas/AnnotationV2Input"
    AnnotationOutput:
      oneOf:
        - $ref: "#/components/schemas/AnnotationV1"
        - $ref: "#/components/schemas/AnnotationV2Output"
    AnnotationV1:
      type: object
      required:
        - project_id
        - task_id
        - input_data_id
        - details
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        details:
          type: array
          description: 矩形、ポリゴン、全体アノテーションなど個々のアノテーションの配列。
          items:
            $ref: "#/components/schemas/AnnotationDetailV1"
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    AnnotationV2Input:
      type: object
      required:
        - project_id
        - task_id
        - input_data_id
        - details
        - format_version
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        details:
          type: array
          description: 矩形、ポリゴン、全体アノテーションなど個々のアノテーションの配列。
          items:
            $ref: "#/components/schemas/AnnotationDetailV2Input"
        updated_datetime:
          type: string
          format: date-time
          description: |
            対象タスク・対象入力データへの最初の保存時は未指定にしてください。
            更新の場合はアノテーション取得時のupdated_datetimeをそのまま指定してください。
        format_version:
          type: string
          enum: ["2.0.0"]
    AnnotationV2Output:
      type: object
      required:
        - project_id
        - task_id
        - input_data_id
        - details
        - format_version
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        details:
          type: array
          description: 矩形、ポリゴン、全体アノテーションなど個々のアノテーションの配列。
          items:
            $ref: "#/components/schemas/AnnotationDetailV2Output"
        updated_datetime:
          type: string
          format: date-time
          description: |
            対象タスク・対象入力データへ一度もアノテーションの保存が行われていない場合、未指定となります。
            そうで無い場合、対象タスク・対象入力データのアノテーション最終更新時刻です。
        format_version:
          type: string
          enum: ["2.0.0"]
    PutAnnotationRequest:
      type: object
      required:
        - project_id
        - task_id
        - input_data_id
        - details
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        details:
          type: array
          description: 矩形、ポリゴン、全体アノテーションなど個々のアノテーションの配列。
          items:
            $ref: "#/components/schemas/AnnotationDetailV1"
        updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
          description: |
            新規作成時は未指定です。更新時は[getEditorAnnotation](#operation/getEditorAnnotation) APIで取得した`updated_datetime`を指定してください。
    AnnotationDataHoldingType:
      type: string
      enum:
        - inner
        - outer
      description:  |
        アノテーションのデータがどこに保持されるか
        * `inner` - アノテーションのデータ部をJSON内部に保持します。
        * `outer` - アノテーションのデータ部を外部ファイルの形式（画像など）で保持します
    AnnotationDetailV1:
      type: object
      required:
        - annotation_id
        - account_id
        - label_id
        - is_protected
        - data_holding_type
        - additional_data_list
      properties:
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: アノテーションを作成したユーザーのアカウントID
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: ラベルID。[アノテーション仕様](#tag/af-annotation-specs)で定義されます。
        is_protected:
          description: |
            `true`の場合、アノテーションをアノテーションエディタ上での削除から保護できます。
            外部から取り込んだアノテーションに属性を追加するときなどに指定すると、データの削除を防げます。
          type: boolean
          default: false
        data_holding_type:
          $ref: "#/components/schemas/AnnotationDataHoldingType"
        data:
          $ref: "#/components/schemas/AnnotationDataV1"
        path:
          type: string
          description: |
            外部ファイルに保存されたアノテーションのパス。`data_holding_type`が`inner`の場合は未指定です。
            レスポンスの場合は`annotation_id`と同じ値が格納されます。

            [putAnnotation](#operation/putAnnotation) APIのリクエストボディに渡す場合は、[createTempPath](#operation/createTempPath) APIで取得できる一時データ保存先パスを格納してください。
            更新しない場合は、[getEditorAnnotation](#operation/getEditorAnnotation) APIで取得した`path`をそのまま渡せます。

            外部ファイルのフォーマットは下表の通りです。

            <table>
            <tr><th>annotation_type</th><th>形式</th></tr>
            <tr><td>segmentation / segmentation_v2   </td><td>PNG画像。塗りつぶした部分は<code>rgba(255, 255, 255, 1) </code>、塗りつぶしていない部分は<code>rgba(0, 0, 0, 0) </code>。</td></tr>
            </table>
        etag:
          type: string
          description: 外部ファイルに保存されたアノテーションのETag。`data_holding_type`が`inner`の場合、または[putAnnotation](#operation/putAnnotation) APIのリクエストボディに渡す場合は未指定です。
        url:
          type: string
          format: uri
          description: 外部ファイルに保存されたアノテーションの認証済み一時URL。`data_holding_type`が`inner`の場合、または[putAnnotation](#operation/putAnnotation) APIのリクエストボディに渡す場合は未指定です。
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV1"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    AnnotationDetailV2Output:
      oneOf:
        - $ref: "#/components/schemas/AnnotationDetailV2Get"
      discriminator:
        propertyName: "_type"
        mapping:
          Get: "#/components/schemas/AnnotationDetailV2Get"
    AnnotationDetailV2Input:
      description: |
        - **AnnotationDetailV2Create**
          - 新規にアノテーションを作成する場合にこの型を利用します。
        - **AnnotationDetailV2Import**
          - 過去にAnnofab内外で作成したアノテーションをそのままインポートする場合にこの型を利用します。
        - **AnnotationDetailV2Update**
          - 既に存在するアノテーションを更新する場合にこの型を利用します
      oneOf:
        - $ref: "#/components/schemas/AnnotationDetailV2Create"
        - $ref: "#/components/schemas/AnnotationDetailV2Import"
        - $ref: "#/components/schemas/AnnotationDetailV2Update"
      discriminator:
        propertyName: "_type"
        mapping:
          Create: "#/components/schemas/AnnotationDetailV2Create"
          Import: "#/components/schemas/AnnotationDetailV2Import"
          Update: "#/components/schemas/AnnotationDetailV2Update"

    AnnotationDetailV2Get:
      type: object
      required:
        - _type
        - annotation_id
        - account_id
        - label_id
        - body
        - additional_data_list
        - editor_props
        - created_datetime
        - updated_datetime
      properties:
        _type:
          type: string
          enum: ["Get"]
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: アノテーションを作成したユーザーのアカウントID
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: ラベルID。[アノテーション仕様](#tag/af-annotation-specs)で定義されます。
        body:
          $ref: "#/components/schemas/AnnotationDetailContentOutput"
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV2"
        editor_props:
          $ref: "#/components/schemas/AnnotationPropsForEditor"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    AnnotationDetailV2Create:
      description: "新規にアノテーションを作成する場合にこの型を利用します。"
      type: object
      required:
        - _type
        - annotation_id
        - label_id
        - body
        - additional_data_list
        - editor_props
      properties:
        _type:
          type: string
          enum: ["Create"]
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: ラベルID。[アノテーション仕様](#tag/af-annotation-specs)で定義されます。
        body:
          $ref: "#/components/schemas/AnnotationDetailContentInput"
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV2"
        editor_props:
          $ref: "#/components/schemas/AnnotationPropsForEditor"
    AnnotationDetailV2Import:
      description: "過去にAnnofab内外で作成したアノテーションをそのままインポートする場合にこの型を利用します。"
      type: object
      required:
        - _type
        - annotation_id
        - account_id
        - label_id
        - body
        - additional_data_list
        - editor_props
        - created_datetime
        - updated_datetime
      properties:
        _type:
          type: string
          enum: ["Import"]
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: アノテーションを作成したユーザーのアカウントID
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: ラベルID。[アノテーション仕様](#tag/af-annotation-specs)で定義されます。
        body:
          $ref: "#/components/schemas/AnnotationDetailContentInput"
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV2"
        editor_props:
          $ref: "#/components/schemas/AnnotationPropsForEditor"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    AnnotationDetailV2Update:
      description: "既に存在するアノテーションを更新する場合にこの型を利用します"
      type: object
      required:
        - _type
        - annotation_id
        - label_id
        - additional_data_list
        - editor_props
      properties:
        _type:
          type: string
          enum: ["Update"]
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: ラベルID。[アノテーション仕様](#tag/af-annotation-specs)で定義されます。
        body:
          description: "既存のアノテーションのデータ本体を更新しない場合未指定にします"
          nullable: true
          $ref: "#/components/schemas/AnnotationDetailContentInput"
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV2"
        editor_props:
          $ref: "#/components/schemas/AnnotationPropsForEditor"
    AnnotationDetailContentInput:
      description: |
        - **AnnotationDetailContentInputInner**
          - アノテーションのデータ部をJSON内部に保持する場合、この型を利用します
        - **AnnotationDetailContentInputOuter**
          - アノテーションのデータ部を外部ファイルの形式（画像など）で保持する場合、この型を利用します
      oneOf:
        - $ref: "#/components/schemas/AnnotationDetailContentInputInner"
        - $ref: "#/components/schemas/AnnotationDetailContentInputOuter"
      discriminator:
        propertyName: "_type"
        mapping:
          Inner: "#/components/schemas/AnnotationDetailContentInputInner"
          Outer: "#/components/schemas/AnnotationDetailContentInputOuter"
    AnnotationDetailContentInputInner:
      description: "アノテーションのデータ部をJSON内部に保持します"
      type: object
      required:
        - _type
        - data
      properties:
        _type:
          type: string
          enum: ["Inner"]
        data:
          $ref: "#/components/schemas/FullAnnotationData"
    AnnotationDetailContentInputOuter:
      description: "アノテーションのデータ部を外部ファイルの形式（画像など）で保持します"
      type: object
      required:
        - _type
        - path
      properties:
        _type:
          type: string
          enum: ["Outer"]
        path:
          type: string
          description: "外部ファイルの位置を示す文字列。 [createTempPath](#operation/createTempPath) APIによって取得したpathを指定します。"
    AnnotationDetailContentOutput:
      description: |
        - **AnnotationDetailContentOutputInner**
          - アノテーションのデータ部をJSON内部に保持している場合、通常はこの型の値となります
        - **AnnotationDetailContentOutputInnerUnknown**
          - アノテーションのデータ部をJSON内部に保持しており、且つ、AnnotationDetailV1の形式で保存されていたデータのAnnotationTypeが特定できない場合にこの値となります
          - 典型的な例では、アノテーションの保存後にアノテーション仕様が書き換わっていた場合が該当します
        - **AnnotationDetailContentOutputOuter**
          - アノテーションのデータ部を外部ファイルの形式（画像など）で保持している場合、通常はこの型の値となります
        - **AnnotationDetailContentOutputOuterUnresolved**
          - アノテーションのデータ部を外部ファイルの形式（画像など）で保持しており、且つ、Outerのurl / etagを解決しなかった場合（過去のアノテーションを取得した場合等）にこの値となります
      oneOf:
        - $ref: "#/components/schemas/AnnotationDetailContentOutputInner"
        - $ref: "#/components/schemas/AnnotationDetailContentOutputInnerUnknown"
        - $ref: "#/components/schemas/AnnotationDetailContentOutputOuter"
        - $ref: "#/components/schemas/AnnotationDetailContentOutputOuterUnresolved"
      discriminator:
        propertyName: "_type"
        mapping:
          Inner: "#/components/schemas/AnnotationDetailContentOutputInner"
          InnerUnknown: "#/components/schemas/AnnotationDetailContentOutputInnerUnknown"
          Outer: "#/components/schemas/AnnotationDetailContentOutputOuter"
          OuterUnresolved: "#/components/schemas/AnnotationDetailContentOutputOuterUnresolved"
    AnnotationDetailContentOutputInner:
      description: "アノテーションのデータ部をJSON内部に保持します"
      type: object
      required:
        - _type
        - data
      properties:
        _type:
          type: string
          enum: ["Inner"]
        data:
          $ref: "#/components/schemas/FullAnnotationData"
    AnnotationDetailContentOutputInnerUnknown:
      description: |
        アノテーションのデータ部をJSON内部に保持します。
        AnnotationDetailV1の形式で保存されていたデータのAnnotationTypeが特定できない場合にこの値となります。
        典型的な例では、アノテーションの保存後にアノテーション仕様が書き換わっていた場合が該当します。
      type: object
      required:
        - _type
        - data
      properties:
        _type:
          type: string
          enum: ["InnerUnknown"]
        data:
          $ref: "#/components/schemas/FullAnnotationDataString"
    AnnotationDetailContentOutputOuter:
      description: "アノテーションのデータ部を外部ファイルの形式（画像など）で保持します"
      type: object
      required:
        - _type
        - url
        - etag
      properties:
        _type:
          type: string
          enum: ["Outer"]
        url:
          description: "外部ファイルに保存されたアノテーションの認証済み一時URL"
          type: string
          format: uri
        etag:
          description: "外部ファイルに保存されたアノテーションのETag"
          type: string
    AnnotationDetailContentOutputOuterUnresolved:
      description: |
        アノテーションのデータ部を外部ファイルの形式（画像など）で保持します。
        Outerのurl / etagを解決しなかった場合（過去のアノテーションを取得した場合等）にこの値となります。
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["OuterUnresolved"]
    AnnotationPropsForEditor:
      description: |
        アノテーションエディタ用のアノテーション毎のプロパティです。<br />
        ここに含まれているデータはアノテーション結果に反映されず、エディタが利用するために存在します。

        エディタ用のデータであるため、たとえば`can_delete`や`can_edit_data`が`false`でも、APIによる編集は妨げません。<br />
        ここで定義されているデータを利用して動作を変えるかどうかは、エディタによって異なります。
      type: object
      properties:
        can_delete:
          type: boolean
          description: "アノテーションがエディタ上で削除できるかどうか。 trueの場合削除可能。"
        can_edit_data:
          type: boolean
          description: "アノテーションの本体のデータを編集できるかどうか。 trueの場合編集可能。 2022/09現在、この値を利用しているエディタは存在しません。"
        can_edit_additional:
          type: boolean
          description: "アノテーションの付加情報を編集できるかどうか。  trueの場合編集可能。 2022/09現在、この値を利用しているエディタは存在しません。"
        description:
          type: string
          description: "アノテーションについての人間可読な説明。 2022/09現在、この値を利用しているエディタは存在しません。"
        tags:
          type: array
          items:
            type: string
          description: "アノテーションに付与されている機械可読・人間可読なタグの列。  2022/09現在、この値を利用しているエディタは存在しません"
        etc:
          description: "上記以外の任意のJson構造"

    AdditionalDataListV1:
      # itemsで参照しているスキーマのdescriptionは、redocに表示されないので、ここに詳細を書く
      description: |
        属性情報。

        アノテーション属性の種類（`additional_data_definition`の`type`）によって、属性値を格納するプロパティは変わります。

        | 属性の種類 | `additional_data_definition`の`type` | 属性値を格納するプロパティ                    |
        |------------|-------------------------|----------------------|
        | ON/OFF | flag       | flag                                          |
        | 整数 | integer    | integer                                       |
        | 自由記述（1行）| text       | comment                                       |
        | 自由記述（複数行）| comment    | comment                                       |
        | トラッキングID  | tracking | comment                                       |
        | アノテーションリンク    | link   | comment                                       |
        | 排他選択（ラジオボタン）  |choice   | choice                                        |
        | 排他選択（ドロップダウン） | select    | choice                                        |

      type: array
      items:
        $ref: "#/components/schemas/AdditionalDataV1"
    AdditionalDataListV2:
      type: array
      items:
        $ref: "#/components/schemas/AdditionalDataV2"
    AdditionalDataV1:
      type: object
      required:
        - additional_data_definition_id
      properties:
        additional_data_definition_id:
          $ref: "#/components/schemas/AdditionalDataDefinitionId"
          description: 属性ID。[アノテーション仕様](#tag/af-annotation-specs)で定義されます。
        flag:
          type: boolean
          description: |
            `additional_data_definition`の`type`が`flag`のときの属性値。
        integer:
          type: integer
          description: |
            `additional_data_definition`の`type`が`integer`のときの属性値。
        comment:
          type: string
          description: |
            `additional_data_definition`の`type`が`text`,`comment`,`link` または `tracking`のときの属性値。
        choice:
          $ref: "#/components/schemas/ChoiceId"
          description: |
            `additional_data_definition`の`type`が`choice` または `select `のときの属性値（選択肢ID）。
    AdditionalDataV2:
      type: object
      required:
        - definition_id
      properties:
        definition_id:
          $ref: "#/components/schemas/AdditionalDataDefinitionId"
          description: 属性ID
        value:
          $ref: "#/components/schemas/AdditionalDataValue"
          nullable: true
          description: "属性値。 属性が未入力の場合nullになります"
    FullAnnotationAdditionalDataValue:
      description: |
        属性値
      oneOf:
        - $ref: "#/components/schemas/FullAnnotationAdditionalDataValueFlag"
        - $ref: "#/components/schemas/FullAnnotationAdditionalDataValueInteger"
        - $ref: "#/components/schemas/FullAnnotationAdditionalDataValueComment"
        - $ref: "#/components/schemas/FullAnnotationAdditionalDataValueChoice"
        - $ref: "#/components/schemas/FullAnnotationAdditionalDataValueTracking"
        - $ref: "#/components/schemas/FullAnnotationAdditionalDataValueLink"
      discriminator:
        propertyName: "_type"
        mapping:
          Flag: "#/components/schemas/FullAnnotationAdditionalDataValueFlag"
          Integer: "#/components/schemas/FullAnnotationAdditionalDataValueInteger"
          Comment: "#/components/schemas/FullAnnotationAdditionalDataValueComment"
          Choice: "#/components/schemas/FullAnnotationAdditionalDataValueChoice"
          Tracking: "#/components/schemas/FullAnnotationAdditionalDataValueTracking"
          Link: "#/components/schemas/FullAnnotationAdditionalDataValueLink"
    FullAnnotationAdditionalDataValueFlag:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          description: |
            `Flag`
          example: "Flag"
        value:
          type: boolean
          description: フラグのON(true)またはOFF(false)
    FullAnnotationAdditionalDataValueInteger:
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          description: |
            `Integer`
          example: "Integer"
        value:
          type: integer
          description: 整数値
    FullAnnotationAdditionalDataValueComment:
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          description: |
            `Comment`
          example: "Comment"
        value:
          type: string
          description: 自由記述
    FullAnnotationAdditionalDataValueChoice:
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          description: |
            `Choice`
          example: "Choice"
        value:
          $ref: "#/components/schemas/FullAnnotationAdditionalDataChoiceValue"
    FullAnnotationAdditionalDataChoiceValue:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: "#/components/schemas/ChoiceId"
          description: 選択された選択肢のID
        name:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: 選択された選択肢の表示名
    FullAnnotationAdditionalDataValueTracking:
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          description: Tracking
          example: "Tracking"
        value:
          type: string
          description: トラッキングID
    FullAnnotationAdditionalDataValueLink:
      type: object
      required:
        - _type
      properties:
        _type:
          type: string
          description: Link
          example: "Link"
        value:
          type: string
          description: リンク先アノテーションID
    AdditionalDataValue:
      description: |
        属性値
      oneOf:
        - $ref: "#/components/schemas/AdditionalDataValueFlag"
        - $ref: "#/components/schemas/AdditionalDataValueInteger"
        - $ref: "#/components/schemas/AdditionalDataValueComment"
        - $ref: "#/components/schemas/AdditionalDataValueText"
        - $ref: "#/components/schemas/AdditionalDataValueChoice"
        - $ref: "#/components/schemas/AdditionalDataValueSelect"
        - $ref: "#/components/schemas/AdditionalDataValueTracking"
        - $ref: "#/components/schemas/AdditionalDataValueLink"
      discriminator:
        propertyName: "_type"
        mapping:
          Flag: "#/components/schemas/AdditionalDataValueFlag"
          Integer: "#/components/schemas/AdditionalDataValueInteger"
          Comment: "#/components/schemas/AdditionalDataValueComment"
          Text: "#/components/schemas/AdditionalDataValueText"
          Choice: "#/components/schemas/AdditionalDataValueChoice"
          Select: "#/components/schemas/AdditionalDataValueSelect"
          Tracking: "#/components/schemas/AdditionalDataValueTracking"
          Link: "#/components/schemas/AdditionalDataValueLink"
    AdditionalDataValueFlag:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["Flag"]
        value:
          type: boolean
          description: "ON/OFF属性の属性値。 ONの時trueとなります"
    AdditionalDataValueInteger:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["Integer"]
        value:
          type: integer
          description: "整数属性の属性値"
    AdditionalDataValueComment:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["Comment"]
        value:
          type: string
          description: "自由記述（1行）の属性値"
    AdditionalDataValueText:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["Text"]
        value:
          type: string
          description: "自由記述（複数行）の属性値"
    AdditionalDataValueChoice:
      type: object
      required:
        - _type
        - choice_id
      properties:
        _type:
          type: string
          enum: ["Choice"]
        choice_id:
          $ref: "#/components/schemas/ChoiceId"
          description: "排他選択（ラジオボタン）の属性値。 選択している選択肢のIdが格納されます。"
    AdditionalDataValueSelect:
      type: object
      required:
        - _type
        - choice_id
      properties:
        _type:
          type: string
          enum: ["Select"]
        choice_id:
          $ref: "#/components/schemas/ChoiceId"
          description: "排他選択（ドロップダウン）の属性値。 選択している選択肢のIdが格納されます。"
    AdditionalDataValueTracking:
      type: object
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["Tracking"]
        value:
          type: string
          description: "トラッキングID属性の属性値"
    AdditionalDataValueLink:
      type: object
      required:
        - _type
        - annotation_id
      properties:
        _type:
          type: string
          enum: ["Link"]
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
          description: "アノテーションリンク属性の属性値。 リンク先アノテーションのIDが格納されます。"
    # これを定義して使いたいが、api-js-clientがコンパイルできない（実装も適切でない）コードを生成してしまうのでコメントアウトしている
    #    SingleAnnotationList:
    #      oneOf:
    #        - $ref: "#/components/schemas/SingleAnnotationV1List"
    #        - $ref: "#/components/schemas/SingleAnnotationV2List"
    SingleAnnotationV1List:
      description: SingleAnnotationV1の配列です
      type: array
      items:
        $ref: "#/components/schemas/SingleAnnotationV1"
    SingleAnnotationV2List:
      description: SingleAnnotationV2の配列です
      type: array
      items:
        $ref: "#/components/schemas/SingleAnnotationV2"
    SingleAnnotation:
      oneOf:
        - $ref: "#/components/schemas/SingleAnnotationV1"
        - $ref: "#/components/schemas/SingleAnnotationV2"
    SingleAnnotationV1:
      type: object
      required:
        - project_id
        - task_id
        - input_data_id
        - detail
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        detail:
          $ref: "#/components/schemas/SingleAnnotationDetailV1"
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    SingleAnnotationV2:
      type: object
      required:
        - project_id
        - task_id
        - input_data_id
        - detail
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        detail:
          $ref: "#/components/schemas/SingleAnnotationDetailV2"
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    SimpleAnnotation:
      type: object
      required:
        - annotation_format_version
        - project_id
        - task_id
        - task_phase
        - task_phase_stage
        - task_status
        - input_data_id
        - input_data_name
        - details
      properties:
        annotation_format_version:
          $ref: "#/components/schemas/AnnotationFormatVersion"
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        task_phase:
          $ref: "#/components/schemas/TaskPhase"
        task_phase_stage:
          $ref: "#/components/schemas/TaskPhaseStage"
        task_status:
          $ref: "#/components/schemas/TaskStatus"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        input_data_name:
          type: string
          description: 入力データ名
        details:
          type: array
          description: 矩形、ポリゴン、全体アノテーションなど個々のアノテーションの配列。
          items:
            $ref: "#/components/schemas/SimpleAnnotationDetail"
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時。アノテーションが一つもない場合（教師付作業が未着手のときなど）は、未指定。
    BatchAnnotationV1:
      type: object
      required:
        - project_id
        - task_id
        - input_data_id
        - annotation_id
        - label_id
        - additional_data_list
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: 変更後のラベルID
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV1"
        updated_datetime:
          type: string
          format: date-time
          description: |
            アノテーション取得時の更新日時。更新時の楽観ロックに利用されます。
            AnnotationDetailのものではなく、それを格納するAnnotationV2Outputなどが保持する更新時刻であることに注意してください。
    BatchAnnotationV2:
      type: object
      required:
        - project_id
        - task_id
        - input_data_id
        - annotation_id
        - label_id
        - additional_data_list
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: 変更後のラベルID
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV2"
        updated_datetime:
          type: string
          format: date-time
          description: |
            アノテーション取得時の更新日時。更新時の楽観ロックに利用されます。
            AnnotationDetailのものではなく、それを格納するAnnotationV2Outputなどが保持する更新時刻であることに注意してください。
    BatchAnnotationRequestItemPutV1:
      type: object
      description: アノテーション更新
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/BatchAnnotationV1"
        _type:
          type: string
          enum: ["Put"]
          description: |
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Put"
    BatchAnnotationRequestItemPutV2:
      type: object
      description: アノテーション更新
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/BatchAnnotationV2"
        _type:
          type: string
          enum: ["PutV2"]
          description: |
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "PutV2"
    BatchAnnotationRequestItemDelete:
      type: object
      description: アノテーション削除
      required:
        - project_id
        - task_id
        - input_data_id
        - annotation_id
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
        _type:
          type: string
          enum: ["Delete"]
          description: |
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Delete"
    SingleAnnotationDetailV1:
      description: |
        アノテーション情報
      type: object
      required:
        - annotation_id
        - account_id
        - label_id
        - data_holding_type
        - additional_data_list
        - created_datetime
        - updated_datetime
      properties:
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        account_id:
          $ref: "#/components/schemas/AccountId"
        label_id:
          $ref: "#/components/schemas/LabelId"
        data_holding_type:
          $ref: "#/components/schemas/AnnotationDataHoldingType"
        data:
          $ref: "#/components/schemas/FullAnnotationData"
        etag:
          type: string
          description: data_holding_typeがouterの場合のみ存在し、データのETagが格納される
        url:
          type: string
          format: uri
          description: data_holding_typeがouterの場合のみ存在し、データへの一時URLが格納される
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV1"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    SingleAnnotationDetailV2:
      description: |
        アノテーション情報
      type: object
      required:
        - annotation_id
        - account_id
        - label_id
        - body
        - additional_data_list
        - created_datetime
        - updated_datetime
      properties:
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        account_id:
          $ref: "#/components/schemas/AccountId"
        label_id:
          $ref: "#/components/schemas/LabelId"
        body:
          $ref: "#/components/schemas/AnnotationDetailContentOutput"
        additional_data_list:
          $ref: "#/components/schemas/AdditionalDataListV2"
        created_datetime:
          type: string
          format: date-time
          description: 作成日時
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    SimpleAnnotationDetail:
      type: object
      required:
        - label
        - annotation_id
        - data
        - attributes
      properties:
        label:
          type: string
          example: "pedestrian"
          description: |
            アノテーション仕様で設定したラベル名 (英語) です。
        annotation_id:
          type: string
          example: "acb5359e-be2e-402b-b59a-b5fdbb378ad9"
          description: |
            個々のアノテーションにつけられたIDです。
        data:
          $ref: "#/components/schemas/FullAnnotationData"
        attributes:
          type: object
          description: |
            キーと値が以下のようになっている辞書構造です。

            * キー: アノテーション仕様で設定した属性名 (英語)
            * 値: 各属性の値
              * 選択肢を定義している場合、その選択肢の表示名 (英語)
              * それ以外は属性値そのまま (文字列、数値、論理値)
          example:
            maker: "AAA Motors"
            size: 12345
            is_foo_bar_buz: true
    FullAnnotation:
      type: object
      required:
        - project_id
        - task_id
        - task_phase
        - task_phase_stage
        - task_status
        - input_data_id
        - input_data_name
        - details
        - annotation_format_version
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        task_phase:
          $ref: "#/components/schemas/TaskPhase"
        task_phase_stage:
          $ref: "#/components/schemas/TaskPhaseStage"
        task_status:
          $ref: "#/components/schemas/TaskStatus"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        input_data_name:
          type: string
          description: 入力データ名
        details:
          description: 矩形、ポリゴン、全体アノテーションなど個々のアノテーションの配列
          type: array
          items:
            $ref: "#/components/schemas/FullAnnotationDetail"
        updated_datetime:
          type: string
          format: date-time
          description: 更新日時。アノテーションが一つもない場合（教師付作業が未着手のときなど）は、未指定。
        annotation_format_version:
          $ref: "#/components/schemas/AnnotationFormatVersion"
    FullAnnotationDetail:
      type: object
      required:
        - annotation_id
        - user_id
        - label_id
        - label_name
        - annotation_type
        - data_holding_type
        - data
        - additional_data_list
      properties:
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
        user_id:
          $ref: "#/components/schemas/UserId"
        label_id:
          $ref: "#/components/schemas/LabelId"
        label_name:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: ラベル名
        annotation_type:
          $ref: "#/components/schemas/AnnotationType"
        data_holding_type:
          $ref: "#/components/schemas/AnnotationDataHoldingType"
        data:
          $ref: "#/components/schemas/FullAnnotationData"
        additional_data_list:
          $ref: "#/components/schemas/FullAnnotationAdditionalDataList"
    AnnotationDataV1:
      description: |
        アノテーションの座標値や区間などのデータ。

        APIのレスポンスから参照される場合は、`FullAnnotationDataString`形式です。
        [putAnnotation](#operation/putAnnotation) APIのリクエストボディは、`FullAnnotationDataString`形式または`FullAnnotationData`形式に対応しています。
      oneOf:
        - $ref: "#/components/schemas/FullAnnotationDataString"
        - $ref: "#/components/schemas/FullAnnotationData"
    FullAnnotationDataString:
      type: string
      example: "1,1,5,5"
      description: |
        アノテーション座標値や区間などの文字列表現です。
        アノテーション種類（`annotation_type`）とデータ格納形式（`data_holding_type`）に応じて、以下のとおり表現が変わります。

        <table>
        <tr><th>annotation_type</th><th>data_holding_type</th><th>文字列表現</th></tr>
        <tr><td>bounding_box</td><td>inner</td><td><code>"左上x,左上y,右下x,右下y"</code></td></tr>
        <tr><td>point</td><td>inner</td><td><code>"x1,y1"</code></td></tr>
        <tr><td>polygon / polyline</td><td>inner</td><td><code>"x1,y1,x2,y2, ... "</code></td></tr>
        <tr><td>range </td><td>inner</td><td><code>"開始時間(ミリ秒),終了時間(ミリ秒) "</code></td></tr>
        <tr><td>classification</td><td>inner</td><td><code>null</code></td></tr>
        <tr><td>segmentation</td><td>outer</td><td><code>null</code></td></tr>
        <tr><td>segmentation_v2</td><td>outer</td><td><code>null</code></td></tr>
        </table>
    FullAnnotationData:
      oneOf:
        - $ref: "#/components/schemas/FullAnnotationDataClassification"
        - $ref: "#/components/schemas/FullAnnotationDataSegmentation"
        - $ref: "#/components/schemas/FullAnnotationDataSegmentationV2"
        - $ref: "#/components/schemas/FullAnnotationDataBoundingBox"
        - $ref: "#/components/schemas/FullAnnotationDataPoints"
        - $ref: "#/components/schemas/FullAnnotationDataSinglePoint"
        - $ref: "#/components/schemas/FullAnnotationDataRange"
        - $ref: "#/components/schemas/FullAnnotationDataUnknown"
      discriminator:
        propertyName: "_type"
        mapping:
          Classification: "#/components/schemas/FullAnnotationDataClassification"
          Segmentation: "#/components/schemas/FullAnnotationDataSegmentation"
          SegmentationV2: "#/components/schemas/FullAnnotationDataSegmentationV2"
          BoundingBox: "#/components/schemas/FullAnnotationDataBoundingBox"
          Points: "#/components/schemas/FullAnnotationDataPoints"
          SinglePoint: "#/components/schemas/FullAnnotationDataSinglePoint"
          Range: "#/components/schemas/FullAnnotationDataRange"
          Unknown: "#/components/schemas/FullAnnotationDataUnknown"
      description: |
        アノテーションのデータが格納されます。
          * `FullAnnotationDataClassification`: 入力データ全体アノテーション
          * `FullAnnotationDataSegmentation`: 塗りつぶしアノテーション
          * `FullAnnotationDataSegmentationV2`: 塗りつぶしv2アノテーション
          * `FullAnnotationDataBoundingBox`: 矩形アノテーション
          * `FullAnnotationDataPoints`: ポリゴンまたはポリラインアノテーション
          * `FullAnnotationDataSinglePoint`: 点アノテーション
          * `FullAnnotationDataRange`: 動画区間アノテーション
          * `FullAnnotationDataUnknown`: カスタムアノテーション
    FullAnnotationDataClassification:
      type: object
      nullable: true
      required:
        - _type
      properties:
        _type:
          type: string
          description: |
            `Classification`
          example: "Classification"
    FullAnnotationDataSegmentation:
      type: object
      nullable: true
      required:
        - data_uri
        - _type
      properties:
        data_uri:
          type: string
          description: |
            塗りつぶし画像のパス。
            塗りつぶし画像のファイル形式はPNGです。塗りつぶされた部分の色は`rgba(255, 255, 255, 1)`、塗りつぶされていない部分の色は`rgba(0, 0, 0, 0)`です。
        _type:
          type: string
          description: |
            `Segmentation`
          example: "Segmentation"
    FullAnnotationDataSegmentationV2:
      type: object
      nullable: true
      required:
        - data_uri
        - _type
      properties:
        data_uri:
          type: string
          description: |
            塗りつぶし画像のパス。
            塗りつぶし画像のファイル形式はPNGです。塗りつぶされた部分の色は`rgba(255, 255, 255, 1)`、塗りつぶされていない部分の色は`rgba(0, 0, 0, 0)`です。
        _type:
          type: string
          description: |
            `SegmentationV2`
          example: "SegmentationV2"
    FullAnnotationDataBoundingBox:
      type: object
      required:
        - left_top
        - right_bottom
        - _type
      properties:
        left_top:
          $ref: "#/components/schemas/Point"
          description: 左上の頂点の座標値
        right_bottom:
          $ref: "#/components/schemas/Point"
          description: 右下の頂点の座標値
        _type:
          type: string
          description: |
            `BoundingBox`
          example: "BoundingBox"
    FullAnnotationDataPoints:
      type: object
      required:
        - points
        - _type
      properties:
        points:
          description: 頂点の座標値
          type: array
          items:
            $ref: "#/components/schemas/Point"
        _type:
          type: string
          description: |
            `Points`
          example: "Points"
    FullAnnotationDataSinglePoint:
      type: object
      required:
        - point
        - _type
      properties:
        point:
          $ref: "#/components/schemas/Point"
        _type:
          type: string
          description: |
            `SinglePoint`
          example: "SinglePoint"
    FullAnnotationDataRange:
      type: object
      required:
        - begin
        - end
        - _type
      properties:
        begin:
          type: number
          description: 開始時間（ミリ秒）
        end:
          type: number
          description: 終了時間（ミリ秒）
        _type:
          type: string
          description: |
            `Range`
          example: "Range"
    FullAnnotationDataUnknown:
      type: object
      required:
        - data
        - _type
      properties:
        data:
          type: string
          description: アノテーションデータを文字列で表現した値
        _type:
          type: string
          description: |
            `Unknown`
          example: "Unknown"
    Point:
      description: 点の座標値
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: integer
          description: X座標の値[ピクセル]
        y:
          type: integer
          description: Y座標の値[ピクセル]
    FullAnnotationAdditionalDataList:
      # itemsで参照しているスキーマのdescriptionは、redocに表示されないので、Listのスキーマを作りました。
      description: |
        属性情報。
      type: array
      items:
        $ref: "#/components/schemas/FullAnnotationAdditionalData"
    FullAnnotationAdditionalData:
      description: |
        属性情報
      type: object
      required:
        - additional_data_definition_id
        - additional_data_definition_name
        - type
        - value
      properties:
        additional_data_definition_id:
          $ref: "#/components/schemas/AdditionalDataDefinitionId"
          description: 属性ID
        additional_data_definition_name:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: 属性名
        type:
          $ref: "#/components/schemas/AdditionalDataDefinitionType"
        value:
          $ref: "#/components/schemas/FullAnnotationAdditionalDataValue"
    BatchInspectionRequestItemPut:
      type: object
      description: 検査コメント更新
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/Inspection"
        _type:
          type: string
          description: |
            `Put`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Put"
    BatchInspectionRequestItemDelete:
      type: object
      description: 検査コメント削除
      required:
        - project_id
        - task_id
        - input_data_id
        - inspection_id
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        inspection_id:
          $ref: "#/components/schemas/InspectionId"
        _type:
          type: string
          description: |
            `Delete`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Delete"
    Inspection:
      type: object
      description: 検査コメント
      required:
        - project_id
        - task_id
        - input_data_id
        - inspection_id
        - phase
        - phase_stage
        - commenter_account_id
        - data
        - status
        - comment
        - created_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        inspection_id:
          $ref: "#/components/schemas/InspectionId"
        phase:
          $ref: "#/components/schemas/TaskPhase"
          description: 検査コメントを付与したときのタスクフェーズ。[詳細はこちら](#tag/x-data-types/TaskPhase)
        phase_stage:
          type: integer
          description: 検査コメントを付与したときのフェーズのステージ
          default: 1
          minimum: 1
        commenter_account_id:
          $ref: "#/components/schemas/AccountId"
          description: 検査コメントを付与したユーザーのアカウントID
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
          description: |
            ##### スレッドの先頭のコメントである（`parent_inspection_id` に値がない）場合

            検査コメントに紐づくアノテーションのID。アノテーションに紐付けられていない場合（アノテーションの付け忘れに対する指定など）は未指定。
            [詳細はこちら](#tag/x-data-types/AnnotationId)。

            ##### 返信コメントである（`parent_inspection_id` に値がある）場合

            現在は使用しておらず、レスポンスに含まれる値は不定です。APIのレスポンスにこの値を含む場合でも、「スレッドの先頭のコメント」の値を利用してください。

            リクエストボディに指定する場合は、スレッドの先頭のコメントと同じ値を指定します。
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: |
            ##### スレッドの先頭のコメントである（`parent_inspection_id` に値がない）場合

            `annotation_id` に対応するラベルのID。 `annotation_id` を指定しない場合は未指定。

            ##### 返信コメントである（`parent_inspection_id` に値がある）場合

            現在は使用しておらず、レスポンスに含まれる値は不定です。APIのレスポンスにこの値を含む場合でも、「スレッドの先頭のコメント」の値を利用してください。

            リクエストボディに指定する場合は、スレッドの先頭のコメントと同じ値を指定します。
        data:
          $ref: "#/components/schemas/InspectionData"
        parent_inspection_id:
          $ref: "#/components/schemas/InspectionId"
          description: |
            返信先の検査コメントの検査ID。返信先の検査コメントは「スレッド内の直前のコメント」ではなく「スレッドの先頭のコメント」を指します。
        phrases:
          type: array
          description: 参照している定型指摘のID。
          items:
            $ref: "#/components/schemas/PhraseId"
        comment:
          description: |
            検査コメントの中身
          type: string
          example: 枠がズレています
        status:
          $ref: "#/components/schemas/InspectionStatus"
        created_datetime:
          type: string
          format: date-time
        updated_datetime:
          type: string
          format: date-time
    InspectionData:
      description: |
        ##### スレッドの先頭のコメントである（`parent_inspection_id` に値がない）場合

        検査コメントの座標値や区間。

        * `InspectionDataPoint`：点で検査コメントを付与したときの座標値
        * `InspectionDataPolyline`：ポリラインで検査コメントを付与したときの座標値
        * `InspectionDataTime`：検査コメントを付与した区間（動画プロジェクトの場合）
        * `InspectionDataCustom`：カスタム

        ##### 返信コメントである（`parent_inspection_id` に値がある）場合

        現在は使用しておらず、レスポンスに含まれる値は不定です。APIのレスポンスにこの値を含む場合でも、「スレッドの先頭のコメント」の値を利用してください。

        リクエストボディに指定する場合は、スレッドの先頭のコメントと同じ値を指定します。
      oneOf:
        - $ref: "#/components/schemas/InspectionDataPoint"
        - $ref: "#/components/schemas/InspectionDataPolyline"
        - $ref: "#/components/schemas/InspectionDataTime"
        - $ref: "#/components/schemas/InspectionDataCustom"
      discriminator:
        propertyName: "_type"
        mapping:
          Point: "#/components/schemas/InspectionDataPoint"
          Polyline: "#/components/schemas/InspectionDataPolyline"
          Time: "#/components/schemas/InspectionDataTime"
          Custom: "#/components/schemas/InspectionDataCustom"
    InspectionDataPoint:
      type: object
      description: |
        問題のある部分を示す座標
      required:
        - x
        - y
      properties:
        x:
          type: integer
        y:
          type: integer
        _type:
          type: string
          description: |
            `Point`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Point"
    InspectionDataPolyline:
      type: object
      description: |
        問題のある部分を示すポリライン
      required:
        - coordinates
      properties:
        coordinates:
          type: array
          description: |
            ポリラインを構成する頂点の配列
          items:
            type: object
            properties:
              x:
                type: integer
              y:
                type: integer
        _type:
          type: string
          description: |
            `Polyline`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Polyline"
    InspectionDataTime:
      type: object
      description: |
        問題のある時間帯を表す区間
      required:
        - start
        - end
      properties:
        start:
          type: number
          description: 開始時間（ミリ秒）。小数点以下はミリ秒以下を表します。
        end:
          type: number
          description: 終了時間（ミリ秒）。小数点以下はミリ秒以下を表します。
        _type:
          type: string
          description: |
            `Time`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Time"
    InspectionDataCustom:
      type: object
      properties:
        data:
          type: string
        _type:
          type: string
          description: |
            `Custom`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Custom"
    Resolution:
      type: object
      required:
        - width
        - height
      properties:
        width:
          type: integer
          description: 画像の幅[ピクセル]
        height:
          type: integer
          description: 画像の高さ[ピクセル]
    InspectionStatus:
      type: string
      enum:
        - annotator_action_required
        - no_correction_required
        - error_corrected
      description: |
        ##### スレッドの先頭のコメントである（`parent_inspection_id` に値がない）場合

        * `annotator_action_required` - 未処置。`annotation`フェーズ担当者が何らかの回答をする必要あり
        * `no_correction_required` - 処置不要。`annotation`フェーズ担当者が、検査コメントによる修正は不要、と回答した
        * `error_corrected` - 修正済み。`annotation`フェーズ担当者が、検査コメントの指示どおり修正した

        ##### 返信コメントである（`parent_inspection_id` に値がある）場合

        現在は使用しておらず、レスポンスに含まれる値は不定です。APIのレスポンスにこの値を含む場合でも、「スレッドの先頭のコメント」の値を利用してください。

        リクエストボディに指定する場合は、スレッドの先頭のコメントと同じ値を指定します。
    Comment:
      type: object
      description: コメント
      required:
        - project_id
        - task_id
        - input_data_id
        - comment_id
        - phase
        - phase_stage
        - account_id
        - comment_type
        - comment
        - comment_node
        - datetime_for_sorting
        - created_datetime
        - updated_datetime
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        comment_id:
          $ref: "#/components/schemas/CommentId"
        phase:
          $ref: "#/components/schemas/TaskPhase"
          description: コメントを作成したときのタスクフェーズ。[詳細はこちら](#tag/x-data-types/TaskPhase)
        phase_stage:
          type: integer
          description: コメントを作成したときのフェーズのステージ。
          default: 1
          minimum: 1
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: コメントを作成したユーザーのアカウントID。
        comment_type:
          $ref: "#/components/schemas/CommentType"
        phrases:
          type: array
          description: |
            `comment_type` の値によって扱いが異なります。

            * `onhold` の場合
              * 使用しません（空配列）
            * `inspection` の場合
              * 参照している定型指摘のIDリスト
          items:
            $ref: "#/components/schemas/PhraseId"
        comment:
          type: string
          description: |
            コメント本文。
          example: 確認中のため対応保留します
        comment_node:
          $ref: "#/components/schemas/CommentNode"
        datetime_for_sorting:
          type: string
          format: date-time
          description: |
            コメントのソート順を決める日時。

            Annofab標準エディタでは、コメントはここで指定した日時にしたがってスレッドごとに昇順で表示されます。
        created_datetime:
          type: string
          format: date-time
          description: コメントの作成日時。
        updated_datetime:
          type: string
          format: date-time
          description: コメントの更新日時。
    CommentNode:
      description: |
        コメントのノード固有のデータ。

        * `RootComment` - スレッドの先頭のコメント（ルートコメント）。
        * `ReplyComment` - あるコメントへの返信コメント。
      oneOf:
        - $ref: "#/components/schemas/RootComment"
        - $ref: "#/components/schemas/ReplyComment"
      discriminator:
        propertyName: "_type"
        mapping:
          Root: "#/components/schemas/RootComment"
          Reply: "#/components/schemas/ReplyComment"
    RootComment:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/InspectionData"
          description: |
            `comment_type` の値によって扱いが異なります。

            * `onhold` の場合
              * 使用しません（値なし）
            * `inspection` の場合
              * 検査コメントの座標値や区間。
                * `InspectionDataPoint`：点で検査コメントを付与したときの座標値
                * `InspectionDataPolyline`：ポリラインで検査コメントを付与したときの座標値
                * `InspectionDataTime`：検査コメントを付与した区間（動画プロジェクトの場合）
                * `InspectionDataCustom`：カスタム
        annotation_id:
          $ref: "#/components/schemas/AnnotationId"
          description: |
              コメントに紐づくアノテーションのID。アノテーションに紐付けられていない場合（アノテーションの付け忘れに対する指摘など）は未指定。[詳細はこちら](#tag/x-data-types/AnnotationId)。
        label_id:
          $ref: "#/components/schemas/LabelId"
          description: |
              `annotation_id` に対応するラベルのID。 `annotation_id` を指定しない場合は未指定。
        status:
          $ref: "#/components/schemas/CommentStatus"
        _type:
          type: string
          description: |
            `Root`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Root"
    ReplyComment:
      type: object
      required:
        - root_comment_id
      properties:
        root_comment_id:
          $ref: "#/components/schemas/CommentId"
          description: |
            返信先コメントのコメントID。返信先のコメントは「スレッド内の直前のコメント」ではなく「スレッドの先頭のコメント」を指します。
        _type:
          type: string
          description: |
            `Reply`
            [詳しくはこちら](#section/API-Convention/API-_type)
          example: "Reply"
    CommentStatus:
      type: string
      enum:
        - open
        - resolved
        - closed
      description: |
        `comment_type` の値によってコメントのステータスに格納される値とステータスの意味が変わります。

        * `onhold` の場合
          * `open`（未対応）、`resolved`（対応完了）を指定可能
        * `inspection` の場合
          * `open`（未対応）、`resolved`（対応完了）、`closed`（対応不要）を指定可能
    CommentType:
      type: string
      enum:
        - onhold
        - inspection
      description: |
        コメントの種別。

        * `onhold` - 保留コメント
        * `inspection` - 検査コメント

    BatchCommentRequestItem:
      oneOf:
        - $ref: "#/components/schemas/BatchCommentRequestItemPut"
        - $ref: "#/components/schemas/BatchCommentRequestItemDelete"
      discriminator:
        propertyName: "_type"
        mapping:
          Put: "#/components/schemas/BatchCommentRequestItemPut"
          Delete: "#/components/schemas/BatchCommentRequestItemDelete"
    BatchCommentRequestItemPut:
      type: object
      description: コメント更新
      required:
        - comment_id
        - phase
        - phase_stage
        - account_id
        - comment_type
        - comment
        - comment_node
        - _type
      properties:
        comment_id:
          $ref: "#/components/schemas/CommentId"
        phase:
          $ref: "#/components/schemas/TaskPhase"
          description: コメントを作成したときのタスクフェーズ。[詳細はこちら](#tag/x-data-types/TaskPhase)
        phase_stage:
          type: integer
          description: コメントを作成したときのフェーズのステージ。
          default: 1
          minimum: 1
        account_id:
          $ref: "#/components/schemas/AccountId"
          description:
            コメントを作成したユーザーのアカウントID。
        comment_type:
          type: string
          enum:
            - onhold
            - inspection
          description: |
            コメントの種別。次の値が指定できます。

            * `onhold` - 保留コメントとして扱われます。
            * `inspection` - 検査コメントとして扱われます。

            返信コメント作成時は返信先コメントの `comment_type` と同じ値を指定してください。

            コメント更新時は更新前コメントと同じ値を指定してください（変更はできません）。
        phrases:
          type: array
          description: |
            `comment_type` の値によって指定可能な値が異なります。

            * `onhold` の場合
              * 使用しません（空配列 or 指定なし）
          items:
            $ref: "#/components/schemas/PhraseId"
        comment:
          type: string
          description: |
            コメント本文。
          example: 確認中のため対応保留します
        comment_node:
          $ref: "#/components/schemas/CommentNode"
          description: |
            コメントのノード固有のデータ。

            コメント更新時、 `comment_node` 内の値を変更することは条件次第では可能ですが、 `comment_node` そのものを異なる構造に差し替えて更新することはできません。
        datetime_for_sorting:
          type: string
          format: date-time
          description: |
            コメントのソート順を決める日時。コメント作成時のみ指定可能です。

            Annofab標準エディタでは、コメントはここで指定した日時にしたがってスレッドごとに昇順で表示されます。

            コメント作成時に未指定とした場合は、作成操作オブジェクトの順序に応じてコメント作成日時からずれた時刻が自動設定されます（ソート順を一意とするため）。

            なお、この値は後から更新することはできません（値を指定しても無視されます）。
        _type:
          type: string
          enum: ["Put"]
          description: |
            `Put`

            [詳しくはこちら](#section/API-Convention/API-_type)
    BatchCommentRequestItemDelete:
      type: object
      description: コメント削除
      required:
        - comment_id
        - _type
      properties:
        comment_id:
          $ref: "#/components/schemas/CommentId"
        _type:
          type: string
          enum: ["Delete"]
          description: |
            `Delete`

            [詳しくはこちら](#section/API-Convention/API-_type)
    AggregationResult:
      oneOf:
        - $ref: "#/components/schemas/CountResult"
      discriminator:
        propertyName: "_type"
        mapping:
          CountResult: "#/components/schemas/CountResult"
    CountResult:
      type: object
      required:
        - _type
        - name
        - field
        - items
      properties:
        _type:
          type: string
          example: "CountResult"
          description: |
            `CountResult`
            [詳しくはこちら](#section/API-Convention/API-_type)
        name:
          type: string
          description: |
            複数の集約を区別するための名前です。

            `(フィールド名)_(集約内容)` のように命名されます。例えば `account_id` フィールドを `count` する場合、`account_id_count` となります。
        field:
          type: string
          description: |
            集約に使われたリソースのフィールド名です。

            リソースの属性のさらに属性を参照するときは、`foo.bar.buz` のようにドット区切りになります。
        doc_count:
          type: integer
          description: |
            集約の件数です。
        items:
          type: array
          items:
            $ref: "#/components/schemas/Count"
          description: |
            集約結果の値です。
    Count:
      type: object
      properties:
        key:
          type: string
          description: |
            集約対象の `field` の値です。
        count:
          type: integer
          description: |
            集約対象 `field` の値が `key` の値と等しかったリソースの件数です。
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/AggregationResult"
          description: |
            この集約のサブ集約です。サブ集約がないときは空の配列になります。
    Instruction:
      type: object
      required:
        - html
        - last_updated_datetime
      properties:
        html:
          type: string
          description: 作業ガイドのHTML
          example: "<p>test</p>"
        last_updated_datetime:
          type: string
          format: date-time
          description: 更新日時
    PutInstructionRequest:
      type: object
      required:
        - html
      properties:
        html:
          type: string
          description: 作業ガイドのHTML
          example: "<p>test</p>"
        last_updated_datetime:
          $ref: "#/components/schemas/LastUpdatedDatetime"
    InstructionHistory:
      type: object
      required:
        - history_id
        - account_id
        - updated_datetime
      properties:
        history_id:
          type: string
          description: 作業ガイドの履歴ID
        account_id:
          type: string
          description: 作業ガイドを更新したユーザーのアカウントID
        updated_datetime:
          type: string
          format: date-time
          description: 作業ガイドの最終更新日時
    InstructionImage:
      type: object
      required:
        - image_id
        - path
        - url
        - etag
      properties:
        image_id:
          $ref: "#/components/schemas/InstructionImageId"
        path:
          type: string
          example: "s3://ANNOFAB-BUCKET/PATH/TO/INSTRUCTION_IMAGE"
          description: |
            作業ガイド画像の実体が保存されたパスです。
        url:
          type: string
          format: uri
          example: https://annofab.com/projects/PROJECT_ID/instruction-images/IMAGE_ID
          description:
            作業ガイド画像を取得するためのシステム内部用のURLです。
        etag:
          type: string
          description: |
            [HTTPレスポンスヘッダー ETag](https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/ETag)に相当する値です。
          example: "\"33a64df551425fcc55e4d42a148795d9f25f89d4\""
    ValidationError:
      oneOf:
        - $ref: "#/components/schemas/InvalidAnnotationData"
        - $ref: "#/components/schemas/DuplicatedSegmentationV2"
        - $ref: "#/components/schemas/InvalidValue"
        - $ref: "#/components/schemas/UnknownLinkTarget"
        - $ref: "#/components/schemas/InvalidLinkTarget"
        - $ref: "#/components/schemas/InvalidChoice"
        - $ref: "#/components/schemas/DuplicatedV1"
        - $ref: "#/components/schemas/DuplicatedV2"
        - $ref: "#/components/schemas/UnknownAdditionalData"
        - $ref: "#/components/schemas/OverlappedRangeAnnotation"
        - $ref: "#/components/schemas/UnknownLabel"
      discriminator:
        propertyName: "_type"
        mapping:
          InvalidAnnotationData: "#/components/schemas/InvalidAnnotationData"
          DuplicatedSegmentationV2: "#/components/schemas/DuplicatedSegmentationV2"
          InvalidValue: "#/components/schemas/InvalidValue"
          UnknownLinkTarget: "#/components/schemas/UnknownLinkTarget"
          InvalidLinkTarget: "#/components/schemas/InvalidLinkTarget"
          InvalidChoice: "#/components/schemas/InvalidChoice"
          Duplicated: "#/components/schemas/DuplicatedV1"
          DuplicatedV2: "#/components/schemas/DuplicatedV2"
          UnknownAdditionalData: "#/components/schemas/UnknownAdditionalData"
          OverlappedRangeAnnotation: "#/components/schemas/OverlappedRangeAnnotation"
          UnknownLabel: "#/components/schemas/UnknownLabel"
    InvalidAnnotationData:
      type: object
      description: アノテーションデータ不正エラー
      required:
        - _type
        - label_id
        - annotation_id
        - message
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        message:
          type: string
        _type:
          type: string
          description: InvalidAnnotationData
          example: "InvalidAnnotationData"
    DuplicatedSegmentationV2:
      type: object
      description: 塗りつぶしv2のラベルに対する1ラベルにつき1アノテーションまでの制約違反エラー
      required:
        - _type
        - label_id
        - annotation_ids
      properties:
        label_id:
          type: string
        annotation_ids:
          type: array
          items:
            type: string
        _type:
          type: string
          description: DuplicatedSegmentationV2
          example: "DuplicatedSegmentationV2"
    InvalidValue:
      type: object
      description: 値制約に合致しないエラー
      required:
        - _type
        - label_id
        - annotation_id
        - additional_data_definition_id
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        additional_data_definition_id:
          type: string
        _type:
          type: string
          description: InvalidValue
          example: "InvalidValue"
    UnknownLinkTarget:
      type: object
      description: 指定されたIDに該当するアノテーションが存在しないエラー
      required:
        - _type
        - label_id
        - annotation_id
        - additional_data_definition_id
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        additional_data_definition_id:
          type: string
        _type:
          type: string
          description: UnknownLinkTarget
          example: "UnknownLinkTarget"
    InvalidLinkTarget:
      type: object
      description: リンク先アノテーションが許可されているラベルでないエラー
      required:
        - _type
        - label_id
        - annotation_id
        - additional_data_definition_id
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        additional_data_definition_id:
          type: string
        _type:
          type: string
          description: InvalidLinkTarget
          example: "InvalidLinkTarget"
    InvalidChoice:
      type: object
      description: 選択肢不正エラー
      required:
        - _type
        - label_id
        - annotation_id
        - additional_data_definition_id
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        additional_data_definition_id:
          type: string
        _type:
          type: string
          description: InvalidChoice
          example: "InvalidChoice"
    DuplicatedV1:
      type: object
      description: 値の重複が許可されていない属性の重複エラー
      required:
        - _type
        - label_id
        - annotation_id
        - additional_data
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        additional_data:
          $ref: "#/components/schemas/AdditionalDataV1"
        _type:
          type: string
          enum: ["Duplicated"]
    DuplicatedV2:
      type: object
      description: 値の重複が許可されていない属性の重複エラー
      required:
        - _type
        - label_id
        - annotation_id
        - additional_data_definition_id
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        additional_data_definition_id:
          type: string
        _type:
          type: string
          enum: ["DuplicatedV2"]
    UnknownAdditionalData:
      type: object
      description: 何らかの原因で、アノテーション仕様にない属性がついているエラー
      required:
        - _type
        - label_id
        - annotation_id
        - additional_data_definition_id
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        additional_data_definition_id:
          type: string
        _type:
          type: string
          description: UnknownAdditionalData
          example: "UnknownAdditionalData"
    OverlappedRangeAnnotation:
      type: object
      description: 区間が重複しているアノテーションが存在している場合に発生するエラー
      required:
        - _type
        - label_id
        - annotation_id
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        _type:
          type: string
          description: OverlappedRangeAnnotation
          example: "OverlappedRangeAnnotation"
    UnknownLabel:
      type: object
      description: 何らかの原因で、アノテーション仕様にないラベルがついているエラー
      required:
        - _type
        - label_id
        - annotation_id
      properties:
        label_id:
          type: string
        annotation_id:
          type: string
        _type:
          type: string
          description: UnknownLabel
          example: "UnknownLabel"
    InspectionValidationError:
      oneOf:
        - $ref: "#/components/schemas/NoCommentInspection"
        - $ref: "#/components/schemas/ReplyRequired"
        - $ref: "#/components/schemas/ActionRequired"
        - $ref: "#/components/schemas/InspectionOrReplyRequired"
        - $ref: "#/components/schemas/IllegalState"
      discriminator:
        propertyName: "_type"
        mapping:
          NoCommentInspection: "#/components/schemas/NoCommentInspection"
          ReplyRequired: "#/components/schemas/ReplyRequired"
          ActionRequired: "#/components/schemas/ActionRequired"
          InspectionOrReplyRequired: "#/components/schemas/InspectionOrReplyRequired"
          IllegalState: "#/components/schemas/IllegalState"
    NoCommentInspection:
      type: object
      description: 空の検査コメントがある時のエラー
      required:
        - _type
        - inspection
      properties:
        inspection:
          $ref: "#/components/schemas/Inspection"
        _type:
          type: string
          description: NoCommentInspection
          example: "NoCommentInspection"
    ReplyRequired:
      type: object
      description: 返信が必要な検査コメントが残っている時のエラー
      required:
        - _type
        - inspection
      properties:
        inspection:
          $ref: "#/components/schemas/Inspection"
        _type:
          type: string
          description: ReplyRequired
          example: "ReplyRequired"
    ActionRequired:
      type: object
      description: 対応が必要な検査コメントが残っている時のエラー
      required:
        - _type
        - inspection
      properties:
        inspection:
          $ref: "#/components/schemas/Inspection"
        _type:
          type: string
          description: ActionRequired
          example: "ActionRequired"
    InspectionOrReplyRequired:
      type: object
      description: 新規検査コメントまたは未対応検査コメントへの返信が必要である時のエラー
      required:
        - _type
      properties:
        _type:
          type: string
          description: InspectionOrReplyRequired
          example: "InspectionOrReplyRequired"
    IllegalState:
      type: object
      description: 作業が開始されていない、担当が割り当たっていない等のエラー
      required:
        - _type
      properties:
        _type:
          type: string
          description: IllegalState
          example: "IllegalState"
    CommentValidationError:
      oneOf:
        - $ref: "#/components/schemas/NoComment"
        - $ref: "#/components/schemas/UpdateStatusRequired"
      discriminator:
        propertyName: "_type"
        mapping:
          NoComment: "#/components/schemas/NoComment"
          UpdateStatusRequired: "#/components/schemas/UpdateStatusRequired"
    NoComment:
      type: object
      description: 空のコメントがある時のエラー
      required:
        - _type
        - comment
      properties:
        comment:
          $ref: "#/components/schemas/Comment"
        _type:
          type: string
          enum: ["NoComment"]
    UpdateStatusRequired:
      type: object
      description: 状態変更が必要である時のエラー
      required:
        - _type
        - comment
      properties:
        comment:
          $ref: "#/components/schemas/Comment"
        _type:
          type: string
          enum: ["UpdateStatusRequired"]
    ProjectTaskCounts:
      type: object
      required:
        - project_id
        - task_counts
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_counts:
          type: array
          items:
            type: object
            required:
              - phase
              - status
              - count
            properties:
              phase:
                $ref: "#/components/schemas/TaskPhase"
              status:
                $ref: "#/components/schemas/TaskStatus"
              count:
                description: 該当するタスクの数
                type: number
    TemporaryUrlString:
      type: string
      description: |
        このURLは発行から1時間経過すると無効になります。
      example: "https://.."
    TemporaryUrl:
      type: object
      description: 認証済み一時URL
      required:
        - url
      properties:
        url:
          $ref: "#/components/schemas/TemporaryUrlString"
    AnnotationList:
      type: object
      required:
        - list
        - page_no
        - total_page_no
        - total_count
        - over_limit
        - aggregations
      properties:
        list:
          type: array
          items:
            $ref: "#/components/schemas/SingleAnnotation"
          description: 現在のページ番号に含まれる0件以上のアノテーションです。
        page_no:
          type: number
          description: 現在のページ番号です。
        total_page_no:
          type: number
          description: 指定された条件にあてはまる検索結果の総ページ数。検索条件に当てはまるアノテーションが0件であっても、総ページ数は1となります。
        total_count:
          type: number
          description: 検索結果の総件数。
        over_limit:
          type: boolean
          description: 検索結果が1万件を超えた場合にtrueとなる。
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/AggregationResult"
          description: |
            [Aggregationによる集約結果](#section/API-Convention/AggregationResult)。
    InputDataList:
      type: object
      required:
        - list
        - page_no
        - total_page_no
        - total_count
        - over_limit
        - aggregations
      properties:
        list:
          type: array
          items:
            $ref: "#/components/schemas/InputData"
          description: 現在のページ番号に含まれる0件以上の入力データです。
        page_no:
          type: number
          description: 現在のページ番号です。
        total_page_no:
          type: number
          description: 指定された条件にあてはまる検索結果の総ページ数。検索条件に当てはまる入力データが0件であっても、総ページ数は1となります。
        total_count:
          type: number
          description: 検索結果の総件数。
        over_limit:
          type: boolean
          description: 検索結果の件数が1万件を超えた場合は`true`になります。
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/AggregationResult"
          description: |
            システム内部用のプロパティ。
    ProjectJobInfoContainer:
      type: object
      required:
        - list
        - has_next
      properties:
        list:
          description: バックグラウンドジョブの一覧。作成日時の降順でソートされています。
          type: array
          items:
            $ref: "#/components/schemas/ProjectJobInfo"
        has_next:
          type: boolean
          description: さらに古いジョブが存在する場合は`true`です。取得したジョブ一覧の中で`created_datetime`が最も古い値を、クエリパラメータ`exclusive_start_created_datetime`に指定することで、さらに古いジョブを取得することができます。
    OrganizationJobInfoContainer:
      type: object
      required:
        - list
        - has_next
      properties:
        list:
          description: バックグラウンドジョブの一覧。作成日時の降順でソートされています。
          type: array
          items:
            $ref: "#/components/schemas/OrganizationJobInfo"
        has_next:
          type: boolean
          description: さらに古いジョブが存在する場合は`true`です。取得したジョブ一覧の中で`created_datetime`が最も古い値を、クエリパラメータ`exclusive_start_created_datetime`に指定することで、さらに古いジョブを取得することができます。
    MyOrganizationList:
      type: object
      required:
        - list
        - page_no
        - total_page_no
        - total_count
        - over_limit
        - aggregations
      properties:
        list:
          type: array
          items:
            $ref: "#/components/schemas/MyOrganization"
          description: 現在のページ番号に含まれる0件以上の所属組織です。
        page_no:
          type: number
          description: 現在のページ番号です。
        total_page_no:
          type: number
          description: 指定された条件にあてはまる検索結果の総ページ数。検索条件に当てはまる所属組織が0件であっても、総ページ数は1となります。
        total_count:
          type: number
          description: 検索結果の総件数。
        over_limit:
          type: boolean
          description: 検索結果が1万件を超えた場合にtrueとなる。
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/AggregationResult"
          description: |
            システム内部用のプロパティ。
    ProjectList:
      type: object
      required:
        - list
        - page_no
        - total_page_no
        - total_count
        - over_limit
        - aggregations
      properties:
        list:
          type: array
          items:
            $ref: "#/components/schemas/Project"
          description: 現在のページ番号に含まれる0件以上のプロジェクトです。
        page_no:
          type: number
          description: 現在のページ番号です。
        total_page_no:
          type: number
          description: 指定された条件にあてはまる検索結果の総ページ数。検索条件に当てはまるプロジェクトが0件であっても、総ページ数は1となります。
        total_count:
          type: number
          description: 検索結果の総件数。
        over_limit:
          type: boolean
          description: 検索結果が1万件を超えた場合にtrueとなる。
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/AggregationResult"
          description: |
            システム内部用のプロパティ
    OrganizationMemberList:
      type: object
      required:
        - list
        - page_no
        - total_page_no
        - total_count
        - over_limit
        - aggregations
      properties:
        list:
          description: 組織メンバーの一覧
          type: array
          items:
            $ref: "#/components/schemas/OrganizationMember"
        page_no:
          type: number
          description: 現在のページ番号です。
        total_page_no:
          type: number
          description: 指定された条件にあてはまる検索結果の総ページ数。検索条件に当てはまる組織メンバーが0件であっても、総ページ数は1となります。
        total_count:
          type: number
          description: 検索結果の総件数。
        over_limit:
          type: boolean
          description: 検索結果が1万件を超えた場合にtrueとなる。
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/AggregationResult"
          description: |
            システム内部用のプロパティ
    OrganizationPluginList:
        type: object
        required:
          - list
          - page_no
          - total_page_no
          - total_count
          - over_limit
          - aggregations
        properties:
          list:
            description: プラグイン一覧
            type: array
            items:
              $ref: "#/components/schemas/OrganizationPlugin"
          page_no:
            type: number
            description: 現在のページ番号です。
          total_page_no:
            type: number
            description: 指定された条件にあてはまる検索結果の総ページ数。検索条件に当てはまるプロジェクトが0件であっても、総ページ数は1となります。
          total_count:
            type: number
            description: 検索結果の総件数。
          over_limit:
            type: boolean
            description: 検索結果が1万件を超えた場合にtrueとなる。
          aggregations:
            type: array
            items:
              type: object
            description: |
              システム内部用のプロパティ。
    ProjectMemberList:
      type: object
      required:
        - list
        - page_no
        - total_page_no
        - total_count
        - over_limit
        - aggregations
      properties:
        list:
          description: プロジェクトメンバーの一覧
          type: array
          items:
            $ref: "#/components/schemas/ProjectMember"
        page_no:
          type: number
          description: 現在のページ番号。
        total_page_no:
          type: number
          description: 指定された条件にあてはまる検索結果の総ページ数。検索条件に当てはまるプロジェクトメンバーが0件であっても、総ページ数は1となります。
        total_count:
          type: number
          description: 検索結果の総件数。
        over_limit:
          type: boolean
          description: 検索結果が1万件を超えた場合にtrueとなる。
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/AggregationResult"
          description: |
            システム内部用のプロパティ
    TaskList:
      type: object
      required:
        - list
        - page_no
        - total_page_no
        - total_count
        - over_limit
        - aggregations
      properties:
        list:
          type: array
          items:
            $ref: "#/components/schemas/Task"
          description: 現在のページ番号に含まれる0件以上のタスクです。
        page_no:
          type: number
          description: 現在のページ番号です。
        total_page_no:
          type: number
          description: 指定された条件にあてはまる検索結果の総ページ数。検索条件に当てはまるタスク0件であっても、総ページ数は1となります。
        total_count:
          type: number
          description: 検索結果の総件数。
        over_limit:
          type: boolean
          description: 検索結果が1万件を超えた場合にtrueとなる。
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/AggregationResult"
          description: |
            [Aggregationによる集約結果](#section/API-Convention/AggregationResult)。
    BatchAnnotationRequestItem:
      oneOf:
        - $ref: "#/components/schemas/BatchAnnotationRequestItemPutV1"
        - $ref: "#/components/schemas/BatchAnnotationRequestItemPutV2"
        - $ref: "#/components/schemas/BatchAnnotationRequestItemDelete"
      discriminator:
        propertyName: "_type"
        mapping:
          Put: "#/components/schemas/BatchAnnotationRequestItemPutV1"
          PutV2: "#/components/schemas/BatchAnnotationRequestItemPutV2"
          Delete: "#/components/schemas/BatchAnnotationRequestItemDelete"
    BatchInspectionRequestItem:
      oneOf:
        - $ref: "#/components/schemas/BatchInspectionRequestItemPut"
        - $ref: "#/components/schemas/BatchInspectionRequestItemDelete"
      discriminator:
        propertyName: "_type"
        mapping:
          Put: "#/components/schemas/BatchInspectionRequestItemPut"
          Delete: "#/components/schemas/BatchInspectionRequestItemDelete"
    BatchInputDataRequestItem:
      oneOf:
        - $ref: "#/components/schemas/BatchInputDataRequestItemDelete"
      discriminator:
        propertyName: "_type"
        mapping:
          Delete: "#/components/schemas/BatchInputDataRequestItemDelete"
    BatchTaskRequestItem:
      oneOf:
        - $ref: "#/components/schemas/BatchTaskRequestItemDelete"
      discriminator:
        propertyName: "_type"
        mapping:
          Delete: "#/components/schemas/BatchTaskRequestItemDelete"
    AdditionalDataDefaultType:
      oneOf:
        - type: boolean
        - type: integer
        - type: string
      description: |
        属性の初期値です。

        初期値を設定する場合、属性の種類に応じて次の値を指定してください。
        属性の種類に対して有効でない初期値を指定した場合、その初期値は無視されます。

        |属性の種類（`type`）                 | 指定できる初期値|
        |-----------------|----------|
        | flag    | 真偽値(`true` or `false`)|
        | integer    | 整数値         |
        | text | 文字列         |
        | comment         | 文字列|
        | choice        | 選択肢(`choices`)の `choice_id` |
        | select           | 選択肢(`choices`)の`choice_id`|

        属性の種類が`tracking`または`link`の場合、初期値を設定できません。

        初期値を設定しない場合は、nullまたは空文字を指定してください。
    AnnotationSpecs:
      oneOf:
        - $ref: "#/components/schemas/AnnotationSpecsV1"
        - $ref: "#/components/schemas/AnnotationSpecsV2"
        - $ref: "#/components/schemas/AnnotationSpecsV3"
    AnnotationSpecsRequest:
      oneOf:
        - $ref: "#/components/schemas/AnnotationSpecsRequestV1"
        - $ref: "#/components/schemas/AnnotationSpecsRequestV2"
        - $ref: "#/components/schemas/AnnotationSpecsRequestV3"
    TaskGenerateResponseWrapper:
      oneOf:
        - $ref: "#/components/schemas/Project"
        - $ref: "#/components/schemas/TaskGenerateResponse"
    PostAnnotationArchiveUpdateResponseWrapper:
      oneOf:
        - $ref: "#/components/schemas/Message"
        - $ref: "#/components/schemas/PostAnnotationArchiveUpdateResponse"
    MessageOrJobInfo:
      oneOf:
        - $ref: "#/components/schemas/Message"
        - $ref: "#/components/schemas/ProjectJobInfo"
    YearMonth:
      type: string
      description: 対象月。年月のフォーマットは YYYY-MM です。
      example: "2022-07"
    EditorUsageTimespan:
      type: object
      description: エディタごとの利用時間
      required:
        - editor_name
        - value
      properties:
        editor_name:
          type: string
          description: |
            エディタ名です。

            | editor_nameの値 | エディタ名   |
            |-----------------|--------------|
            | image_editor    | 画像エディタ |
            | video_editor    | 動画エディタ |
            | 3d_editor       | 3Dエディタ   |
        value:
          type: number
          description: エディタ利用時間。単位は時
    UsageStatus:
      type: object
      description: 利用状況
      required:
        - organization_id
        - year_month
        - aggregation_period_from
        - aggregation_period_to
        - editor_usage
        - storage_usage
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        year_month:
          $ref: "#/components/schemas/YearMonth"
        aggregation_period_from:
          type: string
          format: date-time
          description: 集計期間の開始日時。日時のフォーマットはISO 8601 拡張形式です。
        aggregation_period_to:
          type: string
          format: date-time
          description: 集計期間の終了日時。日時のフォーマットはISO 8601 拡張形式です。
        editor_usage:
          type: array
          description: エディタ利用時間のリスト
          items:
            $ref: "#/components/schemas/EditorUsageTimespan"
        storage_usage:
          type: number
          description: ストレージ利用量。単位はGB時
    UsageStatusByDay:
      type: object
      description: 日ごとの利用状況
      required:
        - organization_id
        - date
        - aggregation_period_from
        - aggregation_period_to
        - editor_usage
        - storage_usage
        - created_datetime
      properties:
        organization_id:
          $ref: "#/components/schemas/OrganizationId"
        date:
          type: string
          format: date
          description: 対象日。日付のフォーマットはISO 8601 拡張形式です。
        aggregation_period_from:
          type: string
          format: date-time
          description: 集計期間の開始日時。日時のフォーマットはISO 8601 拡張形式です。
        aggregation_period_to:
          type: string
          format: date-time
          description: 集計期間の終了日時。日時のフォーマットはISO 8601 拡張形式です。
        editor_usage:
          type: array
          description: エディタ利用時間のリスト
          items:
            $ref: "#/components/schemas/EditorUsageTimespan"
        storage_usage:
          type: number
          description: ストレージ利用量。単位はGB時
        created_datetime:
          type: string
          format: date-time
          description: このデータの生成日時。
    UsageStatusCsvFileUrl:
      type: object
      description: 利用状況詳細のCSVファイルのURL
      required:
        - url
      properties:
        url:
          type: string
          description: CSVファイルのURL
    MyNotificationList:
      type: object
      description: 自分に届いているユーザー通知の取得結果です。
      required:
        - messages
        - opened
        - total
        - page
        - page_total
        - over_limit
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/MyNotificationMessage"
        opened:
          type: integer
          description: |
            開封済みの通知メッセージの数。
            over_limitがtrueの場合、メッセージのタイムスタンプが新しい順から10000件のメッセージをもとに集計される
        total:
          type: integer
          description: |
            通知メッセージの総数
        page:
          type: integer
          description: |
            messagesに含まれる通知メッセージが何ページ目のものか
        page_total:
          type: integer
          description: |
            ページ数の総数
        over_limit:
          type: boolean
          description: |
            通知メッセージの取得上限を超えているか
    MyNotificationMessage:
      type: object
      description: 自分への通知メッセージの情報です。
      required:
        - message_id
        - title
        - body
        - opened
        - timestamp
        - created_datetime
      properties:
        message_id:
          $ref: "#/components/schemas/NotificationMessageId"
        title:
          $ref: "#/components/schemas/NotificationMessageTitle"
        body:
          $ref: "#/components/schemas/NotificationMessageBody"
        content_type:
          $ref: "#/components/schemas/NotificationMessageContentType"
        opened:
          type: boolean
          description: |
            自身がメッセージを開封したか(開封済みの場合true)
        timestamp:
          type: string
          description: |
            最後に通知メッセージ内容を更新した日時。更新がない場合はメッセージ作成日時
          format: date-time
        created_datetime:
          type: string
          description: |
            メッセージ作成日時
          format: date-time
    NotificationMessageTitle:
      type: string
      description: |
        メッセージ通知のタイトル
    NotificationMessageBody:
      type: string
      description: |
        メッセージ通知の本文
    NotificationMessageContentType:
      type: string
      description: |
        メッセージのコンテンツタイプ。
        メッセージを表示する際のマークアップのヒントとして使われることを想定しています。
    PutMyNotificationMessageOpenedRequest:
      type: object
      properties:
        opened:
          type: boolean
          description: |
            メッセージの開封状態に対するアクション。
            trueが指定された場合は開封済みの状態、falseが指定された場合は未開封の状態にします。
    MyNotificationUnreadMessagesCount:
      type: object
      description: 通知メッセージの未読件数
      required:
        - unread
      properties:
        unread:
          type: integer
          description: 通知メッセージの未読件数
    PersonalAccessToken:
      type: object
      description: パーソナルアクセストークン
      required:
        - id
        - token
        - account_id
        - note
        - expired_datetime
        - permissions
        - created_datetime
      properties:
        id:
          $ref: "#/components/schemas/PersonalAccessTokenId"
        token:
          type: string
          description:  |
            APIアクセスに用いるトークン文字列。
            リクエストヘッダにおいて `Authorization: Bearer {token}` の形で指定します。
        account_id:
          $ref: "#/components/schemas/AccountId"
        note:
          type: string
          description: 人間可読なトークンの説明
        expired_datetime:
          type: string
          description: トークンの有効期限
          format: date-time
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/PersonalAccessTokenPermission"
          description: トークンが持つ権限
        created_datetime:
          type: string
          description: トークンの作成時刻
          format: date-time
        last_used_datetime:
          type: string
          description: トークンの最終利用時刻
          format: date-time
    PersonalAccessTokenInfo:
      type: object
      description: パーソナルアクセストークンから実際のトークン文字列を取り除いたもの
      required:
        - id
        - account_id
        - note
        - expired_datetime
        - permissions
        - created_datetime
      properties:
        id:
          $ref: "#/components/schemas/PersonalAccessTokenId"
        account_id:
          $ref: "#/components/schemas/AccountId"
        note:
          type: string
          description: 人間可読なトークンの説明
        expired_datetime:
          type: string
          description: トークンの有効期限
          format: date-time
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/PersonalAccessTokenPermission"
          description: トークンが持つ権限
        created_datetime:
          type: string
          description: トークンの作成時刻
          format: date-time
        last_used_datetime:
          type: string
          description: トークンの最終利用時刻
          format: date-time
    IssuePersonalAccessTokenRequest:
      type: object
      required:
        - id
        - note
        - expired_datetime
        - permissions
      properties:
        id:
          $ref: "#/components/schemas/PersonalAccessTokenId"
        note:
          type: string
          description: 人間可読なトークンの説明
        expiration:
          type: number
          description: トークンの期間。 単位はミリ秒
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/PersonalAccessTokenPermission"
          description: トークンに与える権限
    RevokePersonalAccessTokenRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: 失効させる対象トークンのID
    PersonalAccessTokenPermission:
      oneOf:
        - $ref: "#/components/schemas/PersonalAccessTokenPermissionAll"
      discriminator:
        propertyName: "_type"
        mapping:
          All: "#/components/schemas/PersonalAccessTokenPermissionAll"
    PersonalAccessTokenPermissionAll:
        type: object
        description: トークンにトークン発行者と完全に同等の権限を与える
        required:
            - _type
        properties:
            _type:
              type: string
              enum: ["All"]
    OrganizationIdpId:
      type: string
      description: 組織IDプロバイダーのID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    OidcIssuer:
        type: string
        format: uri
        description: RFC 8414で定義されるissuerの値。 `.well-known/openid-configuration`のissuer。
    OidcEndpoints:
      oneOf:
        - $ref: "#/components/schemas/IssuerOnlyOidcEndpoints"
        - $ref: "#/components/schemas/AllOidcEndpoints"
      discriminator:
        propertyName: "_type"
        mapping:
          IssuerOnly: "#/components/schemas/IssuerOnlyOidcEndpoints"
          All: "#/components/schemas/AllOidcEndpoints"
    IssuerOnlyOidcEndpoints:
      type: object
      description: OIDCエンドポイント
      required:
        - _type
        - issuer
      properties:
        _type:
          type: string
          enum: ["IssuerOnly"]
        issuer:
          $ref: "#/components/schemas/OidcIssuer"
    AllOidcEndpoints:
      type: object
      description: OIDCエンドポイント
      required:
        - _type
        - issuer
        - authorize_url
        - token_url
        - userinfo_url
        - jwks_url
      properties:
        _type:
          type: string
          enum: ["All"]
        issuer:
          $ref: "#/components/schemas/OidcIssuer"
        authorize_url:
          type: string
          format: uri
          description: RFC 8414（及びRFC6749）で定義される、authorization_endpointのURL
        token_url:
          type: string
          format: uri
          description: RFC 8414（及びRFC6749）で定義される、token_endpointのURL
        userinfo_url:
          type: string
          format: uri
          description: OpenID Connect Core 1.0で定義される、UserInfo EndpointのURL
        jwks_url:
          type: string
          format: uri
          description: RFC 8414で定義される、jwks_uriの値
    OidcAttributeMapping:
      type: object
      description: 外部IDプロバイダー上の属性と、Annofabが認識する属性のマッピング
      required:
        - name
        - email
      properties:
        email:
          type: string
          description: Eメールアドレスを表す外部IDプロバイダー上の属性名
        name:
          type: string
          description: ユーザーの表示名を表す外部IDプロバイダー上の属性名
    OrganizationOidcIdp:
      type: object
      description: 組織が利用する外部IDプロバイダー設定
      required:
        - id
        - organization_name
        - client_id
        - client_secret
        - attributes_request_method
        - endpoints
        - attribute_mapping
        - sign_up_url
        - created_datetime
        - updated_datetime
      properties:
        id:
          $ref: "#/components/schemas/OrganizationIdpId"
        organization_name:
          $ref: "#/components/schemas/OrganizationName"
          description: 組織IDプロバイダーが所属する組織名
        client_id:
          type: string
          description: 外部IDプロバイダーで指定されたクライアントID
        client_secret:
          type: string
          description: 外部IDプロバイダーで指定されたクライアントシークレット
        attributes_request_method:
            type: string
            enum: ["GET", "POST"]
            description: |
                ユーザー属性を取得する際に利用するリクエストメソッド
        endpoints:
          $ref: "#/components/schemas/OidcEndpoints"
        attribute_mapping:
          $ref: "#/components/schemas/OidcAttributeMapping"
        sign_up_url:
          type: string
          format: uri
          description: |
            組織IDプロバイダーを用いたユーザ登録時、ユーザがアクセスすべきURL
        created_datetime:
          type: string
          format: date-time
          description: IDプロバイダー設定の作成日時
        updated_datetime:
          type: string
          format: date-time
          description: IDプロバイダー設定の更新日時
    PutOrganizationIdpBody:
      type: object
      description: 組織が利用するIDプロバイダー設定
      required:
        - client_id
        - client_secret
        - attributes_request_method
        - endpoints
        - attribute_mapping
      properties:
        client_id:
          type: string
          description: 外部IDプロバイダーで指定されたクライアントID
        client_secret:
          type: string
          description: 外部IDプロバイダーで指定されたクライアントシークレット
        attributes_request_method:
          type: string
          enum: ["GET", "POST"]
          description: |
            ユーザー属性を取得する際に利用するリクエストメソッド
        endpoints:
          $ref: "#/components/schemas/OidcEndpoints"
        attribute_mapping:
          $ref: "#/components/schemas/OidcAttributeMapping"
    ExternalIdpDeterminant:
      oneOf:
        - $ref: "#/components/schemas/GlobalIdpNameDeterminant"
        - $ref: "#/components/schemas/OrganizationIdpIdDeterminant"
        - $ref: "#/components/schemas/UserIdDeterminant"
      discriminator:
        propertyName: "_type"
        mapping:
          GlobalIdpName: "#/components/schemas/GlobalIdpNameDeterminant"
          OrganizationIdpId: "#/components/schemas/OrganizationIdpIdDeterminant"
          UserId: "#/components/schemas/UserIdDeterminant"
    GlobalIdpNameDeterminant:
      type: object
      description: Annofab全体で利用するIDプロバイダー名を元に外部IDプロバイダーを特定する決定因子
      required:
        - _type
        - name
      properties:
        _type:
          type: string
          enum: ["GlobalIdpName"]
        name:
          type: string
          enum: ["Google"]
    OrganizationIdpIdDeterminant:
      type: object
      description: 組織名とIDプロバイダーIDを元に外部IDプロバイダーを特定する決定因子
      required:
        - _type
        - organization_name
        - provider_id
      properties:
        _type:
          type: string
          enum: ["OrganizationIdpId"]
        organization_name:
          $ref: "#/components/schemas/OrganizationName"
          description: 組織名
        provider_id:
          $ref: "#/components/schemas/OrganizationIdpId"
          description: 組織IDプロバイダーのID
    UserIdDeterminant:
      type: object
      description: ユーザーIDを元に外部IDプロバイダーを特定する決定因子。 指定されたユーザが利用すべき外部IDプロバイダーが一つに定まる場合に、その一つを特定する。
      required:
        - _type
        - user_id
      properties:
        _type:
          type: string
          enum: ["UserId"]
        user_id:
          $ref: "#/components/schemas/UserId"
          description: ユーザーID
    AnnotationThumbnail:
      type: object
      description: アノテーションのサムネイル情報
      required:
        - project_id
        - task_id
        - input_data_id
        - images
        - annotations
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
        images:
          type: array
          description: サムネイル画像情報の一覧
          items:
            $ref: "#/components/schemas/AnnotationThumbnailImage"
        annotations:
          type: object
          description: アノテーションIDをキーとしたサムネイル情報
          additionalProperties:
            $ref: "#/components/schemas/AnnotationThumbnailDetail"
        annotation_updated_datetime:
          type: string
          format: date-time
          description: サムネイルの元になったアノテーションの更新日時。サムネイルが未作成の場合はnull。
        created_datetime:
          type: string
          format: date-time
          description: サムネイル登録日時。サムネイルが未作成の場合はnull。
    PutAnnotationThumbnailBody:
      type: object
      description: アノテーションのサムネイル更新リクエスト
      required:
        - images
        - annotations
        - annotation_updated_datetime
      properties:
        images:
          type: array
          description: アップロードするサムネイル画像の一覧
          items:
            $ref: "#/components/schemas/AnnotationThumbnailImageSource"
        annotations:
          type: object
          description: アノテーションIDをキーとしたサムネイル情報
          additionalProperties:
            $ref: "#/components/schemas/AnnotationThumbnailDetail"
        annotation_updated_datetime:
          type: string
          format: date-time
          description: サムネイルの元になったアノテーションの更新日時。 [putAnnotation](#operation/putAnnotation) API や [getEditorAnnotation](#operation/getEditorAnnotation) API のレスポンスに含まれる `updated_datetime` を指定します。
    AnnotationThumbnailImage:
      type: object
      required:
        - url
        - width
        - height
      properties:
        _type:
          type: string
          enum: ["Thumbnail"]
        url:
          type: string
          format: uri
          description: サムネイル画像のURL
        width:
          type: integer
          description: 画像の幅
        height:
          type: integer
          description: 画像の高さ
    AnnotationThumbnailImageSource:
      type: object
      required:
        - temporary_path
      properties:
        _type:
          type: string
          enum: ["Upload"]
        temporary_path:
          type: string
          example: "s3://BUCKET/PATH/TO/OBJECT"
          description: 事前にアップロードしたサムネイル画像のパス。 [createTempPath](#operation/createTempPath) APIで取得した `path` の値を指定します。
    AnnotationThumbnailDetail:
      description: |
        - **AnnotationThumbnailDetailImageSlice**:<br>
          画像の一部をサムネイルとして使用する
        - **AnnotationThumbnailDetailUnsupported**:<br>
          サムネイル生成に対応していない
        - **AnnotationThumbnailDetailFailed**:<br>
          サムネイル生成に失敗した
      oneOf:
        - $ref: "#/components/schemas/AnnotationThumbnailDetailImageSlice"
        - $ref: "#/components/schemas/AnnotationThumbnailDetailUnsupported"
        - $ref: "#/components/schemas/AnnotationThumbnailDetailFailed"
      discriminator:
        propertyName: "_type"
        mapping:
          ImageSlice: "#/components/schemas/AnnotationThumbnailDetailImageSlice"
          Unsupported: "#/components/schemas/AnnotationThumbnailDetailUnsupported"
          Failed: "#/components/schemas/AnnotationThumbnailDetailFailed"
    AnnotationThumbnailDetailImageSlice:
      type: object
      description: 画像の一部をサムネイルとして使用する
      required:
        - _type
        - image
        - x
        - y
        - width
        - height
      properties:
        _type:
          type: string
          enum: ["ImageSlice"]
        image:
          type: integer
          description: AnnotationThumbnail.imageのインデックス
        x:
          type: integer
          description: x座標
        y:
          type: integer
          description: y座標
        width:
          type: integer
          description: 幅
        height:
          type: integer
          description: 高さ
    AnnotationThumbnailDetailUnsupported:
      type: object
      description: サムネイル生成に対応していない
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["Unsupported"]
    AnnotationThumbnailDetailFailed:
      type: object
      description: サムネイル生成に失敗した
      required:
        - _type
        - reason
      properties:
        _type:
          type: string
          enum: ["Failed"]
        reason:
          type: string
          description: 失敗理由
    ProjectExtraDataKindId:
      type: string
      example: "12345678-abcd-1234-abcd-1234abcd5678"
      description: |
        プロジェクト追加データの種別ID。[値の制約についてはこちら。](#section/API-Convention/APIID)
    ProjectExtraDataKind:
      type: object
      description: |
        プロジェクトの追加データの種別。
      required:
        - id
        - display_name
        - schema
        - scope
      properties:
        id:
          $ref: "#/components/schemas/ProjectExtraDataKindId"
          description: プロジェクト追加データの種別ID
        display_name:
          $ref: "#/components/schemas/InternationalizationMessage"
          description: プロジェクト追加データの表示名
        schema:
          type: object
          description: プロジェクト追加データのスキーマを表す構造。
        scope:
          $ref: "#/components/schemas/ProjectExtraDataKindScope"
        default_value:
          $ref: "#/components/schemas/ProjectExtraDataValueJson"
          description: プロジェクト追加データのデフォルト値。 デフォルト値が存在しない場合は未指定
    ProjectExtraDataKindScope:
      type: string
      enum: ["project", "user", "both"]
      description: |
        プロジェクト追加データがユーザーとプロジェクトに割りつくかどうかを表す列挙値。

        - `project` => プロジェクトにのみ割りつき、ユーザには割りつかない
        - `user` => ユーザにのみ割りつき、プロジェクトには割りつかない
        - `both` => プロジェクトとユーザの両方に割りつく
    ProjectExtraData:
      type: object
      description: |
        プロジェクトの追加データ。
        追加のプロジェクトの設定や、プロジェクトに対するユーザ毎のデータを表す。
        (project_id, account_id, kind_id)の組み合わせで一意になり、account_idが指定指定されていない場合はユーザに割りつかず、プロジェクト自体に割りついている値を表す。
      required:
        - project_id
        - kind_id
        - value
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
          description: プロジェクトID
        account_id:
          $ref: "#/components/schemas/AccountId"
          description: アカウントID
        kind_id:
          $ref: "#/components/schemas/ProjectExtraDataKindId"
          description: プロジェクト追加データの種別ID
        value:
          $ref: "#/components/schemas/ProjectExtraDataValue"
          description: プロジェクト追加データの値
    ProjectExtraDataValue:
      oneOf:
        - $ref: "#/components/schemas/ProjectExtraDataValueEmpty"
        - $ref: "#/components/schemas/ProjectExtraDataValueDefault"
        - $ref: "#/components/schemas/ProjectExtraDataValueSaved"
      discriminator:
        propertyName: "_type"
        mapping:
          Empty: "#/components/schemas/ProjectExtraDataValueEmpty"
          Default: "#/components/schemas/ProjectExtraDataValueDefault"
          Saved: "#/components/schemas/ProjectExtraDataValueSaved"
    ProjectExtraDataValueEmpty:
      type: object
      description: 保存されているデータが無く、デフォルト値も設定されていない場合
      required:
        - _type
      properties:
        _type:
          type: string
          enum: ["Empty"]
    ProjectExtraDataValueDefault:
      type: object
      description: 保存されているデータが無く、デフォルト値が設定されている場合
      required:
        - _type
        - value
      properties:
        _type:
          type: string
          enum: ["Default"]
        value:
          $ref: "#/components/schemas/ProjectExtraDataValueJson"
    ProjectExtraDataValueSaved:
      type: object
      description: 保存されているデータがある場合
      required:
        - _type
        - value
        - updated_datetime
      properties:
        _type:
          type: string
          enum: ["Saved"]
        value:
          $ref: "#/components/schemas/ProjectExtraDataValueJson"
        updated_datetime:
          type: string
          format: date-time
          description: データが最後に更新された日時
    PutProjectExtraDataBody:
      type: object
      description: プロジェクトの追加データの更新時のリクエストボディ
      required:
        - value
      properties:
        value:
          $ref: "#/components/schemas/ProjectExtraDataValueJson"
        last_updated_datetime:
          type: string
          format: date-time
          description: データの最終更新時刻。新規作成時は未指定、更新時は必須（更新前の日時）
    ProjectExtraDataValueJson:
      description: プロジェクト追加データの値。 nullを除く任意のJson
    TaskIdentifier:
      type: object
      description: タスクを指定するための情報
      required:
        - project_id
        - task_id
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
    GetTasksInBulkResponse:
      type: object
      description: 複数のタスク取得時のレスポンス
      required:
        - success
        - failure
      properties:
        success:
          type: array
          items:
            $ref: "#/components/schemas/Task"
          description: 取得に成功したタスク
        failure:
          type: array
          items:
            $ref: "#/components/schemas/TaskIdentifier"
          description: 取得に失敗したタスクのIDとそのプロジェクトID
    InputDataIdentifier:
      type: object
      description: 入力データを指定するための情報
      required:
        - project_id
        - input_data_id
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
    GetInputDataInBulkResponse:
      type: object
      description: 複数の入力データ取得時のレスポンス
      required:
        - success
        - failure
      properties:
        success:
          type: array
          items:
            $ref: "#/components/schemas/InputData"
          description: 取得に成功した入力データ
        failure:
          type: array
          items:
            $ref: "#/components/schemas/InputDataIdentifier"
          description: 取得に失敗した入力データのIDとそのプロジェクトID
    AnnotationsByInputDataIdIdentifier:
      type: object
      description: アノテーションの所属先
      required:
        - project_id
        - task_id
        - input_data_id
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        task_id:
          $ref: "#/components/schemas/TaskId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
    GetEditorAnnotationsInBulkResponse:
      type: object
      description: 複数の入力データにわたるアノテーション取得時のレスポンス
      required:
        - success
        - failure
      properties:
        success:
          type: array
          items:
            $ref: "#/components/schemas/AnnotationV2Output"
          description: 取得に成功したアノテーション
        failure:
          type: array
          items:
            $ref: "#/components/schemas/AnnotationsByInputDataIdIdentifier"
          description: 取得に失敗したアノテーションの所属先
    SupplementaryDataByInputDataIdIdentifier:
      type: object
      description: 補助情報の所属先
      required:
        - project_id
        - input_data_id
      properties:
        project_id:
          $ref: "#/components/schemas/ProjectId"
        input_data_id:
          $ref: "#/components/schemas/InputDataId"
    GetSupplementaryDataInBulkResponse:
      type: object
      description: 複数の入力データにわたる補助情報取得時のレスポンス
      required:
        - success
        - failure
      properties:
        success:
          type: array
          items:
            $ref: "#/components/schemas/SupplementaryData"
          description: 取得に成功した補助情報
        failure:
          type: array
          items:
            $ref: "#/components/schemas/SupplementaryDataByInputDataIdIdentifier"
          description: 取得に失敗した補助情報の所属先
